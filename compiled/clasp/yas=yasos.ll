; ModuleID = '/Users/karstenpoeck/lisp/coke/program/yas=yasos.lisp'
source_filename = "/Users/karstenpoeck/lisp/coke/program/yas=yasos.lisp"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.13.0"

%0 = type { i8*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }

@":::global-str-/Users/karstenpoeck/lisp/coke/program/yas=yasos.lisp" = private unnamed_addr constant [53 x i8] c"/Users/karstenpoeck/lisp/coke/program/yas=yasos.lisp\00"
@source-file-info-handle = internal global i32 -1
@constants-table = internal global { i8*, i8*, i64 } undef
@"yas=yasos.lisp^1^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^1^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^1^TOP-COMPILE-FILE" = private unnamed_addr constant [34 x i8] c"yas=yasos.lisp^1^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^73^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^73^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^73^TOP-COMPILE-FILE" = private unnamed_addr constant [35 x i8] c"yas=yasos.lisp^73^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^74^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^74^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^74^TOP-COMPILE-FILE" = private unnamed_addr constant [35 x i8] c"yas=yasos.lisp^74^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^76^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^76^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^76^TOP-COMPILE-FILE" = private unnamed_addr constant [35 x i8] c"yas=yasos.lisp^76^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^79^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^79^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^79^TOP-COMPILE-FILE" = private unnamed_addr constant [35 x i8] c"yas=yasos.lisp^79^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^82^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^82^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"%SET-SYMBOL-PLIST^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"%SET-SYMBOL-PLIST^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 88, i64 104, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^82^TOP-COMPILE-FILE" = private unnamed_addr constant [35 x i8] c"yas=yasos.lisp^82^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^86^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^86^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS=INIT_OBJEKTE^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=INIT_OBJEKTE^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 118, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^86^TOP-COMPILE-FILE" = private unnamed_addr constant [35 x i8] c"yas=yasos.lisp^86^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^94^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^94^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^94^TOP-COMPILE-FILE" = private unnamed_addr constant [35 x i8] c"yas=yasos.lisp^94^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^96^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^96^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS-AUSGABE_EIN_OBJEKT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS-AUSGABE_EIN_OBJEKT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 219, i64 234, i64 12, i64 0, i64 1, i64 0 }
@":::global-str-LAMBDA^COMMON-LISP^FN^^" = private unnamed_addr constant [24 x i8] c"LAMBDA^COMMON-LISP^FN^^\00"
@"LAMBDA^COMMON-LISP^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 236, i64 238, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.1^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.1", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 236, i64 250, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.2^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.2", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 236, i64 251, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.3^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.3", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 236, i64 257, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.4^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.4", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 236, i64 263, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.5^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.5", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 236, i64 269, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.6^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.6", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 236, i64 270, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^96^TOP-COMPILE-FILE" = private unnamed_addr constant [35 x i8] c"yas=yasos.lisp^96^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^144^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^144^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@":::global-str-YAS-SPEICHER_NACH_UNTEN^COMMON-LISP-USER^FN^^" = private unnamed_addr constant [46 x i8] c"YAS-SPEICHER_NACH_UNTEN^COMMON-LISP-USER^FN^^\00"
@"YAS-SPEICHER_NACH_UNTEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS-SPEICHER_NACH_UNTEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 286, i64 302, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^144^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^144^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^201^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^201^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@":::global-str-YAS-SPEICHER_EIN_OBJEKT^COMMON-LISP-USER^FN^^" = private unnamed_addr constant [46 x i8] c"YAS-SPEICHER_EIN_OBJEKT^COMMON-LISP-USER^FN^^\00"
@"YAS-SPEICHER_EIN_OBJEKT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS-SPEICHER_EIN_OBJEKT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 277, i64 385, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.7^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.7", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 236, i64 387, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.8^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.8", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 236, i64 398, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.9^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.9", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 236, i64 404, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.10^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.10", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 236, i64 410, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.11^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.11", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 236, i64 421, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.12^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.12", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 236, i64 432, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.13^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.13", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 236, i64 438, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.14^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.14", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 236, i64 449, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^201^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^201^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^228^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^228^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS=ALLE_OBJEKTE^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=ALLE_OBJEKTE^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 461, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^228^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^228^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^231^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^231^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS=NEUE_KLASSE^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=NEUE_KLASSE^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 493, i64 501, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^231^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^231^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^294^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^294^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS=NEUE_INSTANZ^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=NEUE_INSTANZ^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 509, i64 515, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^294^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^294^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^322^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^322^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS=KLASSE_WECHSELN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=KLASSE_WECHSELN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 523, i64 529, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^322^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^322^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^335^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^335^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS=DER_VATER^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=DER_VATER^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 533, i64 537, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^335^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^335^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^344^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^344^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS=LOESCHE_OBJEKT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=LOESCHE_OBJEKT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 549, i64 553, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^344^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^344^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^358^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^358^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS=ALLES_LOESCHEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=ALLES_LOESCHEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 555, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^358^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^358^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^364^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^364^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS=LOESCHE_ALLE_KINDER^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=LOESCHE_ALLE_KINDER^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 565, i64 569, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^364^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^364^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^377^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^377^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS=EINE_KLASSE_P^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=EINE_KLASSE_P^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 281, i64 573, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^377^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^377^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^382^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^382^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS=EINE_INSTANZ_P^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=EINE_INSTANZ_P^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 312, i64 577, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^382^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^382^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^387^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^387^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS=EIN_OBJEKT_P^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=EIN_OBJEKT_P^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 464, i64 583, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^387^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^387^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^394^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^394^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS=SORTIERE_KLASSE^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=SORTIERE_KLASSE^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 592, i64 596, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.15^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.15", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 236, i64 597, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^394^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^394^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^403^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^403^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS-SCHREIBE_INFORMANT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS-SCHREIBE_INFORMANT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 478, i64 612, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^403^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^403^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^410^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^410^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS=LESE_INFORMANT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=LESE_INFORMANT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 332, i64 618, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^410^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^410^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^422^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^422^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@":::global-str-YAS=NEUER_SLOT^COMMON-LISP-USER^FN^^" = private unnamed_addr constant [37 x i8] c"YAS=NEUER_SLOT^COMMON-LISP-USER^FN^^\00"
@"YAS=NEUER_SLOT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=NEUER_SLOT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 486, i64 633, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^422^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^422^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^436^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^436^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS=LOESCHE_SLOT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=LOESCHE_SLOT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 644, i64 648, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^436^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^436^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^447^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^447^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS=HAT_OBJEKT_SLOT_P^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=HAT_OBJEKT_SLOT_P^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 619, i64 652, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^447^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^447^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^456^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^456^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS=ALLE_SLOTS^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=ALLE_SLOTS^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 328, i64 658, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^456^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^456^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^466^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^466^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS=AUCH_ERERBTE_SLOTS^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=AUCH_ERERBTE_SLOTS^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 662, i64 666, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^466^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^466^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^476^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^476^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS=BENUTZER_+_ERERBETE_SLOTS^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=BENUTZER_+_ERERBETE_SLOTS^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 668, i64 672, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^476^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^476^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^480^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^480^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS=BENUTZER_SLOTS^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=BENUTZER_SLOTS^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 674, i64 678, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^480^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^480^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^487^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^487^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS=LESE_WERT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=LESE_WERT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 284, i64 682, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^487^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^487^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^517^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^517^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@":::global-str-YAS=SCHREIBE_WERT^COMMON-LISP-USER^FN^^" = private unnamed_addr constant [40 x i8] c"YAS=SCHREIBE_WERT^COMMON-LISP-USER^FN^^\00"
@"YAS=SCHREIBE_WERT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=SCHREIBE_WERT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 622, i64 693, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^517^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^517^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^539^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^539^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS-ENTHALTEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS-ENTHALTEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 699, i64 705, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^539^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^539^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^547^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^547^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@":::global-str-YAS=SCHREIBE_ZUSAETZLICHEN_WERT^COMMON-LISP-USER^FN^^" = private unnamed_addr constant [54 x i8] c"YAS=SCHREIBE_ZUSAETZLICHEN_WERT^COMMON-LISP-USER^FN^^\00"
@"YAS=SCHREIBE_ZUSAETZLICHEN_WERT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=SCHREIBE_ZUSAETZLICHEN_WERT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 472, i64 714, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^547^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^547^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^565^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^565^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@":::global-str-YAS=LOESCHE_WERT^COMMON-LISP-USER^FN^^" = private unnamed_addr constant [39 x i8] c"YAS=LOESCHE_WERT^COMMON-LISP-USER^FN^^\00"
@"YAS=LOESCHE_WERT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=LOESCHE_WERT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 560, i64 728, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^565^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^565^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^591^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^591^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS=LOESCHE_EINEN_WERT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=LOESCHE_EINEN_WERT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 540, i64 738, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^591^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^591^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^609^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^609^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS=DEFINIERE_METHODE^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=DEFINIERE_METHODE^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 744, i64 752, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^609^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^609^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^617^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^617^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS=DEFINIERE_METHODE_NEU^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=DEFINIERE_METHODE_NEU^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 758, i64 762, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^617^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^617^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^626^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^626^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@":::global-str-YAS=TUE_METHODE^COMMON-LISP-USER^FN^^" = private unnamed_addr constant [38 x i8] c"YAS=TUE_METHODE^COMMON-LISP-USER^FN^^\00"
@"YAS=TUE_METHODE^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=TUE_METHODE^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 766, i64 774, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^626^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^626^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^643^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^643^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS=ALTER_WERT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=ALTER_WERT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 717, i64 778, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^643^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^643^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^655^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^655^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS-ALTER_INFORMANT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS-ALTER_INFORMANT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 719, i64 782, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^655^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^655^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^667^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^667^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS=ALLE^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS=ALLE^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 784, i64 788, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^667^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^667^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^671^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^671^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS-LOESCHE_NACH_UNTEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS-LOESCHE_NACH_UNTEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 789, i64 794, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^671^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^671^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^683^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^683^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS-MERKE_OBJEKT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS-MERKE_OBJEKT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 466, i64 798, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^683^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^683^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^687^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^687^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS-VERGESSE_OBJEKT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS-VERGESSE_OBJEKT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 542, i64 802, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^687^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^687^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^692^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^692^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS-VERGESSE_OBJEKTE^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS-VERGESSE_OBJEKTE^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 562, i64 808, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^692^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^692^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^698^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^698^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS-LOESCHE_SYMBOL^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS-LOESCHE_SYMBOL^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 544, i64 812, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^698^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^698^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^702^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^702^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS-SICHER_WERT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS-SICHER_WERT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 683, i64 819, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^702^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^702^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^714^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^714^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS-VERGESSE_WERT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS-VERGESSE_WERT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 721, i64 824, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^714^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^714^TOP-COMPILE-FILE\00"
@"yas=yasos.lisp^720^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"yas=yasos.lisp^720^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 22, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"YAS-TESTE_OBJEKT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"YAS-TESTE_OBJEKT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 840, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.16^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.16", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 236, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.17^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.17", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 236, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-yas=yasos.lisp^720^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"yas=yasos.lisp^720^TOP-COMPILE-FILE\00"
@"str-*MAKE-SPECIAL" = private unnamed_addr constant [14 x i8] c"*MAKE-SPECIAL\00"
@str-CORE = private unnamed_addr constant [5 x i8] c"CORE\00"
@str-YAS_GEMEINDE = private unnamed_addr constant [13 x i8] c"YAS_GEMEINDE\00"
@str-COMMON-LISP-USER = private unnamed_addr constant [17 x i8] c"COMMON-LISP-USER\00"
@str-BOUNDP = private unnamed_addr constant [7 x i8] c"BOUNDP\00"
@str-COMMON-LISP = private unnamed_addr constant [12 x i8] c"COMMON-LISP\00"
@str-META = private unnamed_addr constant [5 x i8] c"META\00"
@str-SET-DOCUMENTATION = private unnamed_addr constant [18 x i8] c"SET-DOCUMENTATION\00"
@str-VARIABLE = private unnamed_addr constant [9 x i8] c"VARIABLE\00"
@"str-Enthaelt alle definierten Objekte" = private unnamed_addr constant [34 x i8] c"Enthaelt alle definierten Objekte\00"
@str-TOP-LEVEL = private unnamed_addr constant [10 x i8] c"TOP-LEVEL\00"
@str-YAS_LETZTE_DATEI = private unnamed_addr constant [17 x i8] c"YAS_LETZTE_DATEI\00"
@"str-Letzter Wissensbasisname, unter dem gesichert oder geladen wurde" = private unnamed_addr constant [65 x i8] c"Letzter Wissensbasisname, unter dem gesichert oder geladen wurde\00"
@str-YAS_LETZTE_DATEI_INSTANZEN = private unnamed_addr constant [27 x i8] c"YAS_LETZTE_DATEI_INSTANZEN\00"
@str-YAS_STANDARD_SLOTS = private unnamed_addr constant [19 x i8] c"YAS_STANDARD_SLOTS\00"
@str-ALT = private unnamed_addr constant [4 x i8] c"ALT\00"
@str-UNTERKLASSE_VON = private unnamed_addr constant [16 x i8] c"UNTERKLASSE_VON\00"
@str-INSTANZ_VON = private unnamed_addr constant [12 x i8] c"INSTANZ_VON\00"
@str-KINDER = private unnamed_addr constant [7 x i8] c"KINDER\00"
@str-INFORMANT = private unnamed_addr constant [10 x i8] c"INFORMANT\00"
@str-SYMBOL-CONSTANTP = private unnamed_addr constant [17 x i8] c"SYMBOL-CONSTANTP\00"
@str-SPECIALP = private unnamed_addr constant [9 x i8] c"SPECIALP\00"
@str-SET = private unnamed_addr constant [4 x i8] c"SET\00"
@str-FUNCTION = private unnamed_addr constant [9 x i8] c"FUNCTION\00"
@str-SYMBOL = private unnamed_addr constant [7 x i8] c"SYMBOL\00"
@str-SYMBOL-FUNCTION = private unnamed_addr constant [16 x i8] c"SYMBOL-FUNCTION\00"
@str-ERROR = private unnamed_addr constant [6 x i8] c"ERROR\00"
@str-TYPE-ERROR = private unnamed_addr constant [11 x i8] c"TYPE-ERROR\00"
@str-DATUM = private unnamed_addr constant [6 x i8] c"DATUM\00"
@str-KEYWORD = private unnamed_addr constant [8 x i8] c"KEYWORD\00"
@str-EXPECTED-TYPE = private unnamed_addr constant [14 x i8] c"EXPECTED-TYPE\00"
@str-OR = private unnamed_addr constant [3 x i8] c"OR\00"
@"str-Cannot redefine special variable ~a as constant" = private unnamed_addr constant [48 x i8] c"Cannot redefine special variable ~a as constant\00"
@str-SYMBOL-VALUE = private unnamed_addr constant [13 x i8] c"SYMBOL-VALUE\00"
@str-EQ-INCOMPARABLE = private unnamed_addr constant [16 x i8] c"EQ-INCOMPARABLE\00"
@str-CLASP-CLEAVIR = private unnamed_addr constant [14 x i8] c"CLASP-CLEAVIR\00"
@str-EQL-UNDERLYING = private unnamed_addr constant [15 x i8] c"EQL-UNDERLYING\00"
@str-GANZ_FALSCH = private unnamed_addr constant [12 x i8] c"GANZ_FALSCH\00"
@str-YAS_UNMOEGLICH = private unnamed_addr constant [15 x i8] c"YAS_UNMOEGLICH\00"
@str-SYMBOL-PLIST = private unnamed_addr constant [13 x i8] c"SYMBOL-PLIST\00"
@str-FDEFINITION = private unnamed_addr constant [12 x i8] c"FDEFINITION\00"
@"str-%SET-SYMBOL-PLIST" = private unnamed_addr constant [18 x i8] c"%SET-SYMBOL-PLIST\00"
@str-SETF-LAMBDA-LIST = private unnamed_addr constant [17 x i8] c"SETF-LAMBDA-LIST\00"
@str-PLIST = private unnamed_addr constant [6 x i8] c"PLIST\00"
@str-SET-SOURCE-INFO = private unnamed_addr constant [16 x i8] c"SET-SOURCE-INFO\00"
@str-CURRENT-SOURCE-FILE = private unnamed_addr constant [20 x i8] c"CURRENT-SOURCE-FILE\00"
@"str-*CURRENT-FORM-LINENO*" = private unnamed_addr constant [22 x i8] c"*CURRENT-FORM-LINENO*\00"
@str-COMPILER = private unnamed_addr constant [9 x i8] c"COMPILER\00"
@str-GET = private unnamed_addr constant [4 x i8] c"GET\00"
@str-BACKQUOTE-APPEND = private unnamed_addr constant [17 x i8] c"BACKQUOTE-APPEND\00"
@str-LIST = private unnamed_addr constant [5 x i8] c"LIST\00"
@str-SYSTEM = private unnamed_addr constant [7 x i8] c"SYSTEM\00"
@"str-YAS=INIT_OBJEKTE" = private unnamed_addr constant [17 x i8] c"YAS=INIT_OBJEKTE\00"
@str-FORMAT-ERROR = private unnamed_addr constant [13 x i8] c"FORMAT-ERROR\00"
@str-COMPLAINT = private unnamed_addr constant [10 x i8] c"COMPLAINT\00"
@"str-Required argument missing" = private unnamed_addr constant [26 x i8] c"Required argument missing\00"
@str-CONTROL-STRING = private unnamed_addr constant [15 x i8] c"CONTROL-STRING\00"
@"str-(setf (symbol-plist '~A ) ~%'( ~%" = private unnamed_addr constant [34 x i8] c"(setf (symbol-plist '~A ) ~%'( ~%\00"
@str-OFFSET = private unnamed_addr constant [7 x i8] c"OFFSET\00"
@str-WRITE-STRING = private unnamed_addr constant [13 x i8] c"WRITE-STRING\00"
@"str-(setf (symbol-plist '" = private unnamed_addr constant [22 x i8] c"(setf (symbol-plist '\00"
@str-PRINC = private unnamed_addr constant [6 x i8] c"PRINC\00"
@"str- ) " = private unnamed_addr constant [4 x i8] c" ) \00"
@str-TERPRI = private unnamed_addr constant [7 x i8] c"TERPRI\00"
@"str-'( " = private unnamed_addr constant [4 x i8] c"'( \00"
@str-STRINGP = private unnamed_addr constant [8 x i8] c"STRINGP\00"
@str-MAKE-STRING-OUTPUT-STREAM-FROM-STRING = private unnamed_addr constant [38 x i8] c"MAKE-STRING-OUTPUT-STREAM-FROM-STRING\00"
@str-MAKE-STRING-OUTPUT-STREAM = private unnamed_addr constant [26 x i8] c"MAKE-STRING-OUTPUT-STREAM\00"
@str-GET-OUTPUT-STREAM-STRING = private unnamed_addr constant [25 x i8] c"GET-OUTPUT-STREAM-STRING\00"
@"str-*STANDARD-OUTPUT*" = private unnamed_addr constant [18 x i8] c"*STANDARD-OUTPUT*\00"
@"str-~a " = private unnamed_addr constant [4 x i8] c"~a \00"
@"str- " = private unnamed_addr constant [2 x i8] c" \00"
@str-CONS = private unnamed_addr constant [5 x i8] c"CONS\00"
@str-COMPILED-FUNCTION = private unnamed_addr constant [18 x i8] c"COMPILED-FUNCTION\00"
@str-LISTP = private unnamed_addr constant [6 x i8] c"LISTP\00"
@str-VECTOR = private unnamed_addr constant [7 x i8] c"VECTOR\00"
@str-NULL = private unnamed_addr constant [5 x i8] c"NULL\00"
@str-ETYPECASE-ERROR = private unnamed_addr constant [16 x i8] c"ETYPECASE-ERROR\00"
@str-FIXNUM = private unnamed_addr constant [7 x i8] c"FIXNUM\00"
@str-SINGLE-FLOAT = private unnamed_addr constant [13 x i8] c"SINGLE-FLOAT\00"
@str-DOUBLE-FLOAT = private unnamed_addr constant [13 x i8] c"DOUBLE-FLOAT\00"
@str-CONVERT-OVERFLOW-RESULT-TO-BIGNUM = private unnamed_addr constant [34 x i8] c"CONVERT-OVERFLOW-RESULT-TO-BIGNUM\00"
@"str-TWO-ARG-+" = private unnamed_addr constant [10 x i8] c"TWO-ARG-+\00"
@"str-TWO-ARG->" = private unnamed_addr constant [10 x i8] c"TWO-ARG->\00"
@"str-~A" = private unnamed_addr constant [3 x i8] c"~A\00"
@str-PPRINT = private unnamed_addr constant [7 x i8] c"PPRINT\00"
@str-YAS_COMPILIERTE_FUNKTION = private unnamed_addr constant [25 x i8] c"YAS_COMPILIERTE_FUNKTION\00"
@"str- \22~A\22" = private unnamed_addr constant [6 x i8] c" \22~A\22\00"
@"str- \22" = private unnamed_addr constant [3 x i8] c" \22\00"
@"str-\22" = private unnamed_addr constant [2 x i8] c"\22\00"
@"str- )" = private unnamed_addr constant [3 x i8] c" )\00"
@"str-) " = private unnamed_addr constant [3 x i8] c") \00"
@str-YAS-AUSGABE_EIN_OBJEKT = private unnamed_addr constant [23 x i8] c"YAS-AUSGABE_EIN_OBJEKT\00"
@str-OBJEKT = private unnamed_addr constant [7 x i8] c"OBJEKT\00"
@"str-&OPTIONAL" = private unnamed_addr constant [10 x i8] c"&OPTIONAL\00"
@str-STREAM = private unnamed_addr constant [7 x i8] c"STREAM\00"
@str-COMPILED-FUNCTION-P = private unnamed_addr constant [20 x i8] c"COMPILED-FUNCTION-P\00"
@str-ARRAY-RANK = private unnamed_addr constant [11 x i8] c"ARRAY-RANK\00"
@str-LAMBDA = private unnamed_addr constant [7 x i8] c"LAMBDA\00"
@str-FORMAT-ARG-146760 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-146760\00"
@str-QUOTE = private unnamed_addr constant [6 x i8] c"QUOTE\00"
@"str-&REST" = private unnamed_addr constant [6 x i8] c"&REST\00"
@str-ARGS = private unnamed_addr constant [5 x i8] c"ARGS\00"
@str-FORMAT-ARG-146814 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-146814\00"
@str-FORMAT-ARG-146780 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-146780\00"
@str-FORMAT-ARG-146797 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-146797\00"
@str-FORMAT-ARG-146831 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-146831\00"
@str-YAS-SPEICHER_EIN_OBJEKT = private unnamed_addr constant [24 x i8] c"YAS-SPEICHER_EIN_OBJEKT\00"
@"str-YAS=EINE_KLASSE_P" = private unnamed_addr constant [18 x i8] c"YAS=EINE_KLASSE_P\00"
@"str-YAS=LESE_WERT" = private unnamed_addr constant [14 x i8] c"YAS=LESE_WERT\00"
@str-YAS-SPEICHER_NACH_UNTEN = private unnamed_addr constant [24 x i8] c"YAS-SPEICHER_NACH_UNTEN\00"
@str-AUSNAHMEBEDINGUNG = private unnamed_addr constant [18 x i8] c"AUSNAHMEBEDINGUNG\00"
@str-F-NICHT_SPEICHERN = private unnamed_addr constant [18 x i8] c"F-NICHT_SPEICHERN\00"
@"str-&KEY" = private unnamed_addr constant [5 x i8] c"&KEY\00"
@str-ALLOW-OTHER-KEYS = private unnamed_addr constant [17 x i8] c"ALLOW-OTHER-KEYS\00"
@"str-~A ~%" = private unnamed_addr constant [6 x i8] c"~A ~%\00"
@"str-YAS=EINE_INSTANZ_P" = private unnamed_addr constant [19 x i8] c"YAS=EINE_INSTANZ_P\00"
@"str-~A ~A ~%" = private unnamed_addr constant [9 x i8] c"~A ~A ~%\00"
@"str-YAS=ALLE_SLOTS" = private unnamed_addr constant [15 x i8] c"YAS=ALLE_SLOTS\00"
@str-EQUAL = private unnamed_addr constant [6 x i8] c"EQUAL\00"
@"str-YAS=LESE_INFORMANT" = private unnamed_addr constant [19 x i8] c"YAS=LESE_INFORMANT\00"
@str-EINGABE = private unnamed_addr constant [8 x i8] c"EINGABE\00"
@str-STANDARD-OBJECT = private unnamed_addr constant [16 x i8] c"STANDARD-OBJECT\00"
@"str-~s ~s ~%" = private unnamed_addr constant [9 x i8] c"~s ~s ~%\00"
@str-PRIN1 = private unnamed_addr constant [6 x i8] c"PRIN1\00"
@"str-~s ~s~%" = private unnamed_addr constant [8 x i8] c"~s ~s~%\00"
@"str-Ein unbekanntes Closobjekt" = private unnamed_addr constant [27 x i8] c"Ein unbekanntes Closobjekt\00"
@"str-~s ~a~%" = private unnamed_addr constant [8 x i8] c"~s ~a~%\00"
@"str-~s " = private unnamed_addr constant [4 x i8] c"~s \00"
@"str-~A ~% ~%" = private unnamed_addr constant [9 x i8] c"~A ~% ~%\00"
@str-ENDE = private unnamed_addr constant [5 x i8] c"ENDE\00"
@str-CLASS-OF = private unnamed_addr constant [9 x i8] c"CLASS-OF\00"
@str-FIND-CLASS = private unnamed_addr constant [11 x i8] c"FIND-CLASS\00"
@str-SUBCLASSP = private unnamed_addr constant [10 x i8] c"SUBCLASSP\00"
@str-FORMAT-ARG-148541 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-148541\00"
@str-FORMAT-ARG-148542 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-148542\00"
@str-FORMAT-ARG-148636 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-148636\00"
@str-FORMAT-ARG-148505 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-148505\00"
@str-FORMAT-ARG-148617 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-148617\00"
@str-FORMAT-ARG-148618 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-148618\00"
@str-FORMAT-ARG-148598 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-148598\00"
@str-FORMAT-ARG-148599 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-148599\00"
@str-FORMAT-ARG-148562 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-148562\00"
@str-FORMAT-ARG-148522 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-148522\00"
@str-FORMAT-ARG-148523 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-148523\00"
@str-FORMAT-ARG-148579 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-148579\00"
@str-FORMAT-ARG-148580 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-148580\00"
@"str-YAS=ALLE_OBJEKTE" = private unnamed_addr constant [17 x i8] c"YAS=ALLE_OBJEKTE\00"
@"str-YAS=EIN_OBJEKT_P" = private unnamed_addr constant [17 x i8] c"YAS=EIN_OBJEKT_P\00"
@str-YAS-MERKE_OBJEKT = private unnamed_addr constant [17 x i8] c"YAS-MERKE_OBJEKT\00"
@str-CERROR = private unnamed_addr constant [7 x i8] c"CERROR\00"
@"str-Klasse = meta" = private unnamed_addr constant [14 x i8] c"Klasse = meta\00"
@"str-KLasse ~A existiert nicht " = private unnamed_addr constant [27 x i8] c"KLasse ~A existiert nicht \00"
@"str-YAS=SCHREIBE_ZUSAETZLICHEN_WERT" = private unnamed_addr constant [32 x i8] c"YAS=SCHREIBE_ZUSAETZLICHEN_WERT\00"
@str-KLH-IN-LISTE-DESTRUKTIV-EINFUEGEN = private unnamed_addr constant [34 x i8] c"KLH-IN-LISTE-DESTRUKTIV-EINFUEGEN\00"
@str-YAS-SCHREIBE_INFORMANT = private unnamed_addr constant [23 x i8] c"YAS-SCHREIBE_INFORMANT\00"
@str-REMOVE = private unnamed_addr constant [7 x i8] c"REMOVE\00"
@str-SET-DIFFERENCE = private unnamed_addr constant [15 x i8] c"SET-DIFFERENCE\00"
@"str-YAS=NEUER_SLOT" = private unnamed_addr constant [15 x i8] c"YAS=NEUER_SLOT\00"
@str-ERERBT = private unnamed_addr constant [7 x i8] c"ERERBT\00"
@"str-wird nicht angelegt" = private unnamed_addr constant [20 x i8] c"wird nicht angelegt\00"
@"str-Objekt  ~A existiert schon " = private unnamed_addr constant [28 x i8] c"Objekt  ~A existiert schon \00"
@"str-YAS=NEUE_KLASSE" = private unnamed_addr constant [16 x i8] c"YAS=NEUE_KLASSE\00"
@str-KLASSE = private unnamed_addr constant [7 x i8] c"KLASSE\00"
@str-NACH_DER_KLASSE = private unnamed_addr constant [16 x i8] c"NACH_DER_KLASSE\00"
@"str-YAS=NEUE_INSTANZ" = private unnamed_addr constant [17 x i8] c"YAS=NEUE_INSTANZ\00"
@str-VORBRUDER = private unnamed_addr constant [10 x i8] c"VORBRUDER\00"
@str- = private unnamed_addr constant [1 x i8] zeroinitializer
@"str-Klasse ~A oder Objekt ~A existieren nicht" = private unnamed_addr constant [42 x i8] c"Klasse ~A oder Objekt ~A existieren nicht\00"
@str-DELETE = private unnamed_addr constant [7 x i8] c"DELETE\00"
@"str-YAS=KLASSE_WECHSELN" = private unnamed_addr constant [20 x i8] c"YAS=KLASSE_WECHSELN\00"
@str-NEUE_KLASSE = private unnamed_addr constant [12 x i8] c"NEUE_KLASSE\00"
@"str-objekt ~A undefiniert / hat keinen vater" = private unnamed_addr constant [41 x i8] c"objekt ~A undefiniert / hat keinen vater\00"
@"str-YAS=DER_VATER" = private unnamed_addr constant [14 x i8] c"YAS=DER_VATER\00"
@"str-Wird nicht geloescht" = private unnamed_addr constant [21 x i8] c"Wird nicht geloescht\00"
@"str-Objekt ~a hat noch kinder ~A " = private unnamed_addr constant [30 x i8] c"Objekt ~a hat noch kinder ~A \00"
@"str-YAS=LOESCHE_EINEN_WERT" = private unnamed_addr constant [23 x i8] c"YAS=LOESCHE_EINEN_WERT\00"
@str-YAS-VERGESSE_OBJEKT = private unnamed_addr constant [20 x i8] c"YAS-VERGESSE_OBJEKT\00"
@str-YAS-LOESCHE_SYMBOL = private unnamed_addr constant [19 x i8] c"YAS-LOESCHE_SYMBOL\00"
@"str-wird nicht geloescht" = private unnamed_addr constant [21 x i8] c"wird nicht geloescht\00"
@"str-Objekt ~a existiert nicht " = private unnamed_addr constant [27 x i8] c"Objekt ~a existiert nicht \00"
@"str-YAS=LOESCHE_OBJEKT" = private unnamed_addr constant [19 x i8] c"YAS=LOESCHE_OBJEKT\00"
@"str-YAS=ALLES_LOESCHEN" = private unnamed_addr constant [19 x i8] c"YAS=ALLES_LOESCHEN\00"
@"str-Nichts wird geloescht" = private unnamed_addr constant [22 x i8] c"Nichts wird geloescht\00"
@"str-~A ist keine Klasse" = private unnamed_addr constant [20 x i8] c"~A ist keine Klasse\00"
@"str-YAS=LOESCHE_WERT" = private unnamed_addr constant [17 x i8] c"YAS=LOESCHE_WERT\00"
@str-YAS-VERGESSE_OBJEKTE = private unnamed_addr constant [21 x i8] c"YAS-VERGESSE_OBJEKTE\00"
@"str-YAS=LOESCHE_ALLE_KINDER" = private unnamed_addr constant [24 x i8] c"YAS=LOESCHE_ALLE_KINDER\00"
@str-SYMBOLP = private unnamed_addr constant [8 x i8] c"SYMBOLP\00"
@"str-wird nicht sortiert" = private unnamed_addr constant [20 x i8] c"wird nicht sortiert\00"
@"str-~A ist keine klasse " = private unnamed_addr constant [21 x i8] c"~A ist keine klasse \00"
@str-STABLE-SORT = private unnamed_addr constant [12 x i8] c"STABLE-SORT\00"
@"str-STRING<" = private unnamed_addr constant [8 x i8] c"STRING<\00"
@"str-YAS=SORTIERE_KLASSE" = private unnamed_addr constant [20 x i8] c"YAS=SORTIERE_KLASSE\00"
@str-A = private unnamed_addr constant [2 x i8] c"A\00"
@str-B = private unnamed_addr constant [2 x i8] c"B\00"
@str-PUT-F = private unnamed_addr constant [6 x i8] c"PUT-F\00"
@str-SLOT = private unnamed_addr constant [5 x i8] c"SLOT\00"
@str-WER_WARS = private unnamed_addr constant [9 x i8] c"WER_WARS\00"
@str-GETF = private unnamed_addr constant [5 x i8] c"GETF\00"
@"str-YAS=HAT_OBJEKT_SLOT_P" = private unnamed_addr constant [22 x i8] c"YAS=HAT_OBJEKT_SLOT_P\00"
@"str-YAS=SCHREIBE_WERT" = private unnamed_addr constant [18 x i8] c"YAS=SCHREIBE_WERT\00"
@"str-Slot ~A existiert schon bei objekt ~A " = private unnamed_addr constant [39 x i8] c"Slot ~A existiert schon bei objekt ~A \00"
@"str-objekt ~A existiert nicht " = private unnamed_addr constant [27 x i8] c"objekt ~A existiert nicht \00"
@str-WERT = private unnamed_addr constant [5 x i8] c"WERT\00"
@"str-objekt ~A exisiert nicht " = private unnamed_addr constant [26 x i8] c"objekt ~A exisiert nicht \00"
@"str-slot ~A existiert nicht bei objekt ~A" = private unnamed_addr constant [38 x i8] c"slot ~A existiert nicht bei objekt ~A\00"
@str-REMPROP = private unnamed_addr constant [8 x i8] c"REMPROP\00"
@str-REM-F = private unnamed_addr constant [6 x i8] c"REM-F\00"
@"str-YAS=LOESCHE_SLOT" = private unnamed_addr constant [17 x i8] c"YAS=LOESCHE_SLOT\00"
@str-UNION = private unnamed_addr constant [6 x i8] c"UNION\00"
@"str-YAS=AUCH_ERERBTE_SLOTS" = private unnamed_addr constant [23 x i8] c"YAS=AUCH_ERERBTE_SLOTS\00"
@"str-YAS=BENUTZER_+_ERERBETE_SLOTS" = private unnamed_addr constant [30 x i8] c"YAS=BENUTZER_+_ERERBETE_SLOTS\00"
@"str-YAS=BENUTZER_SLOTS" = private unnamed_addr constant [19 x i8] c"YAS=BENUTZER_SLOTS\00"
@str-YAS-SICHER_WERT = private unnamed_addr constant [16 x i8] c"YAS-SICHER_WERT\00"
@str-ALTER = private unnamed_addr constant [6 x i8] c"ALTER\00"
@str-SICHERN = private unnamed_addr constant [8 x i8] c"SICHERN\00"
@str-ATOM = private unnamed_addr constant [5 x i8] c"ATOM\00"
@str-YAS-ENTHALTEN = private unnamed_addr constant [14 x i8] c"YAS-ENTHALTEN\00"
@str-WAS = private unnamed_addr constant [4 x i8] c"WAS\00"
@"str-objekt ~A und/oder slot ~A nicht vorhanden" = private unnamed_addr constant [43 x i8] c"objekt ~A und/oder slot ~A nicht vorhanden\00"
@str-APPEND = private unnamed_addr constant [7 x i8] c"APPEND\00"
@str-LOESCHEN = private unnamed_addr constant [9 x i8] c"LOESCHEN\00"
@"str-YAS=ALTER_WERT" = private unnamed_addr constant [15 x i8] c"YAS=ALTER_WERT\00"
@str-YAS-ALTER_INFORMANT = private unnamed_addr constant [20 x i8] c"YAS-ALTER_INFORMANT\00"
@str-YAS-VERGESSE_WERT = private unnamed_addr constant [18 x i8] c"YAS-VERGESSE_WERT\00"
@str-ZURUECK = private unnamed_addr constant [8 x i8] c"ZURUECK\00"
@"str-Wert ~A im slot ~A bei objekt ~A nicht vorhanden" = private unnamed_addr constant [49 x i8] c"Wert ~A im slot ~A bei objekt ~A nicht vorhanden\00"
@"str-objekt ~A unbekannt " = private unnamed_addr constant [21 x i8] c"objekt ~A unbekannt \00"
@"str-slotname ~A bei objekt ~A schon vergeben " = private unnamed_addr constant [42 x i8] c"slotname ~A bei objekt ~A schon vergeben \00"
@"str-YAS=DEFINIERE_METHODE" = private unnamed_addr constant [22 x i8] c"YAS=DEFINIERE_METHODE\00"
@str-MNAME = private unnamed_addr constant [6 x i8] c"MNAME\00"
@str-DEFINITION = private unnamed_addr constant [11 x i8] c"DEFINITION\00"
@"str-bei objekt ~A methode ~A nicht vorhande " = private unnamed_addr constant [41 x i8] c"bei objekt ~A methode ~A nicht vorhande \00"
@"str-YAS=DEFINIERE_METHODE_NEU" = private unnamed_addr constant [26 x i8] c"YAS=DEFINIERE_METHODE_NEU\00"
@str-APPLY = private unnamed_addr constant [6 x i8] c"APPLY\00"
@"str-YAS=TUE_METHODE" = private unnamed_addr constant [16 x i8] c"YAS=TUE_METHODE\00"
@str-METHODE = private unnamed_addr constant [8 x i8] c"METHODE\00"
@str-PARAMETER = private unnamed_addr constant [10 x i8] c"PARAMETER\00"
@"str-YAS=ALLE" = private unnamed_addr constant [9 x i8] c"YAS=ALLE\00"
@str-YAS-LOESCHE_NACH_UNTEN = private unnamed_addr constant [23 x i8] c"YAS-LOESCHE_NACH_UNTEN\00"
@str-OBJEKT_LISTE = private unnamed_addr constant [13 x i8] c"OBJEKT_LISTE\00"
@str-COPY-LIST = private unnamed_addr constant [10 x i8] c"COPY-LIST\00"
@str-HALLO = private unnamed_addr constant [6 x i8] c"HALLO\00"
@"str-hallo ich meta" = private unnamed_addr constant [15 x i8] c"hallo ich meta\00"
@str-KARSTEN = private unnamed_addr constant [8 x i8] c"KARSTEN\00"
@str-K0 = private unnamed_addr constant [3 x i8] c"K0\00"
@str-THEMA = private unnamed_addr constant [6 x i8] c"THEMA\00"
@str-KI = private unnamed_addr constant [3 x i8] c"KI\00"
@"str-hallo ich karsten" = private unnamed_addr constant [18 x i8] c"hallo ich karsten\00"
@str-YAS-TESTE_OBJEKT = private unnamed_addr constant [17 x i8] c"YAS-TESTE_OBJEKT\00"
@CONTAB4406 = internal global [843 x {}*] undef
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 16, void ()* @CLASP-CTOR, i8* null }]

; Function Attrs: uwtable
define internal void @RUN-ALL() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !9 {
entry:
  tail call void @cc_initialize_gcroots_in_module({ i8*, i8*, i64 }* nonnull @constants-table, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 0), i64 843, {}* null)
  tail call void @ltvc_assign_source_file_info_handle(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @":::global-str-/Users/karstenpoeck/lisp/coke/program/yas=yasos.lisp", i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @":::global-str-/Users/karstenpoeck/lisp/coke/program/yas=yasos.lisp", i64 0, i64 0), i64 0, i32 1, i32* nonnull @source-file-info-handle)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.46)
  ret void
}

; Function Attrs: nounwind
declare i32 @__gxx_personality_v0(...) #1

; Function Attrs: nounwind
declare void @ltvc_assign_source_file_info_handle(i8*, i8*, i64, i32, i32*) local_unnamed_addr #1

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^1^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !13 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^1^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest23
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 14), align 16
  %12 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 4), align 16
  call void @cc_setSymbolValue({}* %12, {}* %11)
  br label %tag3

tag3:                                             ; preds = %normal-dest23, %tag
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 17), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest29 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest29, %tag3, %normal-dest16, %normal-dest12, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 0), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 4), align 16
  %ptrtoint = ptrtoint {}* %17 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %19 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %17, i64 1, {}* %18, {}* null, {}* null, {}* null)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest9
  %20 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 8), align 16
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest16 unwind label %cleanup-lpad

normal-dest16:                                    ; preds = %normal-dest12
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 4), align 16
  %ptrtoint17 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint18 = add i64 %ptrtoint17, 7
  %entry-point-addr19 = inttoptr i64 %entry-point-addr-uint18 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point20 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr19, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point20({}* %21, i64 1, {}* %22, {}* null, {}* null, {}* null)
          to label %normal-dest23 unwind label %cleanup-lpad

normal-dest23:                                    ; preds = %normal-dest16
  %.elt46 = extractvalue { {}*, i64 } %23, 0
  %.elt48 = extractvalue { {}*, i64 } %23, 1
  %cond = icmp eq i64 %.elt48, 0
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %object.0 = select i1 %cond, {}* %24, {}* %.elt46
  %25 = icmp eq {}* %object.0, %24
  %.val = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G146255.0 = select i1 %25, {}* %.val, {}* %24
  %26 = icmp eq {}* %G146255.0, %24
  br i1 %26, label %tag3, label %tag

normal-dest29:                                    ; preds = %tag3
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 4), align 16
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 19), align 8
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 21), align 8
  %ptrtoint30 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint31 = add i64 %ptrtoint30, 7
  %entry-point-addr32 = inttoptr i64 %entry-point-addr-uint31 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point33 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr32, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point33({}* %14, i64 3, {}* %27, {}* %28, {}* %29, {}* null)
          to label %normal-dest36 unwind label %cleanup-lpad

normal-dest36:                                    ; preds = %normal-dest29
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 4), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %32 = insertvalue { {}*, i64 } undef, {}* %31, 0
  %33 = insertvalue { {}*, i64 } %32, i64 1, 1
  ret { {}*, i64 } %33
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #1

; Function Attrs: nounwind
declare void @cc_pop_InvocationHistoryFrame({}*, <{ i8*, { i32, i32, i8*, i8* }, i64 }>*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @cc_push_InvocationHistoryFrame({}*, <{ i8*, { i32, i32, i8*, i8* }, i64 }>*, { i32, i32, i8*, i8* }*, i64) local_unnamed_addr #1

declare {}* @cc_safe_fdefinition({}*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @cc_setSymbolValue({}*, {}*) local_unnamed_addr #1

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^73^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !23 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^73^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest23
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 24), align 16
  call void @cc_setSymbolValue({}* %11, {}* %23)
  br label %tag4

tag4:                                             ; preds = %tag1, %normal-dest23
  %12 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 17), align 8
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest29 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest29, %tag4, %normal-dest16, %normal-dest12, %normal-dest9, %normal-dest
  %14 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %14

normal-dest:                                      ; preds = %entry
  %15 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 0), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 24), align 16
  %ptrtoint = ptrtoint {}* %16 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %18 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %16, i64 1, {}* %17, {}* null, {}* null, {}* null)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest9
  %19 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 8), align 16
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest16 unwind label %cleanup-lpad

normal-dest16:                                    ; preds = %normal-dest12
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 24), align 16
  %ptrtoint17 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint18 = add i64 %ptrtoint17, 7
  %entry-point-addr19 = inttoptr i64 %entry-point-addr-uint18 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point20 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr19, align 8
  %22 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point20({}* %20, i64 1, {}* %21, {}* null, {}* null, {}* null)
          to label %normal-dest23 unwind label %cleanup-lpad

normal-dest23:                                    ; preds = %normal-dest16
  %.elt46 = extractvalue { {}*, i64 } %22, 0
  %.elt48 = extractvalue { {}*, i64 } %22, 1
  %cond = icmp eq i64 %.elt48, 0
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %object.0 = select i1 %cond, {}* %23, {}* %.elt46
  %24 = icmp eq {}* %object.0, %23
  %.val = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G146276.0 = select i1 %24, {}* %.val, {}* %23
  %25 = icmp eq {}* %G146276.0, %23
  br i1 %25, label %tag4, label %tag1

normal-dest29:                                    ; preds = %tag4
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 24), align 16
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 19), align 8
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 26), align 16
  %ptrtoint30 = ptrtoint {}* %13 to i64
  %entry-point-addr-uint31 = add i64 %ptrtoint30, 7
  %entry-point-addr32 = inttoptr i64 %entry-point-addr-uint31 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point33 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr32, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point33({}* %13, i64 3, {}* %26, {}* %27, {}* %28, {}* null)
          to label %normal-dest36 unwind label %cleanup-lpad

normal-dest36:                                    ; preds = %normal-dest29
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 24), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^74^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !24 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^74^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest23, %tag1
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 17), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest29 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest23
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 27), align 8
  call void @cc_setSymbolValue({}* %13, {}* %23)
  br label %tag

cleanup-lpad:                                     ; preds = %10, %normal-dest29, %tag, %normal-dest16, %normal-dest12, %normal-dest9, %normal-dest
  %14 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %14

normal-dest:                                      ; preds = %entry
  %15 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 0), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 27), align 8
  %ptrtoint = ptrtoint {}* %16 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %18 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %16, i64 1, {}* %17, {}* null, {}* null, {}* null)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest9
  %19 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 8), align 16
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest16 unwind label %cleanup-lpad

normal-dest16:                                    ; preds = %normal-dest12
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 27), align 8
  %ptrtoint17 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint18 = add i64 %ptrtoint17, 7
  %entry-point-addr19 = inttoptr i64 %entry-point-addr-uint18 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point20 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr19, align 8
  %22 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point20({}* %20, i64 1, {}* %21, {}* null, {}* null, {}* null)
          to label %normal-dest23 unwind label %cleanup-lpad

normal-dest23:                                    ; preds = %normal-dest16
  %.elt46 = extractvalue { {}*, i64 } %22, 0
  %.elt48 = extractvalue { {}*, i64 } %22, 1
  %cond = icmp eq i64 %.elt48, 0
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %object.0 = select i1 %cond, {}* %23, {}* %.elt46
  %24 = icmp eq {}* %object.0, %23
  %.val = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G146297.0 = select i1 %24, {}* %.val, {}* %23
  %25 = icmp eq {}* %G146297.0, %23
  br i1 %25, label %tag, label %tag1

normal-dest29:                                    ; preds = %tag
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 27), align 8
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 19), align 8
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 29), align 8
  %ptrtoint30 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint31 = add i64 %ptrtoint30, 7
  %entry-point-addr32 = inttoptr i64 %entry-point-addr-uint31 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point33 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr32, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point33({}* %12, i64 3, {}* %26, {}* %27, {}* %28, {}* null)
          to label %normal-dest36 unwind label %cleanup-lpad

normal-dest36:                                    ; preds = %normal-dest29
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 27), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^76^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !25 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^76^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag4:                                             ; preds = %normal-dest255, %tag24, %normal-dest96, %normal-dest51, %tag38
  %11 = phi {}** [ getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 30), %tag38 ], [ getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), %normal-dest51 ], [ getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 30), %normal-dest96 ], [ getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 30), %tag24 ], [ getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 30), %normal-dest255 ]
  %12 = load {}*, {}** %11, align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %13 = insertvalue { {}*, i64 } undef, {}* %12, 0
  %14 = insertvalue { {}*, i64 } %13, i64 1, 1
  ret { {}*, i64 } %14

tag5:                                             ; preds = %normal-dest51
  %15 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 32), align 16
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 43), align 8
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest60 unwind label %cleanup-lpad

tag6:                                             ; preds = %header-check-br156, %header-check-br156, %header-check-br156, %header-check-br156
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 75), align 8
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest74 unwind label %cleanup-lpad

tag8:                                             ; preds = %normal-dest146
  %20 = ptrtoint {}* %15 to i64
  %single-float-tag-only = and i64 %20, 7
  %fixnum-tag-only299 = and i64 %20, 3
  %fixnump-test = icmp ne i64 %fixnum-tag-only299, 0
  %test166 = icmp eq i64 %single-float-tag-only, 1
  %or.cond342 = and i1 %fixnump-test, %test166
  br i1 %or.cond342, label %header-check-br163, label %tag38

tag9:                                             ; preds = %normal-dest229
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest96 unwind label %cleanup-lpad

tag11:                                            ; preds = %normal-dest229
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 47), align 8
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest109 unwind label %cleanup-lpad

tag16:                                            ; preds = %normal-dest67
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 69), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest139 unwind label %cleanup-lpad

tag23:                                            ; preds = %normal-dest121, %header-check-br
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest172 unwind label %cleanup-lpad

tag24:                                            ; preds = %normal-dest205, %normal-dest179, %header-check-br122
  %G146315.0 = phi {}* [ %64, %header-check-br122 ], [ %G146315.1, %normal-dest179 ], [ %G146315.2, %normal-dest205 ]
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 30), align 16
  %ptrtoint185 = ptrtoint {}* %G146315.0 to i64
  %entry-point-addr-uint186 = add i64 %ptrtoint185, 7
  %entry-point-addr187 = inttoptr i64 %entry-point-addr-uint186 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point188 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr187, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point188({}* %G146315.0, i64 2, {}* %29, {}* %30, {}* null, {}* null)
          to label %tag4 unwind label %cleanup-lpad

tag31:                                            ; preds = %header-check-br163, %header-check-br163, %header-check-br163, %header-check-br163
  %32 = ptrtoint {}* %.in to i64
  %single-float-tag-only220 = and i64 %32, 7
  %33 = icmp eq i64 %single-float-tag-only220, 6
  br i1 %33, label %tag38, label %tag36

tag32:                                            ; preds = %normal-dest67
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 45), align 8
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest222 unwind label %cleanup-lpad

tag36:                                            ; preds = %tag31
  %fixnum-tag-only242301 = and i64 %32, 3
  %fixnump-test243 = icmp ne i64 %fixnum-tag-only242301, 0
  %test159 = icmp eq i64 %single-float-tag-only220, 1
  %or.cond341 = and i1 %fixnump-test243, %test159
  br i1 %or.cond341, label %header-check-br156, label %tag38

tag38:                                            ; preds = %header-check-br156, %header-check-br163, %normal-dest146, %tag8, %tag36, %tag31, %normal-dest81
  %.val346 = phi {}* [ %.val346.pre, %normal-dest81 ], [ %.val344, %tag8 ], [ %.val344, %tag36 ], [ %.val344, %tag31 ], [ %.val344, %normal-dest146 ], [ %.val344, %header-check-br163 ], [ %.val344, %header-check-br156 ]
  %36 = phi {}* [ %57, %normal-dest81 ], [ %69, %tag8 ], [ %69, %tag36 ], [ %69, %tag31 ], [ %69, %normal-dest146 ], [ %69, %header-check-br163 ], [ %69, %header-check-br156 ]
  %object82.0 = phi {}* [ %object82.1, %normal-dest81 ], [ %69, %tag8 ], [ %69, %tag36 ], [ %69, %tag31 ], [ %.val344, %normal-dest146 ], [ %69, %header-check-br163 ], [ %69, %header-check-br156 ]
  %37 = icmp eq {}* %object82.0, %36
  %G146348.0 = select i1 %37, {}* %.val346, {}* %36
  %38 = icmp eq {}* %G146348.0, %36
  br i1 %38, label %tag4, label %tag41

tag41:                                            ; preds = %tag38
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 47), align 8
  %40 = invoke {}* @cc_safe_fdefinition({}* %39)
          to label %normal-dest255 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest255, %tag41, %normal-dest222, %tag32, %normal-dest198, %maybe-more-tests, %tag24, %normal-dest172, %tag23, %normal-dest139, %tag16, %normal-dest116, %normal-dest109, %tag11, %normal-dest96, %tag9, %normal-dest74, %tag6, %normal-dest60, %tag5, %normal-dest48, %normal-dest
  %41 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %41

normal-dest:                                      ; preds = %entry
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 8), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest
  %44 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 30), align 16
  %ptrtoint = ptrtoint {}* %43 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %45 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %43, i64 1, {}* %44, {}* null, {}* null, {}* null)
          to label %normal-dest51 unwind label %cleanup-lpad

normal-dest51:                                    ; preds = %normal-dest48
  %.elt = extractvalue { {}*, i64 } %45, 0
  %.elt283 = extractvalue { {}*, i64 } %45, 1
  %cond = icmp eq i64 %.elt283, 0
  %46 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %object.0 = select i1 %cond, {}* %46, {}* %.elt
  %47 = icmp eq {}* %object.0, %46
  %.val = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G146373.0 = select i1 %47, {}* %.val, {}* %46
  %48 = icmp eq {}* %G146373.0, %46
  br i1 %48, label %tag4, label %tag5

header-check-br:                                  ; preds = %header-check-br122
  %.off348 = add i64 %65, -1001
  %49 = icmp ult i64 %.off348, 5
  br i1 %49, label %maybe-more-tests, label %tag23

maybe-more-tests:                                 ; preds = %header-check-br
  %50 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %51 = invoke {}* @cc_safe_fdefinition({}* %50)
          to label %normal-dest198 unwind label %cleanup-lpad

normal-dest60:                                    ; preds = %tag5
  %52 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 30), align 16
  %ptrtoint61 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %53 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %17, i64 1, {}* %52, {}* null, {}* null, {}* null)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt285 = extractvalue { {}*, i64 } %53, 0
  %.elt287 = extractvalue { {}*, i64 } %53, 1
  %cond276 = icmp eq i64 %.elt287, 0
  %54 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146368.0 = select i1 %cond276, {}* %54, {}* %.elt285
  %55 = icmp eq {}* %G146368.0, %54
  br i1 %55, label %tag32, label %tag16

normal-dest74:                                    ; preds = %tag6
  %ptrtoint75 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint76 = add i64 %ptrtoint75, 7
  %entry-point-addr77 = inttoptr i64 %entry-point-addr-uint76 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point78 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr77, align 8
  %56 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point78({}* %19, i64 2, {}* nonnull %15, {}* nonnull %.in, {}* null, {}* null)
          to label %normal-dest81 unwind label %cleanup-lpad

normal-dest81:                                    ; preds = %normal-dest74
  %.elt304 = extractvalue { {}*, i64 } %56, 0
  %.elt306 = extractvalue { {}*, i64 } %56, 1
  %cond278 = icmp eq i64 %.elt306, 0
  %57 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %object82.1 = select i1 %cond278, {}* %57, {}* %.elt304
  %.val346.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  br label %tag38

normal-dest96:                                    ; preds = %tag9
  %58 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 68), align 16
  %59 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 30), align 16
  %ptrtoint97 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint98 = add i64 %ptrtoint97, 7
  %entry-point-addr99 = inttoptr i64 %entry-point-addr-uint98 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point100 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr99, align 8
  %60 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point100({}* %22, i64 2, {}* %58, {}* %59, {}* null, {}* null)
          to label %tag4 unwind label %cleanup-lpad

normal-dest109:                                   ; preds = %tag11
  %61 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 30), align 16
  %ptrtoint110 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint111 = add i64 %ptrtoint110, 7
  %entry-point-addr112 = inttoptr i64 %entry-point-addr-uint111 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point113 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr112, align 8
  %62 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point113({}* %24, i64 2, {}* %61, {}* %15, {}* null, {}* null)
          to label %normal-dest116 unwind label %cleanup-lpad

normal-dest116:                                   ; preds = %normal-dest109
  %63 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 43), align 8
  %64 = invoke {}* @cc_safe_setfdefinition({}* %63)
          to label %normal-dest121 unwind label %cleanup-lpad

normal-dest121:                                   ; preds = %normal-dest116
  %ptrtoint123 = ptrtoint {}* %64 to i64
  %tag-only124 = and i64 %ptrtoint123, 7
  %test125 = icmp eq i64 %tag-only124, 1
  br i1 %test125, label %header-check-br122, label %tag23

header-check-br122:                               ; preds = %normal-dest121
  %irc-bit-cast126 = bitcast {}* %64 to i8*
  %gep127 = getelementptr inbounds i8, i8* %irc-bit-cast126, i64 -9
  %irc-bit-cast128 = bitcast i8* %gep127 to i64*
  %65 = load i64, i64* %irc-bit-cast128, align 8
  %.off = add i64 %65, -913
  %66 = icmp ult i64 %.off, 85
  br i1 %66, label %tag24, label %header-check-br

normal-dest139:                                   ; preds = %tag16
  %67 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 30), align 16
  %ptrtoint140 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint141 = add i64 %ptrtoint140, 7
  %entry-point-addr142 = inttoptr i64 %entry-point-addr-uint141 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point143 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr142, align 8
  %68 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point143({}* %26, i64 1, {}* %67, {}* null, {}* null, {}* null)
          to label %normal-dest146 unwind label %cleanup-lpad

normal-dest146:                                   ; preds = %normal-dest139
  %.elt289 = extractvalue { {}*, i64 } %68, 0
  %.elt291 = extractvalue { {}*, i64 } %68, 1
  %cond277 = icmp eq i64 %.elt291, 0
  %69 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %.in = select i1 %cond277, {}* %69, {}* %.elt289
  %70 = bitcast {}* %.in to i8*
  %71 = icmp eq {}* %15, %.in
  %.val344 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G146360.0 = select i1 %71, {}* %.val344, {}* %69
  %72 = icmp eq {}* %G146360.0, %69
  br i1 %72, label %tag8, label %tag38

header-check-br156:                               ; preds = %tag36
  %gep161 = getelementptr inbounds i8, i8* %70, i64 -9
  %irc-bit-cast162 = bitcast i8* %gep161 to i64*
  %73 = load i64, i64* %irc-bit-cast162, align 8
  %74 = add i64 %73, -1309
  %75 = lshr i64 %74, 3
  %76 = shl i64 %74, 61
  %77 = or i64 %75, %76
  switch i64 %77, label %tag38 [
    i64 2, label %tag6
    i64 4, label %tag6
    i64 5, label %tag6
    i64 0, label %tag6
  ]

header-check-br163:                               ; preds = %tag8
  %irc-bit-cast167 = bitcast {}* %15 to i8*
  %gep168 = getelementptr inbounds i8, i8* %irc-bit-cast167, i64 -9
  %irc-bit-cast169 = bitcast i8* %gep168 to i64*
  %78 = load i64, i64* %irc-bit-cast169, align 8
  %79 = add i64 %78, -1309
  %80 = lshr i64 %79, 3
  %81 = shl i64 %79, 61
  %82 = or i64 %80, %81
  switch i64 %82, label %tag38 [
    i64 2, label %tag31
    i64 4, label %tag31
    i64 5, label %tag31
    i64 0, label %tag31
  ]

normal-dest172:                                   ; preds = %tag23
  %83 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %84 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %85 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %86 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 65), align 8
  %ptrtoint173 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint174 = add i64 %ptrtoint173, 7
  %entry-point-addr175 = inttoptr i64 %entry-point-addr-uint174 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point176 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr175, align 8
  %87 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point176({}* %28, i64 5, {}* %83, {}* %84, {}* %64, {}* %85, {}* %86)
          to label %normal-dest179 unwind label %cleanup-lpad

normal-dest179:                                   ; preds = %normal-dest172
  %.elt320 = extractvalue { {}*, i64 } %87, 0
  %.elt322 = extractvalue { {}*, i64 } %87, 1
  %cond280 = icmp eq i64 %.elt322, 0
  %88 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146315.1 = select i1 %cond280, {}* %88, {}* %.elt320
  br label %tag24

normal-dest198:                                   ; preds = %maybe-more-tests
  %ptrtoint199 = ptrtoint {}* %51 to i64
  %entry-point-addr-uint200 = add i64 %ptrtoint199, 7
  %entry-point-addr201 = inttoptr i64 %entry-point-addr-uint200 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point202 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr201, align 8
  %89 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point202({}* %51, i64 1, {}* nonnull %64, {}* null, {}* null, {}* null)
          to label %normal-dest205 unwind label %cleanup-lpad

normal-dest205:                                   ; preds = %normal-dest198
  %.elt328 = extractvalue { {}*, i64 } %89, 0
  %.elt330 = extractvalue { {}*, i64 } %89, 1
  %cond281 = icmp eq i64 %.elt330, 0
  %90 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146315.2 = select i1 %cond281, {}* %90, {}* %.elt328
  br label %tag24

normal-dest222:                                   ; preds = %tag32
  %91 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 30), align 16
  %ptrtoint223 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint224 = add i64 %ptrtoint223, 7
  %entry-point-addr225 = inttoptr i64 %entry-point-addr-uint224 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point226 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr225, align 8
  %92 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point226({}* %35, i64 1, {}* %91, {}* null, {}* null, {}* null)
          to label %normal-dest229 unwind label %cleanup-lpad

normal-dest229:                                   ; preds = %normal-dest222
  %.elt308 = extractvalue { {}*, i64 } %92, 0
  %.elt310 = extractvalue { {}*, i64 } %92, 1
  %cond279 = icmp eq i64 %.elt310, 0
  %93 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146339.0 = select i1 %cond279, {}* %93, {}* %.elt308
  %94 = icmp eq {}* %G146339.0, %93
  br i1 %94, label %tag11, label %tag9

normal-dest255:                                   ; preds = %tag41
  %95 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 30), align 16
  %ptrtoint256 = ptrtoint {}* %40 to i64
  %entry-point-addr-uint257 = add i64 %ptrtoint256, 7
  %entry-point-addr258 = inttoptr i64 %entry-point-addr-uint257 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point259 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr258, align 8
  %96 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point259({}* %40, i64 2, {}* %95, {}* %15, {}* null, {}* null)
          to label %tag4 unwind label %cleanup-lpad
}

declare {}* @cc_safe_setfdefinition({}*) local_unnamed_addr #3

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^79^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !26 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^79^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest233, %normal-dest177, %header-check-br96
  %G146452.0 = phi {}* [ %54, %header-check-br96 ], [ %G146452.1, %normal-dest177 ], [ %G146452.2, %normal-dest233 ]
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %12 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 79), align 8
  %ptrtoint51 = ptrtoint {}* %G146452.0 to i64
  %entry-point-addr-uint52 = add i64 %ptrtoint51, 7
  %entry-point-addr53 = inttoptr i64 %entry-point-addr-uint52 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point54 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr53, align 8
  %13 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point54({}* %G146452.0, i64 2, {}* %11, {}* %12, {}* null, {}* null)
          to label %tag4 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest45
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 69), align 8
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest63 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest104, %normal-dest240, %tag1, %tag16
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 79), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %17 = insertvalue { {}*, i64 } undef, {}* %16, 0
  %18 = insertvalue { {}*, i64 } %17, i64 1, 1
  ret { {}*, i64 } %18

tag5:                                             ; preds = %normal-dest207
  %19 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 47), align 8
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest83 unwind label %cleanup-lpad

tag6:                                             ; preds = %normal-dest207
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest104 unwind label %cleanup-lpad

tag15:                                            ; preds = %tag25
  %fixnum-tag-only165272 = and i64 %31, 3
  %fixnump-test166 = icmp ne i64 %fixnum-tag-only165272, 0
  %test161 = icmp eq i64 %single-float-tag-only197, 1
  %or.cond311 = and i1 %fixnump-test166, %test161
  br i1 %or.cond311, label %header-check-br158, label %tag16

tag16:                                            ; preds = %header-check-br151, %header-check-br158, %normal-dest70, %tag15, %tag24, %tag25, %normal-dest191
  %.val313 = phi {}* [ %.val313.pre, %normal-dest191 ], [ %.val, %tag24 ], [ %.val, %tag25 ], [ %.val, %tag15 ], [ %.val, %normal-dest70 ], [ %.val, %header-check-br158 ], [ %.val, %header-check-br151 ]
  %23 = phi {}* [ %77, %normal-dest191 ], [ %47, %tag24 ], [ %47, %tag25 ], [ %47, %tag15 ], [ %47, %normal-dest70 ], [ %47, %header-check-br158 ], [ %47, %header-check-br151 ]
  %object.0 = phi {}* [ %object.1, %normal-dest191 ], [ %47, %tag24 ], [ %47, %tag25 ], [ %47, %tag15 ], [ %.val, %normal-dest70 ], [ %47, %header-check-br158 ], [ %47, %header-check-br151 ]
  %24 = icmp eq {}* %object.0, %23
  %G146485.0 = select i1 %24, {}* %.val313, {}* %23
  %25 = icmp eq {}* %G146485.0, %23
  br i1 %25, label %tag4, label %tag35

tag20:                                            ; preds = %normal-dest95, %header-check-br213
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest170 unwind label %cleanup-lpad

tag23:                                            ; preds = %header-check-br158, %header-check-br158, %header-check-br158, %header-check-br158
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 75), align 8
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest184 unwind label %cleanup-lpad

tag24:                                            ; preds = %normal-dest70
  %30 = ptrtoint {}* %38 to i64
  %single-float-tag-only = and i64 %30, 7
  %fixnum-tag-only270 = and i64 %30, 3
  %fixnump-test = icmp ne i64 %fixnum-tag-only270, 0
  %test154 = icmp eq i64 %single-float-tag-only, 1
  %or.cond310 = and i1 %fixnump-test, %test154
  br i1 %or.cond310, label %header-check-br151, label %tag16

tag25:                                            ; preds = %header-check-br151, %header-check-br151, %header-check-br151, %header-check-br151
  %31 = ptrtoint {}* %.in to i64
  %single-float-tag-only197 = and i64 %31, 7
  %32 = icmp eq i64 %single-float-tag-only197, 6
  br i1 %32, label %tag16, label %tag15

tag29:                                            ; preds = %normal-dest45
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 45), align 8
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest200 unwind label %cleanup-lpad

tag35:                                            ; preds = %tag16
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 47), align 8
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest240 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest240, %tag35, %normal-dest226, %maybe-more-tests221, %normal-dest200, %tag29, %normal-dest184, %tag23, %normal-dest170, %tag20, %normal-dest104, %tag6, %normal-dest90, %normal-dest83, %tag5, %normal-dest63, %tag3, %tag1, %normal-dest42, %normal-dest
  %37 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %37

normal-dest:                                      ; preds = %entry
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 77), align 8
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 43), align 8
  %40 = invoke {}* @cc_safe_fdefinition({}* %39)
          to label %normal-dest42 unwind label %cleanup-lpad

normal-dest42:                                    ; preds = %normal-dest
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 79), align 8
  %ptrtoint = ptrtoint {}* %40 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %40, i64 1, {}* %41, {}* null, {}* null, {}* null)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest42
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt258 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt258, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146505.0 = select i1 %cond, {}* %43, {}* %.elt
  %44 = icmp eq {}* %G146505.0, %43
  br i1 %44, label %tag29, label %tag3

normal-dest63:                                    ; preds = %tag3
  %45 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 79), align 8
  %ptrtoint64 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint65 = add i64 %ptrtoint64, 7
  %entry-point-addr66 = inttoptr i64 %entry-point-addr-uint65 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point67 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr66, align 8
  %46 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point67({}* %15, i64 1, {}* %45, {}* null, {}* null, {}* null)
          to label %normal-dest70 unwind label %cleanup-lpad

normal-dest70:                                    ; preds = %normal-dest63
  %.elt260 = extractvalue { {}*, i64 } %46, 0
  %.elt262 = extractvalue { {}*, i64 } %46, 1
  %cond252 = icmp eq i64 %.elt262, 0
  %47 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %.in = select i1 %cond252, {}* %47, {}* %.elt260
  %48 = bitcast {}* %.in to i8*
  %49 = icmp eq {}* %38, %.in
  %.val = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G146497.0 = select i1 %49, {}* %.val, {}* %47
  %50 = icmp eq {}* %G146497.0, %47
  br i1 %50, label %tag24, label %tag16

normal-dest83:                                    ; preds = %tag5
  %51 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 79), align 8
  %ptrtoint84 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint85 = add i64 %ptrtoint84, 7
  %entry-point-addr86 = inttoptr i64 %entry-point-addr-uint85 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point87 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr86, align 8
  %52 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point87({}* %20, i64 2, {}* %51, {}* %38, {}* null, {}* null)
          to label %normal-dest90 unwind label %cleanup-lpad

normal-dest90:                                    ; preds = %normal-dest83
  %53 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 43), align 8
  %54 = invoke {}* @cc_safe_setfdefinition({}* %53)
          to label %normal-dest95 unwind label %cleanup-lpad

normal-dest95:                                    ; preds = %normal-dest90
  %ptrtoint97 = ptrtoint {}* %54 to i64
  %tag-only98 = and i64 %ptrtoint97, 7
  %test99 = icmp eq i64 %tag-only98, 1
  br i1 %test99, label %header-check-br96, label %tag20

header-check-br96:                                ; preds = %normal-dest95
  %irc-bit-cast100 = bitcast {}* %54 to i8*
  %gep101 = getelementptr inbounds i8, i8* %irc-bit-cast100, i64 -9
  %irc-bit-cast102 = bitcast i8* %gep101 to i64*
  %55 = load i64, i64* %irc-bit-cast102, align 8
  %.off = add i64 %55, -913
  %56 = icmp ult i64 %.off, 85
  br i1 %56, label %tag1, label %header-check-br213

normal-dest104:                                   ; preds = %tag6
  %57 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 68), align 16
  %58 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 79), align 8
  %ptrtoint105 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint106 = add i64 %ptrtoint105, 7
  %entry-point-addr107 = inttoptr i64 %entry-point-addr-uint106 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point108 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr107, align 8
  %59 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point108({}* %22, i64 2, {}* %57, {}* %58, {}* null, {}* null)
          to label %tag4 unwind label %cleanup-lpad

header-check-br151:                               ; preds = %tag24
  %irc-bit-cast155 = bitcast {}* %38 to i8*
  %gep156 = getelementptr inbounds i8, i8* %irc-bit-cast155, i64 -9
  %irc-bit-cast157 = bitcast i8* %gep156 to i64*
  %60 = load i64, i64* %irc-bit-cast157, align 8
  %61 = add i64 %60, -1309
  %62 = lshr i64 %61, 3
  %63 = shl i64 %61, 61
  %64 = or i64 %62, %63
  switch i64 %64, label %tag16 [
    i64 2, label %tag25
    i64 4, label %tag25
    i64 5, label %tag25
    i64 0, label %tag25
  ]

header-check-br158:                               ; preds = %tag15
  %gep163 = getelementptr inbounds i8, i8* %48, i64 -9
  %irc-bit-cast164 = bitcast i8* %gep163 to i64*
  %65 = load i64, i64* %irc-bit-cast164, align 8
  %66 = add i64 %65, -1309
  %67 = lshr i64 %66, 3
  %68 = shl i64 %66, 61
  %69 = or i64 %67, %68
  switch i64 %69, label %tag16 [
    i64 2, label %tag23
    i64 4, label %tag23
    i64 5, label %tag23
    i64 0, label %tag23
  ]

normal-dest170:                                   ; preds = %tag20
  %70 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %71 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %72 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %73 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 81), align 8
  %ptrtoint171 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint172 = add i64 %ptrtoint171, 7
  %entry-point-addr173 = inttoptr i64 %entry-point-addr-uint172 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point174 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr173, align 8
  %74 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point174({}* %27, i64 5, {}* %70, {}* %71, {}* %54, {}* %72, {}* %73)
          to label %normal-dest177 unwind label %cleanup-lpad

normal-dest177:                                   ; preds = %normal-dest170
  %.elt291 = extractvalue { {}*, i64 } %74, 0
  %.elt293 = extractvalue { {}*, i64 } %74, 1
  %cond255 = icmp eq i64 %.elt293, 0
  %75 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146452.1 = select i1 %cond255, {}* %75, {}* %.elt291
  br label %tag1

normal-dest184:                                   ; preds = %tag23
  %ptrtoint185 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint186 = add i64 %ptrtoint185, 7
  %entry-point-addr187 = inttoptr i64 %entry-point-addr-uint186 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point188 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr187, align 8
  %76 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point188({}* %29, i64 2, {}* nonnull %38, {}* nonnull %.in, {}* null, {}* null)
          to label %normal-dest191 unwind label %cleanup-lpad

normal-dest191:                                   ; preds = %normal-dest184
  %.elt275 = extractvalue { {}*, i64 } %76, 0
  %.elt277 = extractvalue { {}*, i64 } %76, 1
  %cond253 = icmp eq i64 %.elt277, 0
  %77 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %object.1 = select i1 %cond253, {}* %77, {}* %.elt275
  %.val313.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  br label %tag16

normal-dest200:                                   ; preds = %tag29
  %78 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 79), align 8
  %ptrtoint201 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint202 = add i64 %ptrtoint201, 7
  %entry-point-addr203 = inttoptr i64 %entry-point-addr-uint202 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point204 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr203, align 8
  %79 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point204({}* %34, i64 1, {}* %78, {}* null, {}* null, {}* null)
          to label %normal-dest207 unwind label %cleanup-lpad

normal-dest207:                                   ; preds = %normal-dest200
  %.elt279 = extractvalue { {}*, i64 } %79, 0
  %.elt281 = extractvalue { {}*, i64 } %79, 1
  %cond254 = icmp eq i64 %.elt281, 0
  %80 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146476.0 = select i1 %cond254, {}* %80, {}* %.elt279
  %81 = icmp eq {}* %G146476.0, %80
  br i1 %81, label %tag5, label %tag6

header-check-br213:                               ; preds = %header-check-br96
  %.off315 = add i64 %55, -1001
  %82 = icmp ult i64 %.off315, 5
  br i1 %82, label %maybe-more-tests221, label %tag20

maybe-more-tests221:                              ; preds = %header-check-br213
  %83 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %84 = invoke {}* @cc_safe_fdefinition({}* %83)
          to label %normal-dest226 unwind label %cleanup-lpad

normal-dest226:                                   ; preds = %maybe-more-tests221
  %ptrtoint227 = ptrtoint {}* %84 to i64
  %entry-point-addr-uint228 = add i64 %ptrtoint227, 7
  %entry-point-addr229 = inttoptr i64 %entry-point-addr-uint228 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point230 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr229, align 8
  %85 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point230({}* %84, i64 1, {}* nonnull %54, {}* null, {}* null, {}* null)
          to label %normal-dest233 unwind label %cleanup-lpad

normal-dest233:                                   ; preds = %normal-dest226
  %.elt299 = extractvalue { {}*, i64 } %85, 0
  %.elt301 = extractvalue { {}*, i64 } %85, 1
  %cond256 = icmp eq i64 %.elt301, 0
  %86 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146452.2 = select i1 %cond256, {}* %86, {}* %.elt299
  br label %tag1

normal-dest240:                                   ; preds = %tag35
  %87 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 79), align 8
  %ptrtoint241 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint242 = add i64 %ptrtoint241, 7
  %entry-point-addr243 = inttoptr i64 %entry-point-addr-uint242 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point244 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr243, align 8
  %88 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point244({}* %36, i64 2, {}* %87, {}* %38, {}* null, {}* null)
          to label %tag4 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^82^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !27 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^82^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest76, %normal-dest17, %header-check-br
  %G146533.0 = phi {}* [ %18, %header-check-br ], [ %G146533.1, %normal-dest17 ], [ %G146533.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 88), align 16
  %ptrtoint29 = ptrtoint {}* %G146533.0 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %G146533.0, i64 2, {}* %"closure->%SET-SYMBOL-PLIST", {}* %11, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest10, %header-check-br20
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag3, %normal-dest54, %normal-dest48, %normal-dest41, %normal-dest35, %tag2, %normal-dest13, %maybe-more-tests28, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 88), align 16
  %"closure->%SET-SYMBOL-PLIST" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"%SET-SYMBOL-PLIST^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"%SET-SYMBOL-PLIST^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2386, i64 82, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br20

normal-dest13:                                    ; preds = %maybe-more-tests28
  %ptrtoint14 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146533.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag2

header-check-br20:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %23 = icmp ult i64 %.off106, 5
  br i1 %23, label %maybe-more-tests28, label %tag3

maybe-more-tests28:                               ; preds = %header-check-br20
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %tag2
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 92), align 16
  %ptrtoint42 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %27, i64 2, {}* %"closure->%SET-SYMBOL-PLIST", {}* %28, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest48
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 97), align 8
  %ptrtoint55 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint56 = add i64 %ptrtoint55, 7
  %entry-point-addr57 = inttoptr i64 %entry-point-addr-uint56 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point58 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr57, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point58({}* %31, i64 2, {}* %"closure->%SET-SYMBOL-PLIST", {}* %32, {}* null, {}* null)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %34, {}* inttoptr (i64 328 to {}*))
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 88), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %36 = insertvalue { {}*, i64 } undef, {}* %35, 0
  %37 = insertvalue { {}*, i64 } %36, i64 1, 1
  ret { {}*, i64 } %37

normal-dest69:                                    ; preds = %tag3
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 87), align 8
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146533.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"%SET-SYMBOL-PLIST^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !28 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"%SET-SYMBOL-PLIST^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"%SET-SYMBOL-PLIST^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc72 unwind label %cleanup-lpad

.noexc72:                                         ; preds = %13
  unreachable

tag:                                              ; preds = %normal-dest13, %header-check-br40
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest16 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest34, %normal-dest20, %header-check-br
  %G146551.0 = phi {}* [ %19, %header-check-br ], [ %G146551.1, %normal-dest20 ], [ %G146551.2, %normal-dest34 ]
  %ptrtoint49 = ptrtoint {}* %G146551.0 to i64
  %entry-point-addr-uint50 = add i64 %ptrtoint49, 7
  %entry-point-addr51 = inttoptr i64 %entry-point-addr-uint50 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point52 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr51, align 8
  %16 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point52({}* %G146551.0, i64 2, {}* %farg1, {}* %farg0, {}* null, {}* null)
          to label %normal-dest55 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %13, %10, %tag4, %normal-dest27, %maybe-more-tests48, %normal-dest16, %tag, %normal-dest
  %17 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %17

normal-dest:                                      ; preds = %11
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 82), align 16
  %19 = invoke {}* @cc_safe_setfdefinition({}* %18)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest13:                                    ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %19 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest13
  %irc-bit-cast14 = bitcast {}* %19 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast14, i64 -9
  %irc-bit-cast15 = bitcast i8* %gep to i64*
  %20 = load i64, i64* %irc-bit-cast15, align 8
  %.off = add i64 %20, -913
  %21 = icmp ult i64 %.off, 85
  br i1 %21, label %tag4, label %header-check-br40

normal-dest16:                                    ; preds = %tag
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 84), align 16
  %ptrtoint17 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint = add i64 %ptrtoint17, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %15, i64 5, {}* %22, {}* %23, {}* %19, {}* %24, {}* %25)
          to label %normal-dest20 unwind label %cleanup-lpad

normal-dest20:                                    ; preds = %normal-dest16
  %.elt = extractvalue { {}*, i64 } %26, 0
  %.elt59 = extractvalue { {}*, i64 } %26, 1
  %cond56 = icmp eq i64 %.elt59, 0
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146551.1 = select i1 %cond56, {}* %27, {}* %.elt
  br label %tag4

normal-dest27:                                    ; preds = %maybe-more-tests48
  %ptrtoint28 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint29 = add i64 %ptrtoint28, 7
  %entry-point-addr30 = inttoptr i64 %entry-point-addr-uint29 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point31 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr30, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point31({}* %32, i64 1, {}* nonnull %19, {}* null, {}* null, {}* null)
          to label %normal-dest34 unwind label %cleanup-lpad

normal-dest34:                                    ; preds = %normal-dest27
  %.elt68 = extractvalue { {}*, i64 } %28, 0
  %.elt70 = extractvalue { {}*, i64 } %28, 1
  %cond57 = icmp eq i64 %.elt70, 0
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146551.2 = select i1 %cond57, {}* %29, {}* %.elt68
  br label %tag4

header-check-br40:                                ; preds = %header-check-br
  %.off75 = add i64 %20, -1001
  %30 = icmp ult i64 %.off75, 5
  br i1 %30, label %maybe-more-tests48, label %tag

maybe-more-tests48:                               ; preds = %header-check-br40
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest27 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %tag4
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %16
}

declare {}* @cc_enclose({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) local_unnamed_addr #3

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^86^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !29 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^86^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br20
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest76, %normal-dest17, %header-check-br
  %G146614.0 = phi {}* [ %18, %header-check-br ], [ %G146614.1, %normal-dest17 ], [ %G146614.2, %normal-dest76 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 118), align 16
  %ptrtoint29 = ptrtoint {}* %G146614.0 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %G146614.0, i64 2, {}* %"closure->YAS=INIT_OBJEKTE", {}* %13, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests28, %normal-dest54, %normal-dest48, %normal-dest41, %normal-dest35, %tag3, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 118), align 16
  %"closure->YAS=INIT_OBJEKTE" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=INIT_OBJEKTE^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=INIT_OBJEKTE^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2472, i64 86, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag3, label %header-check-br20

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 117), align 8
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146614.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag3

header-check-br20:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %27 = icmp ult i64 %.off106, 5
  br i1 %27, label %maybe-more-tests28, label %tag

maybe-more-tests28:                               ; preds = %header-check-br20
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %tag3
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %ptrtoint42 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %31, i64 2, {}* %"closure->YAS=INIT_OBJEKTE", {}* %32, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest48
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 120), align 16
  %ptrtoint55 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint56 = add i64 %ptrtoint55, 7
  %entry-point-addr57 = inttoptr i64 %entry-point-addr-uint56 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point58 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr57, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point58({}* %35, i64 2, {}* %"closure->YAS=INIT_OBJEKTE", {}* %36, {}* null, {}* null)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %38, {}* inttoptr (i64 344 to {}*))
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 118), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %40 = insertvalue { {}*, i64 } undef, {}* %39, 0
  %41 = insertvalue { {}*, i64 } %40, i64 1, 1
  ret { {}*, i64 } %41

normal-dest69:                                    ; preds = %maybe-more-tests28
  %ptrtoint70 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %29, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146614.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag3
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=INIT_OBJEKTE^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !30 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=INIT_OBJEKTE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest387, %normal-dest170, %header-check-br98
  %G146712.0 = phi {}* [ %50, %header-check-br98 ], [ %G146712.1, %normal-dest170 ], [ %G146712.2, %normal-dest387 ]
  %ptrtoint40 = ptrtoint {}* %G146712.0 to i64
  %entry-point-addr-uint41 = add i64 %ptrtoint40, 7
  %entry-point-addr42 = inttoptr i64 %entry-point-addr-uint41 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point43 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr42, align 8
  %11 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point43({}* %G146712.0, i64 3, {}* %48, {}* %46, {}* %47, {}* null)
          to label %normal-dest46 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest401, %normal-dest156, %header-check-br
  %G146730.0 = phi {}* [ %33, %header-check-br ], [ %G146730.1, %normal-dest156 ], [ %G146730.2, %normal-dest401 ]
  %ptrtoint78 = ptrtoint {}* %G146730.0 to i64
  %entry-point-addr-uint79 = add i64 %ptrtoint78, 7
  %entry-point-addr80 = inttoptr i64 %entry-point-addr-uint79 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point81 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr80, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point81({}* %G146730.0, i64 3, {}* %31, {}* %29, {}* %30, {}* null)
          to label %normal-dest84 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest429, %normal-dest415, %header-check-br315
  %G146642.0 = phi {}* [ %120, %header-check-br315 ], [ %G146642.1, %normal-dest415 ], [ %G146642.2, %normal-dest429 ]
  %ptrtoint107 = ptrtoint {}* %G146642.0 to i64
  %entry-point-addr-uint108 = add i64 %ptrtoint107, 7
  %entry-point-addr109 = inttoptr i64 %entry-point-addr-uint108 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point110 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr109, align 8
  %13 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point110({}* %G146642.0, i64 3, {}* %G146593146594.0, {}* %73, {}* %74, {}* null)
          to label %normal-dest113 unwind label %cleanup-lpad

tag5:                                             ; preds = %normal-dest36, %header-check-br370
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest149 unwind label %cleanup-lpad

tag7:                                             ; preds = %normal-dest346, %normal-dest332, %header-check-br60
  %G146694.0 = phi {}* [ %40, %header-check-br60 ], [ %G146694.1, %normal-dest332 ], [ %G146694.2, %normal-dest346 ]
  %ptrtoint176 = ptrtoint {}* %G146694.0 to i64
  %entry-point-addr-uint177 = add i64 %ptrtoint176, 7
  %entry-point-addr178 = inttoptr i64 %entry-point-addr-uint177 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point179 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr178, align 8
  %16 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point179({}* %G146694.0, i64 3, {}* %38, {}* %36, {}* %37, {}* null)
          to label %normal-dest182 unwind label %cleanup-lpad

tag9:                                             ; preds = %normal-dest59, %header-check-br352
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest339 unwind label %cleanup-lpad

tag15:                                            ; preds = %normal-dest97, %header-check-br361
  %19 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest380 unwind label %cleanup-lpad

tag19:                                            ; preds = %normal-dest314, %header-check-br69
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest422 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest422, %tag19, %normal-dest408, %maybe-more-tests77, %normal-dest394, %maybe-more-tests378, %normal-dest380, %tag15, %normal-dest339, %tag9, %normal-dest325, %maybe-more-tests360, %normal-dest307, %normal-dest295, %normal-dest288, %normal-dest281, %normal-dest274, %normal-dest267, %normal-dest260, %normal-dest253, %normal-dest246, %normal-dest239, %normal-dest232, %normal-dest225, %normal-dest218, %normal-dest211, %normal-dest204, %normal-dest197, %normal-dest190, %normal-dest188, %normal-dest182, %tag7, %normal-dest163, %maybe-more-tests369, %normal-dest149, %tag5, %normal-dest128, %normal-dest121, %normal-dest119, %normal-dest113, %tag4, %normal-dest84, %tag3, %normal-dest46, %tag1, %normal-dest27, %normal-dest24, %normal-dest
  %23 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %23

normal-dest:                                      ; preds = %entry
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 88), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest24 unwind label %cleanup-lpad

normal-dest24:                                    ; preds = %normal-dest
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 15), align 8
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %ptrtoint = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 2, {}* %26, {}* %27, {}* null, {}* null)
          to label %normal-dest27 unwind label %cleanup-lpad

normal-dest27:                                    ; preds = %normal-dest24
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 15), align 8
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 39), align 8
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %33 = invoke {}* @cc_safe_setfdefinition({}* %32)
          to label %normal-dest36 unwind label %cleanup-lpad

normal-dest36:                                    ; preds = %normal-dest27
  %ptrtoint37 = ptrtoint {}* %33 to i64
  %tag-only = and i64 %ptrtoint37, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag5

header-check-br:                                  ; preds = %normal-dest36
  %irc-bit-cast38 = bitcast {}* %33 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast38, i64 -9
  %irc-bit-cast39 = bitcast i8* %gep to i64*
  %34 = load i64, i64* %irc-bit-cast39, align 8
  %.off586 = add i64 %34, -913
  %35 = icmp ult i64 %.off586, 85
  br i1 %35, label %tag3, label %header-check-br370

normal-dest46:                                    ; preds = %tag1
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 15), align 8
  %37 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 33), align 8
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %40 = invoke {}* @cc_safe_setfdefinition({}* %39)
          to label %normal-dest59 unwind label %cleanup-lpad

normal-dest59:                                    ; preds = %normal-dest46
  %ptrtoint61 = ptrtoint {}* %40 to i64
  %tag-only62 = and i64 %ptrtoint61, 7
  %test63 = icmp eq i64 %tag-only62, 1
  br i1 %test63, label %header-check-br60, label %tag9

header-check-br60:                                ; preds = %normal-dest59
  %irc-bit-cast64 = bitcast {}* %40 to i8*
  %gep65 = getelementptr inbounds i8, i8* %irc-bit-cast64, i64 -9
  %irc-bit-cast66 = bitcast i8* %gep65 to i64*
  %41 = load i64, i64* %irc-bit-cast66, align 8
  %.off582 = add i64 %41, -913
  %42 = icmp ult i64 %.off582, 85
  br i1 %42, label %tag7, label %header-check-br352

header-check-br69:                                ; preds = %header-check-br315
  %.off581 = add i64 %121, -1001
  %43 = icmp ult i64 %.off581, 5
  br i1 %43, label %maybe-more-tests77, label %tag19

maybe-more-tests77:                               ; preds = %header-check-br69
  %44 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %45 = invoke {}* @cc_safe_fdefinition({}* %44)
          to label %normal-dest408 unwind label %cleanup-lpad

normal-dest84:                                    ; preds = %tag3
  %46 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 15), align 8
  %47 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 35), align 8
  %48 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %49 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %50 = invoke {}* @cc_safe_setfdefinition({}* %49)
          to label %normal-dest97 unwind label %cleanup-lpad

normal-dest97:                                    ; preds = %normal-dest84
  %ptrtoint99 = ptrtoint {}* %50 to i64
  %tag-only100 = and i64 %ptrtoint99, 7
  %test101 = icmp eq i64 %tag-only100, 1
  br i1 %test101, label %header-check-br98, label %tag15

header-check-br98:                                ; preds = %normal-dest97
  %irc-bit-cast102 = bitcast {}* %50 to i8*
  %gep103 = getelementptr inbounds i8, i8* %irc-bit-cast102, i64 -9
  %irc-bit-cast104 = bitcast i8* %gep103 to i64*
  %51 = load i64, i64* %irc-bit-cast104, align 8
  %.off584 = add i64 %51, -913
  %52 = icmp ult i64 %.off584, 85
  br i1 %52, label %tag1, label %header-check-br361

normal-dest113:                                   ; preds = %tag4
  %53 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 110), align 16
  %54 = invoke {}* @cc_safe_fdefinition({}* %53)
          to label %normal-dest119 unwind label %cleanup-lpad

normal-dest119:                                   ; preds = %normal-dest113
  %55 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %56 = invoke {}* @cc_safe_fdefinition({}* %55)
          to label %normal-dest121 unwind label %cleanup-lpad

normal-dest121:                                   ; preds = %normal-dest119
  %57 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 15), align 8
  %ptrtoint122 = ptrtoint {}* %56 to i64
  %entry-point-addr-uint123 = add i64 %ptrtoint122, 7
  %entry-point-addr124 = inttoptr i64 %entry-point-addr-uint123 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point125 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr124, align 8
  %58 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point125({}* %56, i64 1, {}* %57, {}* null, {}* null, {}* null)
          to label %normal-dest128 unwind label %cleanup-lpad

normal-dest128:                                   ; preds = %normal-dest121
  %.elt527 = extractvalue { {}*, i64 } %58, 0
  %.elt529 = extractvalue { {}*, i64 } %58, 1
  %cond450 = icmp eq i64 %.elt529, 0
  %59 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146636.0 = select i1 %cond450, {}* %59, {}* %.elt527
  %ptrtoint134 = ptrtoint {}* %54 to i64
  %entry-point-addr-uint135 = add i64 %ptrtoint134, 7
  %entry-point-addr136 = inttoptr i64 %entry-point-addr-uint135 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point137 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr136, align 8
  %60 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point137({}* %54, i64 2, {}* %G146636.0, {}* %59, {}* null, {}* null)
          to label %normal-dest140 unwind label %cleanup-lpad

normal-dest140:                                   ; preds = %normal-dest128
  %.elt531 = extractvalue { {}*, i64 } %60, 0
  %.elt533 = extractvalue { {}*, i64 } %60, 1
  %cond451 = icmp eq i64 %.elt533, 0
  %61 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146598.0 = select i1 %cond451, {}* %61, {}* %.elt531
  %62 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 4), align 16
  call void @cc_setSymbolValue({}* %62, {}* %G146598.0)
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %63 = insertvalue { {}*, i64 } undef, {}* %G146598.0, 0
  %64 = insertvalue { {}*, i64 } %63, i64 1, 1
  ret { {}*, i64 } %64

normal-dest149:                                   ; preds = %tag5
  %65 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %66 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %67 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %68 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 107), align 8
  %ptrtoint150 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint151 = add i64 %ptrtoint150, 7
  %entry-point-addr152 = inttoptr i64 %entry-point-addr-uint151 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point153 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr152, align 8
  %69 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point153({}* %15, i64 5, {}* %65, {}* %66, {}* %33, {}* %67, {}* %68)
          to label %normal-dest156 unwind label %cleanup-lpad

normal-dest156:                                   ; preds = %normal-dest149
  %.elt459 = extractvalue { {}*, i64 } %69, 0
  %.elt461 = extractvalue { {}*, i64 } %69, 1
  %cond435 = icmp eq i64 %.elt461, 0
  %70 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146730.1 = select i1 %cond435, {}* %70, {}* %.elt459
  br label %tag3

normal-dest163:                                   ; preds = %maybe-more-tests369
  %ptrtoint164 = ptrtoint {}* %136 to i64
  %entry-point-addr-uint165 = add i64 %ptrtoint164, 7
  %entry-point-addr166 = inttoptr i64 %entry-point-addr-uint165 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point167 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr166, align 8
  %71 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point167({}* %136, i64 1, {}* nonnull %50, {}* null, {}* null, {}* null)
          to label %normal-dest170 unwind label %cleanup-lpad

normal-dest170:                                   ; preds = %normal-dest163
  %.elt546 = extractvalue { {}*, i64 } %71, 0
  %.elt548 = extractvalue { {}*, i64 } %71, 1
  %cond454 = icmp eq i64 %.elt548, 0
  %72 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146712.1 = select i1 %cond454, {}* %72, {}* %.elt546
  br label %tag1

normal-dest182:                                   ; preds = %tag7
  %73 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 15), align 8
  %74 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 41), align 8
  %75 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 110), align 16
  %76 = invoke {}* @cc_safe_fdefinition({}* %75)
          to label %normal-dest188 unwind label %cleanup-lpad

normal-dest188:                                   ; preds = %normal-dest182
  %77 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %78 = invoke {}* @cc_safe_fdefinition({}* %77)
          to label %normal-dest190 unwind label %cleanup-lpad

normal-dest190:                                   ; preds = %normal-dest188
  %79 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 33), align 8
  %ptrtoint191 = ptrtoint {}* %78 to i64
  %entry-point-addr-uint192 = add i64 %ptrtoint191, 7
  %entry-point-addr193 = inttoptr i64 %entry-point-addr-uint192 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point194 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr193, align 8
  %80 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point194({}* %78, i64 1, {}* %79, {}* null, {}* null, {}* null)
          to label %normal-dest197 unwind label %cleanup-lpad

normal-dest197:                                   ; preds = %normal-dest190
  %.elt483 = extractvalue { {}*, i64 } %80, 0
  %.elt485 = extractvalue { {}*, i64 } %80, 1
  %cond440 = icmp eq i64 %.elt485, 0
  %81 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146660.0 = select i1 %cond440, {}* %81, {}* %.elt483
  %82 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %83 = invoke {}* @cc_safe_fdefinition({}* %82)
          to label %normal-dest204 unwind label %cleanup-lpad

normal-dest204:                                   ; preds = %normal-dest197
  %84 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 114), align 16
  %ptrtoint205 = ptrtoint {}* %83 to i64
  %entry-point-addr-uint206 = add i64 %ptrtoint205, 7
  %entry-point-addr207 = inttoptr i64 %entry-point-addr-uint206 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point208 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr207, align 8
  %85 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point208({}* %83, i64 1, {}* %84, {}* null, {}* null, {}* null)
          to label %normal-dest211 unwind label %cleanup-lpad

normal-dest211:                                   ; preds = %normal-dest204
  %.elt487 = extractvalue { {}*, i64 } %85, 0
  %.elt489 = extractvalue { {}*, i64 } %85, 1
  %cond441 = icmp eq i64 %.elt489, 0
  %86 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146661.0 = select i1 %cond441, {}* %86, {}* %.elt487
  %87 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %88 = invoke {}* @cc_safe_fdefinition({}* %87)
          to label %normal-dest218 unwind label %cleanup-lpad

normal-dest218:                                   ; preds = %normal-dest211
  %89 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 35), align 8
  %ptrtoint219 = ptrtoint {}* %88 to i64
  %entry-point-addr-uint220 = add i64 %ptrtoint219, 7
  %entry-point-addr221 = inttoptr i64 %entry-point-addr-uint220 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point222 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr221, align 8
  %90 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point222({}* %88, i64 1, {}* %89, {}* null, {}* null, {}* null)
          to label %normal-dest225 unwind label %cleanup-lpad

normal-dest225:                                   ; preds = %normal-dest218
  %.elt491 = extractvalue { {}*, i64 } %90, 0
  %.elt493 = extractvalue { {}*, i64 } %90, 1
  %cond442 = icmp eq i64 %.elt493, 0
  %91 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146662.0 = select i1 %cond442, {}* %91, {}* %.elt491
  %92 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %93 = invoke {}* @cc_safe_fdefinition({}* %92)
          to label %normal-dest232 unwind label %cleanup-lpad

normal-dest232:                                   ; preds = %normal-dest225
  %94 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 114), align 16
  %ptrtoint233 = ptrtoint {}* %93 to i64
  %entry-point-addr-uint234 = add i64 %ptrtoint233, 7
  %entry-point-addr235 = inttoptr i64 %entry-point-addr-uint234 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point236 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr235, align 8
  %95 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point236({}* %93, i64 1, {}* %94, {}* null, {}* null, {}* null)
          to label %normal-dest239 unwind label %cleanup-lpad

normal-dest239:                                   ; preds = %normal-dest232
  %.elt495 = extractvalue { {}*, i64 } %95, 0
  %.elt497 = extractvalue { {}*, i64 } %95, 1
  %cond443 = icmp eq i64 %.elt497, 0
  %96 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146663.0 = select i1 %cond443, {}* %96, {}* %.elt495
  %97 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %98 = invoke {}* @cc_safe_fdefinition({}* %97)
          to label %normal-dest246 unwind label %cleanup-lpad

normal-dest246:                                   ; preds = %normal-dest239
  %99 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 39), align 8
  %ptrtoint247 = ptrtoint {}* %98 to i64
  %entry-point-addr-uint248 = add i64 %ptrtoint247, 7
  %entry-point-addr249 = inttoptr i64 %entry-point-addr-uint248 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point250 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr249, align 8
  %100 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point250({}* %98, i64 1, {}* %99, {}* null, {}* null, {}* null)
          to label %normal-dest253 unwind label %cleanup-lpad

normal-dest253:                                   ; preds = %normal-dest246
  %.elt499 = extractvalue { {}*, i64 } %100, 0
  %.elt501 = extractvalue { {}*, i64 } %100, 1
  %cond444 = icmp eq i64 %.elt501, 0
  %101 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146664.0 = select i1 %cond444, {}* %101, {}* %.elt499
  %102 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %103 = invoke {}* @cc_safe_fdefinition({}* %102)
          to label %normal-dest260 unwind label %cleanup-lpad

normal-dest260:                                   ; preds = %normal-dest253
  %104 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 114), align 16
  %ptrtoint261 = ptrtoint {}* %103 to i64
  %entry-point-addr-uint262 = add i64 %ptrtoint261, 7
  %entry-point-addr263 = inttoptr i64 %entry-point-addr-uint262 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point264 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr263, align 8
  %105 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point264({}* %103, i64 1, {}* %104, {}* null, {}* null, {}* null)
          to label %normal-dest267 unwind label %cleanup-lpad

normal-dest267:                                   ; preds = %normal-dest260
  %.elt503 = extractvalue { {}*, i64 } %105, 0
  %.elt505 = extractvalue { {}*, i64 } %105, 1
  %cond445 = icmp eq i64 %.elt505, 0
  %106 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146665.0 = select i1 %cond445, {}* %106, {}* %.elt503
  %107 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %108 = invoke {}* @cc_safe_fdefinition({}* %107)
          to label %normal-dest274 unwind label %cleanup-lpad

normal-dest274:                                   ; preds = %normal-dest267
  %109 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 41), align 8
  %ptrtoint275 = ptrtoint {}* %108 to i64
  %entry-point-addr-uint276 = add i64 %ptrtoint275, 7
  %entry-point-addr277 = inttoptr i64 %entry-point-addr-uint276 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point278 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr277, align 8
  %110 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point278({}* %108, i64 1, {}* %109, {}* null, {}* null, {}* null)
          to label %normal-dest281 unwind label %cleanup-lpad

normal-dest281:                                   ; preds = %normal-dest274
  %.elt507 = extractvalue { {}*, i64 } %110, 0
  %.elt509 = extractvalue { {}*, i64 } %110, 1
  %cond446 = icmp eq i64 %.elt509, 0
  %111 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146666.0 = select i1 %cond446, {}* %111, {}* %.elt507
  %112 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %113 = invoke {}* @cc_safe_fdefinition({}* %112)
          to label %normal-dest288 unwind label %cleanup-lpad

normal-dest288:                                   ; preds = %normal-dest281
  %114 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 114), align 16
  %ptrtoint289 = ptrtoint {}* %113 to i64
  %entry-point-addr-uint290 = add i64 %ptrtoint289, 7
  %entry-point-addr291 = inttoptr i64 %entry-point-addr-uint290 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point292 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr291, align 8
  %115 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point292({}* %113, i64 1, {}* %114, {}* null, {}* null, {}* null)
          to label %normal-dest295 unwind label %cleanup-lpad

normal-dest295:                                   ; preds = %normal-dest288
  %.elt511 = extractvalue { {}*, i64 } %115, 0
  %.elt513 = extractvalue { {}*, i64 } %115, 1
  %cond447 = icmp eq i64 %.elt513, 0
  %116 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146667.0 = select i1 %cond447, {}* %116, {}* %.elt511
  %ptrtoint301 = ptrtoint {}* %76 to i64
  %entry-point-addr-uint302 = add i64 %ptrtoint301, 7
  %entry-point-addr303 = inttoptr i64 %entry-point-addr-uint302 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point304 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr303, align 8
  %117 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point304({}* %76, i64 9, {}* %G146660.0, {}* %G146661.0, {}* %G146662.0, {}* %G146663.0, {}* %G146664.0, {}* %G146665.0, {}* %G146666.0, {}* %G146667.0, {}* %116)
          to label %normal-dest307 unwind label %cleanup-lpad

normal-dest307:                                   ; preds = %normal-dest295
  %.elt515 = extractvalue { {}*, i64 } %117, 0
  %.elt517 = extractvalue { {}*, i64 } %117, 1
  %cond448 = icmp eq i64 %.elt517, 0
  %118 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146593146594.0 = select i1 %cond448, {}* %118, {}* %.elt515
  %119 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %120 = invoke {}* @cc_safe_setfdefinition({}* %119)
          to label %normal-dest314 unwind label %cleanup-lpad

normal-dest314:                                   ; preds = %normal-dest307
  %ptrtoint316 = ptrtoint {}* %120 to i64
  %tag-only317 = and i64 %ptrtoint316, 7
  %test318 = icmp eq i64 %tag-only317, 1
  br i1 %test318, label %header-check-br315, label %tag19

header-check-br315:                               ; preds = %normal-dest314
  %irc-bit-cast319 = bitcast {}* %120 to i8*
  %gep320 = getelementptr inbounds i8, i8* %irc-bit-cast319, i64 -9
  %irc-bit-cast321 = bitcast i8* %gep320 to i64*
  %121 = load i64, i64* %irc-bit-cast321, align 8
  %.off = add i64 %121, -913
  %122 = icmp ult i64 %.off, 85
  br i1 %122, label %tag4, label %header-check-br69

normal-dest325:                                   ; preds = %maybe-more-tests360
  %ptrtoint326 = ptrtoint {}* %133 to i64
  %entry-point-addr-uint327 = add i64 %ptrtoint326, 7
  %entry-point-addr328 = inttoptr i64 %entry-point-addr-uint327 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point329 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr328, align 8
  %123 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point329({}* %133, i64 1, {}* nonnull %40, {}* null, {}* null, {}* null)
          to label %normal-dest332 unwind label %cleanup-lpad

normal-dest332:                                   ; preds = %normal-dest325
  %.elt542 = extractvalue { {}*, i64 } %123, 0
  %.elt544 = extractvalue { {}*, i64 } %123, 1
  %cond453 = icmp eq i64 %.elt544, 0
  %124 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146694.1 = select i1 %cond453, {}* %124, {}* %.elt542
  br label %tag7

normal-dest339:                                   ; preds = %tag9
  %125 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %126 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %127 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %128 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 109), align 8
  %ptrtoint340 = ptrtoint {}* %18 to i64
  %entry-point-addr-uint341 = add i64 %ptrtoint340, 7
  %entry-point-addr342 = inttoptr i64 %entry-point-addr-uint341 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point343 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr342, align 8
  %129 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point343({}* %18, i64 5, {}* %125, {}* %126, {}* %40, {}* %127, {}* %128)
          to label %normal-dest346 unwind label %cleanup-lpad

normal-dest346:                                   ; preds = %normal-dest339
  %.elt475 = extractvalue { {}*, i64 } %129, 0
  %.elt477 = extractvalue { {}*, i64 } %129, 1
  %cond439 = icmp eq i64 %.elt477, 0
  %130 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146694.2 = select i1 %cond439, {}* %130, {}* %.elt475
  br label %tag7

header-check-br352:                               ; preds = %header-check-br60
  %.off583 = add i64 %41, -1001
  %131 = icmp ult i64 %.off583, 5
  br i1 %131, label %maybe-more-tests360, label %tag9

maybe-more-tests360:                              ; preds = %header-check-br352
  %132 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %133 = invoke {}* @cc_safe_fdefinition({}* %132)
          to label %normal-dest325 unwind label %cleanup-lpad

header-check-br361:                               ; preds = %header-check-br98
  %.off585 = add i64 %51, -1001
  %134 = icmp ult i64 %.off585, 5
  br i1 %134, label %maybe-more-tests369, label %tag15

maybe-more-tests369:                              ; preds = %header-check-br361
  %135 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %136 = invoke {}* @cc_safe_fdefinition({}* %135)
          to label %normal-dest163 unwind label %cleanup-lpad

header-check-br370:                               ; preds = %header-check-br
  %.off587 = add i64 %34, -1001
  %137 = icmp ult i64 %.off587, 5
  br i1 %137, label %maybe-more-tests378, label %tag5

maybe-more-tests378:                              ; preds = %header-check-br370
  %138 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %139 = invoke {}* @cc_safe_fdefinition({}* %138)
          to label %normal-dest394 unwind label %cleanup-lpad

normal-dest380:                                   ; preds = %tag15
  %140 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %141 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %142 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %143 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 108), align 16
  %ptrtoint381 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint382 = add i64 %ptrtoint381, 7
  %entry-point-addr383 = inttoptr i64 %entry-point-addr-uint382 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point384 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr383, align 8
  %144 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point384({}* %20, i64 5, {}* %140, {}* %141, {}* %50, {}* %142, {}* %143)
          to label %normal-dest387 unwind label %cleanup-lpad

normal-dest387:                                   ; preds = %normal-dest380
  %.elt467 = extractvalue { {}*, i64 } %144, 0
  %.elt469 = extractvalue { {}*, i64 } %144, 1
  %cond437 = icmp eq i64 %.elt469, 0
  %145 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146712.2 = select i1 %cond437, {}* %145, {}* %.elt467
  br label %tag1

normal-dest394:                                   ; preds = %maybe-more-tests378
  %ptrtoint395 = ptrtoint {}* %139 to i64
  %entry-point-addr-uint396 = add i64 %ptrtoint395, 7
  %entry-point-addr397 = inttoptr i64 %entry-point-addr-uint396 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point398 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr397, align 8
  %146 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point398({}* %139, i64 1, {}* nonnull %33, {}* null, {}* null, {}* null)
          to label %normal-dest401 unwind label %cleanup-lpad

normal-dest401:                                   ; preds = %normal-dest394
  %.elt550 = extractvalue { {}*, i64 } %146, 0
  %.elt552 = extractvalue { {}*, i64 } %146, 1
  %cond455 = icmp eq i64 %.elt552, 0
  %147 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146730.2 = select i1 %cond455, {}* %147, {}* %.elt550
  br label %tag3

normal-dest408:                                   ; preds = %maybe-more-tests77
  %ptrtoint409 = ptrtoint {}* %45 to i64
  %entry-point-addr-uint410 = add i64 %ptrtoint409, 7
  %entry-point-addr411 = inttoptr i64 %entry-point-addr-uint410 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point412 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr411, align 8
  %148 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point412({}* %45, i64 1, {}* nonnull %120, {}* null, {}* null, {}* null)
          to label %normal-dest415 unwind label %cleanup-lpad

normal-dest415:                                   ; preds = %normal-dest408
  %.elt538 = extractvalue { {}*, i64 } %148, 0
  %.elt540 = extractvalue { {}*, i64 } %148, 1
  %cond452 = icmp eq i64 %.elt540, 0
  %149 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146642.1 = select i1 %cond452, {}* %149, {}* %.elt538
  br label %tag4

normal-dest422:                                   ; preds = %tag19
  %150 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %151 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %152 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %153 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 116), align 16
  %ptrtoint423 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint424 = add i64 %ptrtoint423, 7
  %entry-point-addr425 = inttoptr i64 %entry-point-addr-uint424 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point426 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr425, align 8
  %154 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point426({}* %22, i64 5, {}* %150, {}* %151, {}* %120, {}* %152, {}* %153)
          to label %normal-dest429 unwind label %cleanup-lpad

normal-dest429:                                   ; preds = %normal-dest422
  %.elt519 = extractvalue { {}*, i64 } %154, 0
  %.elt521 = extractvalue { {}*, i64 } %154, 1
  %cond449 = icmp eq i64 %.elt521, 0
  %155 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146642.2 = select i1 %cond449, {}* %155, {}* %.elt519
  br label %tag4
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^94^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !31 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^94^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 118), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %13 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %13, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest8 unwind label %cleanup-lpad

normal-dest8:                                     ; preds = %normal-dest5
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %14
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^96^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !32 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^96^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest67, %normal-dest54, %header-check-br
  %G146892.0 = phi {}* [ %18, %header-check-br ], [ %G146892.1, %normal-dest54 ], [ %G146892.2, %normal-dest67 ]
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 219), align 8
  %ptrtoint13 = ptrtoint {}* %G146892.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G146892.0, i64 2, {}* %"closure->YAS-AUSGABE_EIN_OBJEKT", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest10, %header-check-br73
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest47 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %maybe-more-tests81, %normal-dest47, %tag1, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 219), align 8
  %"closure->YAS-AUSGABE_EIN_OBJEKT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS-AUSGABE_EIN_OBJEKT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-AUSGABE_EIN_OBJEKT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2794, i64 96, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br73

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 221), align 8
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->YAS-AUSGABE_EIN_OBJEKT", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 229), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->YAS-AUSGABE_EIN_OBJEKT", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 480 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 219), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %tag1
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 218), align 16
  %ptrtoint48 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %14, i64 5, {}* %33, {}* %34, {}* %18, {}* %35, {}* %36)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt = extractvalue { {}*, i64 } %37, 0
  %.elt84 = extractvalue { {}*, i64 } %37, 1
  %cond = icmp eq i64 %.elt84, 0
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146892.1 = select i1 %cond, {}* %38, {}* %.elt
  br label %tag

normal-dest60:                                    ; preds = %maybe-more-tests81
  %ptrtoint61 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt101 = extractvalue { {}*, i64 } %39, 0
  %.elt103 = extractvalue { {}*, i64 } %39, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146892.2 = select i1 %cond82, {}* %40, {}* %.elt101
  br label %tag

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag1

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest60 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS-AUSGABE_EIN_OBJEKT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !33 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  switch i64 %nargs, label %488 [
    i64 2, label %case-opt1-bb
    i64 0, label %487
  ]

tag1:                                             ; preds = %tag520
  %10 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 180), align 16
  %11 = invoke {}* @cc_safe_fdefinition({}* %10)
          to label %normal-dest612 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

tag2:                                             ; preds = %normal-dest2010
  %12 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %13 = icmp eq {}* %.in4287, %12
  %.val4743 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G148008.0 = select i1 %13, {}* %.val4743, {}* %12
  %14 = icmp eq {}* %G148008.0, %12
  br i1 %14, label %tag34, label %tag58

tag4:                                             ; preds = %tag558
  %15 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 140), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest622 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag5:                                             ; preds = %tag368
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 140), align 16
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest636 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag8:                                             ; preds = %normal-dest3221
  %19 = add i64 %398, 5
  %20 = inttoptr i64 %19 to {}**
  %21 = load {}*, {}** %20, align 8
  %.val4831.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %tag85

tag10:                                            ; preds = %tag526
  %22 = icmp eq {}* %x881.0, %.val4795
  %G147732.0 = select i1 %22, {}* %.val4792, {}* %.val4795
  %23 = icmp eq {}* %G147732.0, %.val4795
  br i1 %23, label %tag286, label %tag277

tag12:                                            ; preds = %normal-dest1232, %header-check-br3616
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest676 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag13:                                            ; preds = %tag314, %normal-dest2580, %tag533
  %.val4841 = phi {}* [ %.val4839.pre, %tag533 ], [ %912, %normal-dest2580 ], [ %269, %tag314 ]
  %x689.0 = phi {}* [ %435, %tag533 ], [ %x689.1, %normal-dest2580 ], [ %269, %tag314 ]
  %26 = ptrtoint {}* %x689.0 to i64
  %tag-only6934174 = and i64 %26, 7
  %consp-test = icmp eq i64 %tag-only6934174, 3
  %.val4838 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147350.0 = select i1 %consp-test, {}* %.val4838, {}* %.val4841
  %27 = icmp eq {}* %G147350.0, %.val4841
  br i1 %27, label %tag263, label %tag267

tag18:                                            ; preds = %tag360, %normal-dest2271, %tag100
  %G148018.0 = phi {}* [ %104, %tag100 ], [ %G148018.1, %normal-dest2271 ], [ %.val4901, %tag360 ]
  %ptrtoint703 = ptrtoint {}* %G148016.0 to i64
  %entry-point-addr-uint704 = add i64 %ptrtoint703, 7
  %entry-point-addr705 = inttoptr i64 %entry-point-addr-uint704 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point706 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr705, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point706({}* %G148016.0, i64 2, {}* %stream.0, {}* %G148018.0, {}* null, {}* null)
          to label %tag247 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag19:                                            ; preds = %normal-dest1681, %header-check-br1644
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest715 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag20:                                            ; preds = %tag453, %header-check-br2527
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest729 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag21:                                            ; preds = %tag225, %normal-dest3486, %tag48
  %.val4779 = phi {}* [ %476, %tag48 ], [ %1118, %normal-dest3486 ], [ %476, %tag225 ]
  %x742.0 = phi {}* [ %64, %tag48 ], [ %x742.1, %normal-dest3486 ], [ %476, %tag225 ]
  %33 = ptrtoint {}* %x742.0 to i64
  %tag-only7463989 = and i64 %33, 7
  %consp-test747 = icmp eq i64 %tag-only7463989, 3
  %.val4776 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147852.0 = select i1 %consp-test747, {}* %.val4776, {}* %.val4779
  %34 = icmp eq {}* %G147852.0, %.val4779
  br i1 %34, label %tag332, label %tag81

tag25:                                            ; preds = %tag582
  %35 = add i64 %398, 5
  %36 = inttoptr i64 %35 to {}**
  %37 = load {}*, {}** %36, align 8
  br label %tag605

tag28:                                            ; preds = %tag222, %normal-dest3698, %tag529
  %.val4787 = phi {}* [ %274, %tag529 ], [ %1173, %normal-dest3698 ], [ %274, %tag222 ]
  %x760.0 = phi {}* [ %430, %tag529 ], [ %x760.1, %normal-dest3698 ], [ %274, %tag222 ]
  %38 = ptrtoint {}* %x760.0 to i64
  %tag-only7644023 = and i64 %38, 7
  %consp-test765 = icmp eq i64 %tag-only7644023, 3
  %.val4784 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147790.0 = select i1 %consp-test765, {}* %.val4784, {}* %.val4787
  %39 = icmp eq {}* %G147790.0, %.val4787
  br i1 %39, label %tag84, label %tag272

tag32:                                            ; preds = %tag566
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest767 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag33:                                            ; preds = %normal-dest2484, %header-check-br1590, %normal-dest1534
  %G146926.0 = phi {}* [ %G146926.1, %normal-dest1534 ], [ %"closure->LAMBDA3590", %header-check-br1590 ], [ %G146926.2, %normal-dest2484 ]
  %ptrtoint781 = ptrtoint {}* %G146926.0 to i64
  %entry-point-addr-uint782 = add i64 %ptrtoint781, 7
  %entry-point-addr783 = inttoptr i64 %entry-point-addr-uint782 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point784 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr783, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point784({}* %G146926.0, i64 1, {}* %OUT146862.0, {}* null, {}* null, {}* null)
          to label %normal-dest787 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag34:                                            ; preds = %tag2
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %44 = invoke {}* @cc_safe_fdefinition({}* %43)
          to label %normal-dest795 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag36:                                            ; preds = %tag54
  %45 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %46 = invoke {}* @cc_safe_fdefinition({}* %45)
          to label %normal-dest810 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag38:                                            ; preds = %header-check-br1977, %normal-dest1055, %normal-dest975
  %47 = phi {}* [ %584, %normal-dest975 ], [ %594, %normal-dest1055 ], [ %498, %header-check-br1977 ]
  %G147720.0 = phi {}* [ %G147720.1, %normal-dest975 ], [ %G147720.2, %normal-dest1055 ], [ %"closure->LAMBDA3552", %header-check-br1977 ]
  br i1 %consp-test3213, label %tag112, label %tag114

tag40:                                            ; preds = %normal-dest1768, %header-check-br1262
  %48 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %49 = invoke {}* @cc_safe_fdefinition({}* %48)
          to label %normal-dest831 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag41:                                            ; preds = %tag263
  %50 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %51 = invoke {}* @cc_safe_fdefinition({}* %50)
          to label %normal-dest845 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag42:                                            ; preds = %tag217, %normal-dest3337, %tag289
  %.val4875 = phi {}* [ %.val4819.pre, %tag289 ], [ %1090, %normal-dest3337 ], [ %206, %tag217 ]
  %x858.0 = phi {}* [ %261, %tag289 ], [ %x858.1, %normal-dest3337 ], [ %206, %tag217 ]
  %52 = ptrtoint {}* %x858.0 to i64
  %tag-only8624133 = and i64 %52, 7
  %consp-test863 = icmp eq i64 %tag-only8624133, 3
  %.val4818 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147557.0 = select i1 %consp-test863, {}* %.val4818, {}* %.val4875
  %53 = icmp eq {}* %G147557.0, %.val4875
  br i1 %53, label %tag531, label %tag333

tag43:                                            ; preds = %tag170, %normal-dest2714, %tag341
  %.val4851 = phi {}* [ %311, %tag341 ], [ %945, %normal-dest2714 ], [ %311, %tag170 ]
  %x864.0 = phi {}* [ %294, %tag341 ], [ %x864.1, %normal-dest2714 ], [ %311, %tag170 ]
  %54 = ptrtoint {}* %x864.0 to i64
  %tag-only8684200 = and i64 %54, 7
  %consp-test869 = icmp eq i64 %tag-only8684200, 3
  %.val4848 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147291.0 = select i1 %consp-test869, {}* %.val4848, {}* %.val4851
  %55 = icmp eq {}* %G147291.0, %.val4851
  br i1 %55, label %tag527, label %tag606

tag44:                                            ; preds = %tag155
  %56 = add i64 %162, -3
  %57 = inttoptr i64 %56 to {}**
  %58 = load {}*, {}** %57, align 8
  br label %tag195

tag45:                                            ; preds = %normal-dest3589
  %59 = icmp eq {}* %stream.0, %.val4905
  %G146967.0 = select i1 %59, {}* %1145, {}* %.val4905
  %60 = icmp eq {}* %G146967.0, %.val4905
  br i1 %60, label %tag372, label %tag135

tag46:                                            ; preds = %tag472
  %61 = ptrtoint {}* %LENGTH.0.ph to i64
  %fixnum-tag-only4141 = and i64 %61, 3
  %fixnump-test = icmp eq i64 %fixnum-tag-only4141, 0
  br i1 %fixnump-test, label %tag520, label %tag287

tag48:                                            ; preds = %tag599
  %62 = add i64 %398, 5
  %63 = inttoptr i64 %62 to {}**
  %64 = load {}*, {}** %63, align 8
  br label %tag21

tag49:                                            ; preds = %tag218
  %65 = add i64 %209, -3
  %66 = inttoptr i64 %65 to {}**
  %67 = load {}*, {}** %66, align 8
  br label %tag229

tag50:                                            ; preds = %normal-dest3712, %header-check-br897
  %68 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %69 = invoke {}* @cc_safe_fdefinition({}* %68)
          to label %normal-dest884 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag54:                                            ; preds = %tag507
  %70 = icmp eq {}* %.in4287, %.val4889
  %G148109.0 = select i1 %70, {}* %.val4886, {}* %.val4889
  %71 = icmp eq {}* %G148109.0, %.val4889
  br i1 %71, label %tag36, label %tag502

tag57:                                            ; preds = %header-check-br2453, %normal-dest2150, %tag223
  %.val4871 = phi {}* [ %.pre4953, %tag223 ], [ %810, %normal-dest2150 ], [ %1143, %header-check-br2453 ]
  %G147478.0.in = phi {}** [ getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), %tag223 ], [ getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), %normal-dest2150 ], [ getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), %header-check-br2453 ]
  %G147478.0 = load {}*, {}** %G147478.0.in, align 8
  %72 = icmp eq {}* %G147478.0, %.val4871
  br i1 %72, label %tag98, label %tag338

tag58:                                            ; preds = %tag2, %normal-dest802, %tag208
  %.val4879 = phi {}* [ %.val4746.pre, %tag208 ], [ %541, %normal-dest802 ], [ %12, %tag2 ]
  %x803.0 = phi {}* [ %203, %tag208 ], [ %x803.1, %normal-dest802 ], [ %12, %tag2 ]
  %73 = ptrtoint {}* %x803.0 to i64
  %tag-only9153879 = and i64 %73, 7
  %consp-test916 = icmp eq i64 %tag-only9153879, 3
  %.val4745 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147995.0 = select i1 %consp-test916, {}* %.val4745, {}* %.val4879
  %74 = icmp eq {}* %G147995.0, %.val4879
  br i1 %74, label %tag388, label %tag126

tag62:                                            ; preds = %tag507
  %75 = add i64 %398, -3
  %76 = inttoptr i64 %75 to {}**
  %77 = load {}*, {}** %76, align 8
  br label %tag502

tag65:                                            ; preds = %header-check-br3106, %normal-dest1483, %normal-dest1211
  %G147331.0 = phi {}* [ %G147331.1, %normal-dest1211 ], [ %G147331.2, %normal-dest1483 ], [ %"closure->LAMBDA3652", %header-check-br3106 ]
  %78 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 152), align 16
  %79 = invoke {}* @cc_safe_symbol_value({}* %78)
          to label %normal-dest945 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag69:                                            ; preds = %tag138
  %80 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %81 = invoke {}* @cc_safe_fdefinition({}* %80)
          to label %normal-dest953 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag70:                                            ; preds = %tag234, %header-check-br2254
  %82 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %83 = invoke {}* @cc_safe_fdefinition({}* %82)
          to label %normal-dest968 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag74:                                            ; preds = %tag85
  %84 = add i64 %96, -3
  %85 = inttoptr i64 %84 to {}**
  %86 = load {}*, {}** %85, align 8
  br label %tag279

tag76:                                            ; preds = %tag165
  %87 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 146), align 16
  %88 = invoke {}* @cc_safe_fdefinition({}* %87)
          to label %normal-dest983 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag80:                                            ; preds = %tag403
  %89 = icmp eq {}* %.in4287, %.val4895
  %G148063.0 = select i1 %89, {}* %.val4892, {}* %.val4895
  %90 = icmp eq {}* %G148063.0, %.val4895
  br i1 %90, label %tag371, label %tag509

tag81:                                            ; preds = %tag21
  %91 = add i64 %33, -3
  %92 = inttoptr i64 %91 to {}**
  %93 = load {}*, {}** %92, align 8
  br label %tag298

tag82:                                            ; preds = %normal-dest1860
  %ptrtoint1013 = ptrtoint {}* %"closure->LAMBDA1861" to i64
  %tag-only1014 = and i64 %ptrtoint1013, 7
  %test1015 = icmp eq i64 %tag-only1014, 1
  br i1 %test1015, label %header-check-br1012, label %tag446

tag84:                                            ; preds = %tag28
  %94 = icmp eq {}* %x760.0, %.val4787
  %G147783.0 = select i1 %94, {}* %.val4784, {}* %.val4787
  %95 = icmp eq {}* %G147783.0, %.val4787
  br i1 %95, label %tag199, label %tag264

tag85:                                            ; preds = %tag536, %normal-dest1359, %tag8
  %.val4833 = phi {}* [ %.val4831.pre, %tag8 ], [ %654, %normal-dest1359 ], [ %436, %tag536 ]
  %x650.0 = phi {}* [ %21, %tag8 ], [ %x650.1, %normal-dest1359 ], [ %436, %tag536 ]
  %96 = ptrtoint {}* %x650.0 to i64
  %tag-only10434156 = and i64 %96, 7
  %consp-test1044 = icmp eq i64 %tag-only10434156, 3
  %.val4830 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147425.0 = select i1 %consp-test1044, {}* %.val4830, {}* %.val4833
  %97 = icmp eq {}* %G147425.0, %.val4833
  br i1 %97, label %tag138, label %tag74

tag92:                                            ; preds = %header-check-br3375, %normal-dest2310, %normal-dest939
  %G147642.0 = phi {}* [ %G147642.1, %normal-dest939 ], [ %G147642.2, %normal-dest2310 ], [ %"closure->LAMBDA1990", %header-check-br3375 ]
  %98 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 152), align 16
  %99 = invoke {}* @cc_safe_symbol_value({}* %98)
          to label %normal-dest1062 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag98:                                            ; preds = %tag57
  %100 = icmp eq {}* %.in4287, %.val4871
  %.val4870 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147474.0 = select i1 %100, {}* %.val4870, {}* %.val4871
  %101 = icmp eq {}* %G147474.0, %.val4871
  br i1 %101, label %tag377, label %tag414

tag100:                                           ; preds = %tag143
  %102 = add i64 %398, -3
  %103 = inttoptr i64 %102 to {}**
  %104 = load {}*, {}** %103, align 8
  br label %tag18

tag102:                                           ; preds = %tag345
  %105 = add i64 %398, 5
  %106 = inttoptr i64 %105 to {}**
  %107 = load {}*, {}** %106, align 8
  br label %tag336

tag104:                                           ; preds = %normal-dest1899, %normal-dest1300, %normal-dest1255, %normal-dest787
  %return-value.sroa.256.0 = phi i64 [ 1, %normal-dest1300 ], [ 1, %normal-dest787 ], [ %.elt4421, %normal-dest1899 ], [ 1, %normal-dest1255 ]
  %return-value.sroa.0.0 = phi i64 [ %645, %normal-dest1300 ], [ %535, %normal-dest787 ], [ %774, %normal-dest1899 ], [ %636, %normal-dest1255 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %108 = inttoptr i64 %return-value.sroa.0.0 to {}*
  %109 = insertvalue { {}*, i64 } undef, {}* %108, 0
  %110 = insertvalue { {}*, i64 } %109, i64 %return-value.sroa.256.0, 1
  ret { {}*, i64 } %110

tag105:                                           ; preds = %tag259
  %111 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %112 = invoke {}* @cc_safe_fdefinition({}* %111)
          to label %normal-dest1080 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag106:                                           ; preds = %normal-dest1639
  %ptrtoint1095 = ptrtoint {}* %"closure->LAMBDA" to i64
  %tag-only1096 = and i64 %ptrtoint1095, 7
  %test1097 = icmp eq i64 %tag-only1096, 1
  br i1 %test1097, label %header-check-br1094, label %tag537

tag110:                                           ; preds = %normal-dest990, %header-check-br3069
  %113 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %114 = invoke {}* @cc_safe_fdefinition({}* %113)
          to label %normal-dest1119 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag111:                                           ; preds = %normal-dest3589
  %ptrtoint1133 = ptrtoint {}* %"closure->LAMBDA3590" to i64
  %tag-only1134 = and i64 %ptrtoint1133, 7
  %test1135 = icmp eq i64 %tag-only1134, 1
  br i1 %test1135, label %header-check-br1132, label %tag501

tag112:                                           ; preds = %tag38
  %115 = add i64 %398, 5
  %116 = inttoptr i64 %115 to {}**
  %117 = load {}*, {}** %116, align 8
  br label %tag526

tag114:                                           ; preds = %tag38
  %118 = icmp eq {}* %.in4287, %47
  %.val4790 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147752.0 = select i1 %118, {}* %.val4790, {}* %47
  %119 = icmp eq {}* %G147752.0, %47
  br i1 %119, label %tag190, label %tag526

tag116:                                           ; preds = %normal-dest2057, %header-check-br1774, %normal-dest838
  %G147619.0 = phi {}* [ %G147619.1, %normal-dest838 ], [ %"closure->LAMBDA1990", %header-check-br1774 ], [ %G147619.2, %normal-dest2057 ]
  %120 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 195), align 8
  %ptrtoint1156 = ptrtoint {}* %G147619.0 to i64
  %entry-point-addr-uint1157 = add i64 %ptrtoint1156, 7
  %entry-point-addr1158 = inttoptr i64 %entry-point-addr-uint1157 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1159 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1158, align 8
  %121 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1159({}* %G147619.0, i64 2, {}* %G146820.0, {}* %120, {}* null, {}* null)
          to label %normal-dest1162 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag117:                                           ; preds = %normal-dest2136
  %122 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 143), align 8
  %123 = invoke {}* @cc_safe_fdefinition({}* %122)
          to label %normal-dest1181 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag118:                                           ; preds = %tag463, %header-check-br3601
  %124 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %125 = invoke {}* @cc_safe_fdefinition({}* %124)
          to label %normal-dest1204 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag120:                                           ; preds = %tag137
  %126 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 146), align 16
  %127 = invoke {}* @cc_safe_fdefinition({}* %126)
          to label %normal-dest1225 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag122:                                           ; preds = %normal-dest3299, %normal-dest1874, %header-check-br1132
  %G146974.0 = phi {}* [ %"closure->LAMBDA3590", %header-check-br1132 ], [ %G146974.1, %normal-dest1874 ], [ %G146974.2, %normal-dest3299 ]
  %128 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 152), align 16
  %129 = invoke {}* @cc_safe_symbol_value({}* %128)
          to label %normal-dest1248 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag126:                                           ; preds = %tag58
  %130 = add i64 %73, -3
  %131 = inttoptr i64 %130 to {}**
  %132 = load {}*, {}** %131, align 8
  br label %tag131

tag127:                                           ; preds = %normal-dest2503, %header-check-br2354, %normal-dest2003
  %G146911.0 = phi {}* [ %G146911.1, %normal-dest2003 ], [ %"closure->LAMBDA3590", %header-check-br2354 ], [ %G146911.2, %normal-dest2503 ]
  %ptrtoint1294 = ptrtoint {}* %G146911.0 to i64
  %entry-point-addr-uint1295 = add i64 %ptrtoint1294, 7
  %entry-point-addr1296 = inttoptr i64 %entry-point-addr-uint1295 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1297 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1296, align 8
  %133 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1297({}* %G146911.0, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest1300 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag128:                                           ; preds = %normal-dest3086
  %134 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 164), align 16
  %135 = invoke {}* @cc_safe_fdefinition({}* %134)
          to label %normal-dest1308 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag129:                                           ; preds = %normal-dest3472, %normal-dest1926, %header-check-br1094
  %G148270.0 = phi {}* [ %"closure->LAMBDA", %header-check-br1094 ], [ %G148270.1, %normal-dest1926 ], [ %G148270.2, %normal-dest3472 ]
  %136 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 152), align 16
  %137 = invoke {}* @cc_safe_symbol_value({}* %136)
          to label %normal-dest1316 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag130:                                           ; preds = %tag263, %normal-dest852, %tag267
  %G147333.0 = phi {}* [ %246, %tag267 ], [ %G147333.1, %normal-dest852 ], [ %.val4841, %tag263 ]
  %ptrtoint1328 = ptrtoint {}* %G147331.0 to i64
  %entry-point-addr-uint1329 = add i64 %ptrtoint1328, 7
  %entry-point-addr1330 = inttoptr i64 %entry-point-addr-uint1329 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1331 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1330, align 8
  %138 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1331({}* %G147331.0, i64 2, {}* %79, {}* %G147333.0, {}* null, {}* null)
          to label %tag212 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag131:                                           ; preds = %tag388, %normal-dest3509, %tag126
  %G147978.0 = phi {}* [ %132, %tag126 ], [ %G147978.1, %normal-dest3509 ], [ %.val4879, %tag388 ]
  %ptrtoint1339 = ptrtoint {}* %228 to i64
  %entry-point-addr-uint1340 = add i64 %ptrtoint1339, 7
  %entry-point-addr1341 = inttoptr i64 %entry-point-addr-uint1340 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1342 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1341, align 8
  %139 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1342({}* %228, i64 1, {}* %G147978.0, {}* null, {}* null, {}* null)
          to label %normal-dest1345 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag132:                                           ; preds = %tag536
  %140 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %141 = invoke {}* @cc_safe_fdefinition({}* %140)
          to label %normal-dest1352 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag134:                                           ; preds = %tag397
  %142 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 146), align 16
  %143 = invoke {}* @cc_safe_fdefinition({}* %142)
          to label %normal-dest1375 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag135:                                           ; preds = %tag45
  %144 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 146), align 16
  %145 = invoke {}* @cc_safe_fdefinition({}* %144)
          to label %normal-dest1398 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag136:                                           ; preds = %normal-dest1188, %header-check-br2649
  %146 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %147 = invoke {}* @cc_safe_fdefinition({}* %146)
          to label %normal-dest1422 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag137:                                           ; preds = %normal-dest2859
  %148 = icmp eq {}* %stream.0, %.val4740
  %G148134.0 = select i1 %148, {}* %977, {}* %.val4740
  %149 = icmp eq {}* %G148134.0, %.val4740
  br i1 %149, label %tag204, label %tag120

tag138:                                           ; preds = %tag85
  %150 = icmp eq {}* %x650.0, %.val4833
  %G147418.0 = select i1 %150, {}* %.val4830, {}* %.val4833
  %151 = icmp eq {}* %G147418.0, %.val4833
  br i1 %151, label %tag69, label %tag279

tag141:                                           ; preds = %normal-dest3249, %header-check-br2386, %normal-dest2348
  %152 = phi {}* [ %855, %normal-dest2348 ], [ %862, %header-check-br2386 ], [ %1067, %normal-dest3249 ]
  %G147210.0 = phi {}* [ %G147210.1, %normal-dest2348 ], [ %"closure->LAMBDA3652", %header-check-br2386 ], [ %G147210.2, %normal-dest3249 ]
  br i1 %consp-test3213, label %tag427, label %tag154

tag143:                                           ; preds = %header-check-br3440, %normal-dest2091, %normal-dest1469
  %.val4901 = phi {}* [ %677, %normal-dest1469 ], [ %799, %normal-dest2091 ], [ %764, %header-check-br3440 ]
  %G148016.0 = phi {}* [ %G148016.1, %normal-dest1469 ], [ %G148016.2, %normal-dest2091 ], [ %"closure->LAMBDA2860", %header-check-br3440 ]
  %.val4898 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G148035.0 = select i1 %consp-test3213, {}* %.val4898, {}* %.val4901
  %153 = icmp eq {}* %G148035.0, %.val4901
  br i1 %153, label %tag360, label %tag100

tag145:                                           ; preds = %tag534, %header-check-br694
  %154 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %155 = invoke {}* @cc_safe_fdefinition({}* %154)
          to label %normal-dest1462 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag148:                                           ; preds = %tag527
  %156 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %157 = invoke {}* @cc_safe_fdefinition({}* %156)
          to label %normal-dest1490 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag151:                                           ; preds = %tag531
  %158 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %159 = invoke {}* @cc_safe_fdefinition({}* %158)
          to label %normal-dest1513 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag154:                                           ; preds = %tag141
  %160 = icmp eq {}* %.in4287, %152
  %.val4854 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147242.0 = select i1 %160, {}* %.val4854, {}* %152
  %161 = icmp eq {}* %G147242.0, %152
  br i1 %161, label %tag523, label %tag155

tag155:                                           ; preds = %tag154, %normal-dest3404, %tag427
  %.val4859 = phi {}* [ %152, %tag427 ], [ %1100, %normal-dest3404 ], [ %152, %tag154 ]
  %x1546.0 = phi {}* [ %361, %tag427 ], [ %x1546.1, %normal-dest3404 ], [ %152, %tag154 ]
  %162 = ptrtoint {}* %x1546.0 to i64
  %tag-only15494234 = and i64 %162, 7
  %consp-test1550 = icmp eq i64 %tag-only15494234, 3
  %.val4856 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147229.0 = select i1 %consp-test1550, {}* %.val4856, {}* %.val4859
  %163 = icmp eq {}* %G147229.0, %.val4859
  br i1 %163, label %tag450, label %tag44

tag156:                                           ; preds = %normal-dest3265, %normal-dest3192, %header-check-br1797
  %G147111.0 = phi {}* [ %"closure->LAMBDA1861", %header-check-br1797 ], [ %G147111.1, %normal-dest3192 ], [ %G147111.2, %normal-dest3265 ]
  %ptrtoint1552 = ptrtoint {}* %G147111.0 to i64
  %entry-point-addr-uint1553 = add i64 %ptrtoint1552, 7
  %entry-point-addr1554 = inttoptr i64 %entry-point-addr-uint1553 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1555 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1554, align 8
  %164 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1555({}* %G147111.0, i64 1, {}* %G146852.0, {}* null, {}* null, {}* null)
          to label %normal-dest1558 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag160:                                           ; preds = %normal-dest2642
  %165 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 143), align 8
  %166 = invoke {}* @cc_safe_fdefinition({}* %165)
          to label %normal-dest1577 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag164:                                           ; preds = %header-check-br3449, %normal-dest2962, %normal-dest2544
  %G148206.0 = phi {}* [ %G148206.1, %normal-dest2544 ], [ %G148206.2, %normal-dest2962 ], [ %"closure->LAMBDA", %header-check-br3449 ]
  %ptrtoint1608 = ptrtoint {}* %G148206.0 to i64
  %entry-point-addr-uint1609 = add i64 %ptrtoint1608, 7
  %entry-point-addr1610 = inttoptr i64 %entry-point-addr-uint1609 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1611 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1610, align 8
  %167 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1611({}* %G148206.0, i64 2, {}* %stream.0, {}* %farg0, {}* null, {}* null)
          to label %tag342 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag165:                                           ; preds = %normal-dest1639
  %168 = icmp eq {}* %stream.0, %.val4735
  %G148264.0 = select i1 %168, {}* %707, {}* %.val4735
  %169 = icmp eq {}* %G148264.0, %.val4735
  br i1 %169, label %tag462, label %tag76

tag166:                                           ; preds = %tag178
  %170 = add i64 %177, -3
  %171 = inttoptr i64 %170 to {}**
  %172 = load {}*, {}** %171, align 8
  br label %tag514

tag168:                                           ; preds = %tag480
  %173 = icmp eq {}* %.in4287, %.val4736
  %.val = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147032.0 = select i1 %173, {}* %.val, {}* %.val4736
  %174 = icmp eq {}* %G147032.0, %.val4736
  br i1 %174, label %tag454, label %tag419

tag170:                                           ; preds = %tag370
  %175 = icmp eq {}* %.in4287, %311
  %.val4846 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147304.0 = select i1 %175, {}* %.val4846, {}* %311
  %176 = icmp eq {}* %G147304.0, %311
  br i1 %176, label %tag386, label %tag43

tag178:                                           ; preds = %tag398, %normal-dest2164, %tag200
  %.val4867 = phi {}* [ %464, %tag200 ], [ %817, %normal-dest2164 ], [ %464, %tag398 ]
  %x1653.0 = phi {}* [ %196, %tag200 ], [ %x1653.1, %normal-dest2164 ], [ %464, %tag398 ]
  %177 = ptrtoint {}* %x1653.0 to i64
  %tag-only16564256 = and i64 %177, 7
  %consp-test1657 = icmp eq i64 %tag-only16564256, 3
  %.val4864 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147178.0 = select i1 %consp-test1657, {}* %.val4864, {}* %.val4867
  %178 = icmp eq {}* %G147178.0, %.val4867
  br i1 %178, label %tag595, label %tag166

tag180:                                           ; preds = %tag228
  %179 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %180 = invoke {}* @cc_safe_fdefinition({}* %179)
          to label %normal-dest1659 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag181:                                           ; preds = %normal-dest1854
  %181 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 143), align 8
  %182 = invoke {}* @cc_safe_fdefinition({}* %181)
          to label %normal-dest1674 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag182:                                           ; preds = %tag332
  %183 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %184 = invoke {}* @cc_safe_fdefinition({}* %183)
          to label %normal-dest1698 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag190:                                           ; preds = %tag114
  %185 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %186 = invoke {}* @cc_safe_fdefinition({}* %185)
          to label %normal-dest1747 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag191:                                           ; preds = %tag558
  %187 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 146), align 16
  %188 = invoke {}* @cc_safe_fdefinition({}* %187)
          to label %normal-dest1761 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag194:                                           ; preds = %tag498
  %189 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 146), align 16
  %190 = invoke {}* @cc_safe_fdefinition({}* %189)
          to label %normal-dest1784 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag195:                                           ; preds = %tag450, %normal-dest3235, %tag44
  %G147212.0 = phi {}* [ %58, %tag44 ], [ %G147212.1, %normal-dest3235 ], [ %.val4859, %tag450 ]
  %ptrtoint1806 = ptrtoint {}* %G147210.0 to i64
  %entry-point-addr-uint1807 = add i64 %ptrtoint1806, 7
  %entry-point-addr1808 = inttoptr i64 %entry-point-addr-uint1807 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1809 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1808, align 8
  %191 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1809({}* %G147210.0, i64 2, {}* %OUT1468291447.0, {}* %G147212.0, {}* null, {}* null)
          to label %tag212 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag199:                                           ; preds = %tag84
  %192 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %193 = invoke {}* @cc_safe_fdefinition({}* %192)
          to label %normal-dest1818 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag200:                                           ; preds = %tag581
  %194 = add i64 %398, 5
  %195 = inttoptr i64 %194 to {}**
  %196 = load {}*, {}** %195, align 8
  br label %tag178

tag202:                                           ; preds = %tag365, %header-check-br3136
  %197 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %198 = invoke {}* @cc_safe_fdefinition({}* %197)
          to label %normal-dest1833 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag204:                                           ; preds = %tag137
  %199 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 140), align 16
  %200 = invoke {}* @cc_safe_fdefinition({}* %199)
          to label %normal-dest1847 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag208:                                           ; preds = %normal-dest2010
  %201 = add i64 %398, 5
  %202 = inttoptr i64 %201 to {}**
  %203 = load {}*, {}** %202, align 8
  %.val4746.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %tag58

tag212:                                           ; preds = %normal-dest1062, %tag514, %tag399, %normal-dest2289, %tag279, %tag277, %tag264, %normal-dest2028, %tag230, %tag229, %tag195, %tag130, %normal-dest1168
  %204 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 236), align 16
  %"closure->LAMBDA1861" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %204, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.1", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.1^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2794, i64 96, i64 0, i64 0)
          to label %normal-dest1860 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag216:                                           ; preds = %normal-dest3434, %normal-dest2609, %header-check-br1412
  %G146951.0 = phi {}* [ %"closure->LAMBDA3590", %header-check-br1412 ], [ %G146951.1, %normal-dest2609 ], [ %G146951.2, %normal-dest3434 ]
  %ptrtoint1880 = ptrtoint {}* %G146951.0 to i64
  %entry-point-addr-uint1881 = add i64 %ptrtoint1880, 7
  %entry-point-addr1882 = inttoptr i64 %entry-point-addr-uint1881 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1883 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1882, align 8
  %205 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1883({}* %G146951.0, i64 1, {}* %G146868.0, {}* null, {}* null, {}* null)
          to label %normal-dest1886 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag217:                                           ; preds = %normal-dest1308
  %206 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %207 = icmp eq {}* %.in4287, %206
  %.val4816 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147570.0 = select i1 %207, {}* %.val4816, {}* %206
  %208 = icmp eq {}* %G147570.0, %206
  br i1 %208, label %tag505, label %tag42

tag218:                                           ; preds = %tag407, %normal-dest2851, %tag583
  %.val4769 = phi {}* [ %.val4752.pre, %tag583 ], [ %976, %normal-dest2851 ], [ %342, %tag407 ]
  %x1906.0 = phi {}* [ %467, %tag583 ], [ %x1906.1, %normal-dest2851 ], [ %342, %tag407 ]
  %209 = ptrtoint {}* %x1906.0 to i64
  %tag-only19093889 = and i64 %209, 7
  %consp-test1910 = icmp eq i64 %tag-only19093889, 3
  %.val4751 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147911.0 = select i1 %consp-test1910, {}* %.val4751, {}* %.val4769
  %210 = icmp eq {}* %G147911.0, %.val4769
  br i1 %210, label %tag566, label %tag49

tag221:                                           ; preds = %tag403
  %211 = add i64 %398, -3
  %212 = inttoptr i64 %211 to {}**
  %213 = load {}*, {}** %212, align 8
  br label %tag509

tag222:                                           ; preds = %tag329
  %214 = icmp eq {}* %.in4287, %274
  %.val4782 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147803.0 = select i1 %214, {}* %.val4782, {}* %274
  %215 = icmp eq {}* %G147803.0, %274
  br i1 %215, label %tag589, label %tag28

tag223:                                           ; preds = %tag340, %header-check-br2363, %normal-dest2150
  %.pre4953 = phi {}* [ %1143, %tag340 ], [ %1143, %header-check-br2363 ], [ %810, %normal-dest2150 ]
  br label %tag57

tag225:                                           ; preds = %tag599
  %216 = icmp eq {}* %.in4287, %476
  %.val4774 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147865.0 = select i1 %216, {}* %.val4774, {}* %476
  %217 = icmp eq {}* %G147865.0, %476
  br i1 %217, label %tag542, label %tag21

tag227:                                           ; preds = %normal-dest3285, %header-check-br2586, %normal-dest1840
  %G148140.0 = phi {}* [ %G148140.1, %normal-dest1840 ], [ %"closure->LAMBDA2860", %header-check-br2586 ], [ %G148140.2, %normal-dest3285 ]
  %218 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 152), align 16
  %219 = invoke {}* @cc_safe_symbol_value({}* %218)
          to label %normal-dest1939 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag228:                                           ; preds = %tag605
  %220 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %221 = icmp eq {}* %x759.0, %220
  %.val4757 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147049.0 = select i1 %221, {}* %.val4757, {}* %220
  %222 = icmp eq {}* %G147049.0, %220
  br i1 %222, label %tag180, label %tag480.backedge

tag480.backedge:                                  ; preds = %tag228, %normal-dest1667, %tag261
  %.val4736.be = phi {}* [ %.pre4941.pre, %tag261 ], [ %718, %normal-dest1667 ], [ %220, %tag228 ]
  %.in4287.be = phi {}* [ %236, %tag261 ], [ %.in, %normal-dest1667 ], [ %220, %tag228 ]
  br label %tag480

tag229:                                           ; preds = %tag566, %normal-dest775, %tag49
  %G147894.0 = phi {}* [ %67, %tag49 ], [ %G147894.1, %normal-dest775 ], [ %.val4769, %tag566 ]
  %ptrtoint1954 = ptrtoint {}* %G147892.0 to i64
  %entry-point-addr-uint1955 = add i64 %ptrtoint1954, 7
  %entry-point-addr1956 = inttoptr i64 %entry-point-addr-uint1955 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1957 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1956, align 8
  %223 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1957({}* %G147892.0, i64 2, {}* %385, {}* %G147894.0, {}* null, {}* null)
          to label %tag212 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag230:                                           ; preds = %header-check-br3159, %normal-dest2934, %normal-dest2517
  %G147593.0 = phi {}* [ %G147593.1, %normal-dest2517 ], [ %G147593.2, %normal-dest2934 ], [ %"closure->LAMBDA1990", %header-check-br3159 ]
  %224 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 195), align 8
  %ptrtoint1966 = ptrtoint {}* %G147593.0 to i64
  %entry-point-addr-uint1967 = add i64 %ptrtoint1966, 7
  %entry-point-addr1968 = inttoptr i64 %entry-point-addr-uint1967 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1969 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1968, align 8
  %225 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1969({}* %G147593.0, i64 2, {}* %OUT1468121965.0, {}* %224, {}* null, {}* null)
          to label %tag212 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag234:                                           ; preds = %normal-dest643
  %ptrtoint1978 = ptrtoint {}* %"closure->LAMBDA3552" to i64
  %tag-only1979 = and i64 %ptrtoint1978, 7
  %test1980 = icmp eq i64 %tag-only1979, 1
  br i1 %test1980, label %header-check-br1977, label %tag70

tag239:                                           ; preds = %normal-dest3086
  %226 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 236), align 16
  %"closure->LAMBDA1990" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %226, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.2", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.2^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2794, i64 96, i64 0, i64 0)
          to label %normal-dest1989 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag247:                                           ; preds = %tag18, %tag509, %normal-dest3317, %tag274
  %227 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 140), align 16
  %228 = invoke {}* @cc_safe_fdefinition({}* %227)
          to label %normal-dest2010 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag248:                                           ; preds = %tag527, %normal-dest1497, %tag606
  %G147274.0 = phi {}* [ %483, %tag606 ], [ %G147274.1, %normal-dest1497 ], [ %.val4851, %tag527 ]
  %ptrtoint2016 = ptrtoint {}* %G147272.0 to i64
  %entry-point-addr-uint2017 = add i64 %ptrtoint2016, 7
  %entry-point-addr2018 = inttoptr i64 %entry-point-addr-uint2017 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2019 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2018, align 8
  %229 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2019({}* %G147272.0, i64 2, {}* %G146837.0, {}* %G147274.0, {}* null, {}* null)
          to label %normal-dest2022 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag249:                                           ; preds = %normal-dest2882
  %ptrtoint2041 = ptrtoint {}* %"closure->LAMBDA3652" to i64
  %tag-only2042 = and i64 %ptrtoint2041, 7
  %test2043 = icmp eq i64 %tag-only2042, 1
  br i1 %test2043, label %header-check-br2040, label %tag265

tag254:                                           ; preds = %tag313, %header-check-br1147
  %230 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %231 = invoke {}* @cc_safe_fdefinition({}* %230)
          to label %normal-dest2064 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag259:                                           ; preds = %tag336
  %232 = icmp eq {}* %x757.0, %.val4877
  %G147693.0 = select i1 %232, {}* %.val4800, {}* %.val4877
  %233 = icmp eq {}* %G147693.0, %.val4877
  br i1 %233, label %tag105, label %tag461

tag261:                                           ; preds = %tag605
  %234 = add i64 %480, 5
  %235 = inttoptr i64 %234 to {}**
  %236 = load {}*, {}** %235, align 8
  %.pre4941.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %tag480.backedge

tag263:                                           ; preds = %tag13
  %237 = icmp eq {}* %x689.0, %.val4841
  %G147343.0 = select i1 %237, {}* %.val4838, {}* %.val4841
  %238 = icmp eq {}* %G147343.0, %.val4841
  br i1 %238, label %tag41, label %tag130

tag264:                                           ; preds = %tag84, %normal-dest1825, %tag272
  %G147773.0 = phi {}* [ %251, %tag272 ], [ %G147773.1, %normal-dest1825 ], [ %.val4787, %tag84 ]
  %ptrtoint2103 = ptrtoint {}* %G147771.0 to i64
  %entry-point-addr-uint2104 = add i64 %ptrtoint2103, 7
  %entry-point-addr2105 = inttoptr i64 %entry-point-addr-uint2104 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2106 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2105, align 8
  %239 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2106({}* %G147771.0, i64 2, {}* %OUT1467952409.0, {}* %G147773.0, {}* null, {}* null)
          to label %tag212 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag265:                                           ; preds = %tag249, %header-check-br1723
  %240 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %241 = invoke {}* @cc_safe_fdefinition({}* %240)
          to label %normal-dest2115 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag266:                                           ; preds = %tag498
  %242 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 140), align 16
  %243 = invoke {}* @cc_safe_fdefinition({}* %242)
          to label %normal-dest2129 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag267:                                           ; preds = %tag13
  %244 = add i64 %26, -3
  %245 = inttoptr i64 %244 to {}**
  %246 = load {}*, {}** %245, align 8
  br label %tag130

tag270:                                           ; preds = %tag398
  %247 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %248 = invoke {}* @cc_safe_fdefinition({}* %247)
          to label %normal-dest2157 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag272:                                           ; preds = %tag28
  %249 = add i64 %38, -3
  %250 = inttoptr i64 %249 to {}**
  %251 = load {}*, {}** %250, align 8
  br label %tag264

tag274:                                           ; preds = %tag433, %normal-dest2761, %tag374
  %G148142.0 = phi {}* [ %318, %tag374 ], [ %G148142.1, %normal-dest2761 ], [ %.val4742, %tag433 ]
  %ptrtoint2170 = ptrtoint {}* %G148140.0 to i64
  %entry-point-addr-uint2171 = add i64 %ptrtoint2170, 7
  %entry-point-addr2172 = inttoptr i64 %entry-point-addr-uint2171 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2173 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2172, align 8
  %252 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2173({}* %G148140.0, i64 2, {}* %219, {}* %G148142.0, {}* null, {}* null)
          to label %tag247 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag277:                                           ; preds = %tag10, %normal-dest2234, %tag602
  %G147722.0 = phi {}* [ %479, %tag602 ], [ %G147722.1, %normal-dest2234 ], [ %.val4795, %tag10 ]
  %ptrtoint2181 = ptrtoint {}* %G147720.0 to i64
  %entry-point-addr-uint2182 = add i64 %ptrtoint2181, 7
  %entry-point-addr2183 = inttoptr i64 %entry-point-addr-uint2182 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2184 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2183, align 8
  %253 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2184({}* %G147720.0, i64 2, {}* %stream.0, {}* %G147722.0, {}* null, {}* null)
          to label %tag212 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag279:                                           ; preds = %tag138, %normal-dest961, %tag74
  %G147407.0 = phi {}* [ %86, %tag74 ], [ %G147407.1, %normal-dest961 ], [ %.val4833, %tag138 ]
  %ptrtoint2192 = ptrtoint {}* %403 to i64
  %entry-point-addr-uint2193 = add i64 %ptrtoint2192, 7
  %entry-point-addr2194 = inttoptr i64 %entry-point-addr-uint2193 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2195 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2194, align 8
  %254 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2195({}* %403, i64 2, {}* %G147407.0, {}* %stream.0, {}* null, {}* null)
          to label %tag212 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag286:                                           ; preds = %tag10
  %255 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %256 = invoke {}* @cc_safe_fdefinition({}* %255)
          to label %normal-dest2227 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag287:                                           ; preds = %tag46
  %257 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 182), align 16
  %258 = invoke {}* @cc_safe_fdefinition({}* %257)
          to label %normal-dest2241 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

tag289:                                           ; preds = %normal-dest1308
  %259 = add i64 %398, 5
  %260 = inttoptr i64 %259 to {}**
  %261 = load {}*, {}** %260, align 8
  %.val4819.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %tag42

tag293:                                           ; preds = %tag360
  %262 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %263 = invoke {}* @cc_safe_fdefinition({}* %262)
          to label %normal-dest2264 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag298:                                           ; preds = %tag332, %normal-dest1705, %tag81
  %G147835.0 = phi {}* [ %93, %tag81 ], [ %G147835.1, %normal-dest1705 ], [ %.val4779, %tag332 ]
  %ptrtoint2277 = ptrtoint {}* %G147833.0 to i64
  %entry-point-addr-uint2278 = add i64 %ptrtoint2277, 7
  %entry-point-addr2279 = inttoptr i64 %entry-point-addr-uint2278 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2280 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2279, align 8
  %264 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2280({}* %G147833.0, i64 2, {}* %G146803.0, {}* %G147835.0, {}* null, {}* null)
          to label %normal-dest2283 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag304:                                           ; preds = %tag414
  %265 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 184), align 16
  %266 = invoke {}* @cc_safe_fdefinition({}* %265)
          to label %normal-dest1104 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag308:                                           ; preds = %tag513, %header-check-br2902
  %267 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %268 = invoke {}* @cc_safe_fdefinition({}* %267)
          to label %normal-dest2303 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag313:                                           ; preds = %normal-dest3551
  %ptrtoint2317 = ptrtoint {}* %"closure->LAMBDA3552" to i64
  %tag-only2318 = and i64 %ptrtoint2317, 7
  %test2319 = icmp eq i64 %tag-only2318, 1
  br i1 %test2319, label %header-check-br2316, label %tag254

tag314:                                           ; preds = %normal-dest945
  %269 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %270 = icmp eq {}* %.in4287, %269
  %.val4836 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147363.0 = select i1 %270, {}* %.val4836, {}* %269
  %271 = icmp eq {}* %G147363.0, %269
  br i1 %271, label %tag364, label %tag13

tag320:                                           ; preds = %normal-dest2642
  %ptrtoint2355 = ptrtoint {}* %"closure->LAMBDA3590" to i64
  %tag-only2356 = and i64 %ptrtoint2355, 7
  %test2357 = icmp eq i64 %tag-only2356, 1
  br i1 %test2357, label %header-check-br2354, label %tag346

tag323:                                           ; preds = %normal-dest2882
  %272 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 143), align 8
  %273 = invoke {}* @cc_safe_fdefinition({}* %272)
          to label %normal-dest2373 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag329:                                           ; preds = %normal-dest3176, %header-check-br2686, %normal-dest2211
  %274 = phi {}* [ %819, %normal-dest2211 ], [ %937, %header-check-br2686 ], [ %1047, %normal-dest3176 ]
  %G147771.0 = phi {}* [ %G147771.1, %normal-dest2211 ], [ %"closure->LAMBDA3552", %header-check-br2686 ], [ %G147771.2, %normal-dest3176 ]
  br i1 %consp-test3213, label %tag529, label %tag222

tag330:                                           ; preds = %tag595
  %275 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %276 = invoke {}* @cc_safe_fdefinition({}* %275)
          to label %normal-dest2416 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag332:                                           ; preds = %tag21
  %277 = icmp eq {}* %x742.0, %.val4779
  %G147845.0 = select i1 %277, {}* %.val4776, {}* %.val4779
  %278 = icmp eq {}* %G147845.0, %.val4779
  br i1 %278, label %tag182, label %tag298

tag333:                                           ; preds = %tag42
  %279 = add i64 %52, -3
  %280 = inttoptr i64 %279 to {}**
  %281 = load {}*, {}** %280, align 8
  br label %tag562

tag334:                                           ; preds = %tag426, %header-check-br1365
  %282 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %283 = invoke {}* @cc_safe_fdefinition({}* %282)
          to label %normal-dest2436 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag336:                                           ; preds = %tag420, %normal-dest3206, %tag102
  %.val4877 = phi {}* [ %647, %tag102 ], [ %1055, %normal-dest3206 ], [ %647, %tag420 ]
  %x757.0 = phi {}* [ %107, %tag102 ], [ %x757.1, %normal-dest3206 ], [ %647, %tag420 ]
  %284 = ptrtoint {}* %x757.0 to i64
  %tag-only24514063 = and i64 %284, 7
  %consp-test2452 = icmp eq i64 %tag-only24514063, 3
  %.val4800 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147700.0 = select i1 %consp-test2452, {}* %.val4800, {}* %.val4877
  %285 = icmp eq {}* %G147700.0, %.val4877
  br i1 %285, label %tag259, label %tag477

tag338:                                           ; preds = %tag57
  %286 = add i64 %398, 7
  %287 = inttoptr i64 %286 to i64*
  %288 = load i64, i64* %287, align 8
  %"tag fixnum" = shl nuw i64 %288, 2
  %289 = inttoptr i64 %"tag fixnum" to {}*
  br label %tag414

tag339:                                           ; preds = %tag472
  %290 = icmp eq {}* %G2095854.0, %.val4827
  %G147486.0 = select i1 %290, {}* %.val4824, {}* %.val4827
  %291 = icmp eq {}* %G147486.0, %.val4827
  br i1 %291, label %tag390, label %tag414

tag340:                                           ; preds = %tag395
  %test2456 = icmp eq i64 %tag-only32123868, 1
  br i1 %test2456, label %header-check-br2453, label %tag223

tag341:                                           ; preds = %tag370
  %292 = add i64 %398, 5
  %293 = inttoptr i64 %292 to {}**
  %294 = load {}*, {}** %293, align 8
  br label %tag43

tag342:                                           ; preds = %normal-dest1316, %tag574, %normal-dest3011, %tag164
  %295 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 82), align 16
  %296 = invoke {}* @cc_safe_fdefinition({}* %295)
          to label %normal-dest2463 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag343:                                           ; preds = %normal-dest1584, %header-check-br2331
  %297 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %298 = invoke {}* @cc_safe_fdefinition({}* %297)
          to label %normal-dest2477 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag345:                                           ; preds = %normal-dest1345
  br i1 %consp-test3213, label %tag102, label %tag420

tag346:                                           ; preds = %tag320, %header-check-br3542
  %299 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %300 = invoke {}* @cc_safe_fdefinition({}* %299)
          to label %normal-dest2496 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag350:                                           ; preds = %normal-dest3153, %header-check-br2217
  %301 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %302 = invoke {}* @cc_safe_fdefinition({}* %301)
          to label %normal-dest2510 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag352:                                           ; preds = %normal-dest2741, %tag352.outer
  br i1 %consp-test2526, label %tag567, label %tag571

tag360:                                           ; preds = %tag143
  %303 = icmp eq {}* %.in4287, %.val4901
  %G148028.0 = select i1 %303, {}* %.val4898, {}* %.val4901
  %304 = icmp eq {}* %G148028.0, %.val4901
  br i1 %304, label %tag293, label %tag18

tag364:                                           ; preds = %tag314
  %305 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %306 = invoke {}* @cc_safe_fdefinition({}* %305)
          to label %normal-dest2573 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag365:                                           ; preds = %normal-dest2859
  %ptrtoint2587 = ptrtoint {}* %"closure->LAMBDA2860" to i64
  %tag-only2588 = and i64 %ptrtoint2587, 7
  %test2589 = icmp eq i64 %tag-only2588, 1
  br i1 %test2589, label %header-check-br2586, label %tag202

tag368:                                           ; preds = %normal-dest3551
  %307 = icmp eq {}* %stream.0, %.val4748
  %G147886.0 = select i1 %307, {}* %1134, {}* %.val4748
  %308 = icmp eq {}* %G147886.0, %.val4748
  br i1 %308, label %tag5, label %tag456

tag369:                                           ; preds = %normal-dest1405, %header-check-br3667
  %309 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %310 = invoke {}* @cc_safe_fdefinition({}* %309)
          to label %normal-dest2602 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag370:                                           ; preds = %normal-dest2777, %header-check-br1388, %normal-dest1288
  %311 = phi {}* [ %644, %normal-dest1288 ], [ %659, %header-check-br1388 ], [ %961, %normal-dest2777 ]
  %G147272.0 = phi {}* [ %G147272.1, %normal-dest1288 ], [ %"closure->LAMBDA3652", %header-check-br1388 ], [ %G147272.2, %normal-dest2777 ]
  br i1 %consp-test3213, label %tag341, label %tag170

tag371:                                           ; preds = %tag80
  %312 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %313 = invoke {}* @cc_safe_fdefinition({}* %312)
          to label %normal-dest2621 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag372:                                           ; preds = %tag45
  %314 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 140), align 16
  %315 = invoke {}* @cc_safe_fdefinition({}* %314)
          to label %normal-dest2635 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag374:                                           ; preds = %normal-dest1939
  %316 = add i64 %398, -3
  %317 = inttoptr i64 %316 to {}**
  %318 = load {}*, {}** %317, align 8
  br label %tag274

tag377:                                           ; preds = %tag98
  %319 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 170), align 16
  %320 = invoke {}* @cc_safe_fdefinition({}* %319)
          to label %normal-dest2659 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag378:                                           ; preds = %normal-dest643
  %321 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 143), align 8
  %322 = invoke {}* @cc_safe_fdefinition({}* %321)
          to label %normal-dest2673 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag379:                                           ; preds = %normal-dest2948, %header-check-br2911, %normal-dest2443
  %G147072.0 = phi {}* [ %G147072.1, %normal-dest2443 ], [ %"closure->LAMBDA1861", %header-check-br2911 ], [ %G147072.2, %normal-dest2948 ]
  %ptrtoint2695 = ptrtoint {}* %G147072.0 to i64
  %entry-point-addr-uint2696 = add i64 %ptrtoint2695, 7
  %entry-point-addr2697 = inttoptr i64 %entry-point-addr-uint2696 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2698 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2697, align 8
  %323 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2698({}* %G147072.0, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %tag582 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag386:                                           ; preds = %tag170
  %324 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %325 = invoke {}* @cc_safe_fdefinition({}* %324)
          to label %normal-dest2707 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag388:                                           ; preds = %tag58
  %326 = icmp eq {}* %x803.0, %.val4879
  %G147988.0 = select i1 %326, {}* %.val4745, {}* %.val4879
  %327 = icmp eq {}* %G147988.0, %.val4879
  br i1 %327, label %tag545, label %tag131

tag390:                                           ; preds = %tag339
  %328 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 170), align 16
  %329 = invoke {}* @cc_safe_fdefinition({}* %328)
          to label %normal-dest2741 unwind label %cleanup-lpad.loopexit.loopexit

tag391:                                           ; preds = %tag433
  %330 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %331 = invoke {}* @cc_safe_fdefinition({}* %330)
          to label %normal-dest2754 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag395:                                           ; preds = %normal-dest3583
  %.val4820 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147534.0 = select i1 %consp-test3213, {}* %.val4820, {}* %1143
  %332 = icmp eq {}* %G147534.0, %1143
  br i1 %332, label %tag340, label %tag352.outer.preheader

tag352.outer.preheader:                           ; preds = %tag395
  br label %tag352.outer

tag396:                                           ; preds = %normal-dest1382, %header-check-br748
  %333 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %334 = invoke {}* @cc_safe_fdefinition({}* %333)
          to label %normal-dest2770 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag397:                                           ; preds = %normal-dest3651
  %335 = icmp eq {}* %stream.0, %.val4835
  %G147325.0 = select i1 %335, {}* %1156, {}* %.val4835
  %336 = icmp eq {}* %G147325.0, %.val4835
  br i1 %336, label %tag422, label %tag134

tag398:                                           ; preds = %tag581
  %337 = icmp eq {}* %.in4287, %464
  %.val4862 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147191.0 = select i1 %337, {}* %.val4862, {}* %464
  %338 = icmp eq {}* %G147191.0, %464
  br i1 %338, label %tag270, label %tag178

tag399:                                           ; preds = %normal-dest3130, %header-check-br3023, %normal-dest736
  %G147578.0 = phi {}* [ %G147578.1, %normal-dest736 ], [ %"closure->LAMBDA1990", %header-check-br3023 ], [ %G147578.2, %normal-dest3130 ]
  %339 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 195), align 8
  %ptrtoint2795 = ptrtoint {}* %G147578.0 to i64
  %entry-point-addr-uint2796 = add i64 %ptrtoint2795, 7
  %entry-point-addr2797 = inttoptr i64 %entry-point-addr-uint2796 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2798 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2797, align 8
  %340 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2798({}* %G147578.0, i64 2, {}* %stream.0, {}* %339, {}* null, {}* null)
          to label %tag212 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag403:                                           ; preds = %header-check-br1688, %normal-dest722, %normal-dest659
  %.val4895 = phi {}* [ %501, %normal-dest659 ], [ %519, %normal-dest722 ], [ %720, %header-check-br1688 ]
  %G148051.0 = phi {}* [ %G148051.1, %normal-dest659 ], [ %G148051.2, %normal-dest722 ], [ %"closure->LAMBDA2860", %header-check-br1688 ]
  %.val4892 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G148070.0 = select i1 %consp-test3213, {}* %.val4892, {}* %.val4895
  %341 = icmp eq {}* %G148070.0, %.val4895
  br i1 %341, label %tag80, label %tag221

tag407:                                           ; preds = %normal-dest3116
  %342 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %343 = icmp eq {}* %.in4287, %342
  %.val4749 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147924.0 = select i1 %343, {}* %.val4749, {}* %342
  %344 = icmp eq {}* %G147924.0, %342
  br i1 %344, label %tag409, label %tag218

tag408:                                           ; preds = %tag483
  %345 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %346 = invoke {}* @cc_safe_fdefinition({}* %345)
          to label %normal-dest2830 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag409:                                           ; preds = %tag407
  %347 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %348 = invoke {}* @cc_safe_fdefinition({}* %347)
          to label %normal-dest2844 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag413:                                           ; preds = %tag419
  %"closure->LAMBDA2860" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %354, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.3", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.3^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2794, i64 96, i64 0, i64 0)
          to label %normal-dest2859 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag414:                                           ; preds = %tag339, %normal-dest2666, %tag98, %tag338
  %349 = phi {}* [ %.val4871, %tag338 ], [ %.val4871, %tag98 ], [ %935, %normal-dest2666 ], [ %.val4827, %tag339 ]
  %x981.0 = phi {}* [ %289, %tag338 ], [ null, %tag98 ], [ %x981.1, %normal-dest2666 ], [ %LENGTH.0.ph, %tag339 ]
  %350 = ptrtoint {}* %x981.0 to i64
  %fixnum-tag-only28664150 = and i64 %350, 3
  %fixnump-test2867 = icmp eq i64 %fixnum-tag-only28664150, 0
  br i1 %fixnump-test2867, label %tag438, label %tag304

tag419:                                           ; preds = %tag168, %normal-dest3040, %tag480
  %351 = phi {}* [ %.val4736, %tag480 ], [ %1016, %normal-dest3040 ], [ %.val4736, %tag168 ]
  %object.0 = phi {}* [ %.val4736, %tag480 ], [ %object.1, %normal-dest3040 ], [ %.val, %tag168 ]
  %352 = icmp eq {}* %object.0, %351
  %.val4737 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147019.0 = select i1 %352, {}* %.val4737, {}* %351
  %353 = icmp eq {}* %G147019.0, %351
  %354 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 236), align 16
  br i1 %353, label %tag563, label %tag413

tag420:                                           ; preds = %tag345
  %355 = icmp eq {}* %.in4287, %647
  %.val4798 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147713.0 = select i1 %355, {}* %.val4798, {}* %647
  %356 = icmp eq {}* %G147713.0, %647
  br i1 %356, label %tag479, label %tag336

tag422:                                           ; preds = %tag397
  %357 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 140), align 16
  %358 = invoke {}* @cc_safe_fdefinition({}* %357)
          to label %normal-dest2875 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag426:                                           ; preds = %normal-dest2136
  %ptrtoint2912 = ptrtoint {}* %"closure->LAMBDA1861" to i64
  %tag-only2913 = and i64 %ptrtoint2912, 7
  %test2914 = icmp eq i64 %tag-only2913, 1
  br i1 %test2914, label %header-check-br2911, label %tag334

tag427:                                           ; preds = %tag141
  %359 = add i64 %398, 5
  %360 = inttoptr i64 %359 to {}**
  %361 = load {}*, {}** %360, align 8
  br label %tag155

tag431:                                           ; preds = %tag438
  %362 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  br label %tag458

tag433:                                           ; preds = %normal-dest1939
  %363 = icmp eq {}* %.in4287, %.val4742
  %G148152.0 = select i1 %363, {}* %.val4741, {}* %.val4742
  %364 = icmp eq {}* %G148152.0, %.val4742
  br i1 %364, label %tag391, label %tag274

tag438:                                           ; preds = %tag414
  %365 = icmp sgt {}* %x981.0, inttoptr (i64 20 to {}*)
  br i1 %365, label %tag431, label %tag579

tag442:                                           ; preds = %tag535, %header-check-br2813
  %366 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %367 = invoke {}* @cc_safe_fdefinition({}* %366)
          to label %normal-dest2955 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag446:                                           ; preds = %tag82, %header-check-br1503
  %368 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %369 = invoke {}* @cc_safe_fdefinition({}* %368)
          to label %normal-dest2969 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag449:                                           ; preds = %normal-dest3523, %normal-dest1429, %header-check-br1194
  %G147086.0 = phi {}* [ %"closure->LAMBDA1861", %header-check-br1194 ], [ %G147086.1, %normal-dest1429 ], [ %G147086.2, %normal-dest3523 ]
  %ptrtoint2982 = ptrtoint {}* %G147086.0 to i64
  %entry-point-addr-uint2983 = add i64 %ptrtoint2982, 7
  %entry-point-addr2984 = inttoptr i64 %entry-point-addr-uint2983 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2985 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2984, align 8
  %370 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2985({}* %G147086.0, i64 1, {}* %OUT146846.0, {}* null, {}* null, {}* null)
          to label %tag582 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag450:                                           ; preds = %tag155
  %371 = icmp eq {}* %x1546.0, %.val4859
  %G147222.0 = select i1 %371, {}* %.val4856, {}* %.val4859
  %372 = icmp eq {}* %G147222.0, %.val4859
  br i1 %372, label %tag487, label %tag195

tag451:                                           ; preds = %normal-dest1126, %normal-dest1029, %header-check-br996
  %G148247.0 = phi {}* [ %"closure->LAMBDA", %header-check-br996 ], [ %G148247.1, %normal-dest1029 ], [ %G148247.2, %normal-dest1126 ]
  %ptrtoint2999 = ptrtoint {}* %G148247.0 to i64
  %entry-point-addr-uint3000 = add i64 %ptrtoint2999, 7
  %entry-point-addr3001 = inttoptr i64 %entry-point-addr-uint3000 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3002 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3001, align 8
  %373 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3002({}* %G148247.0, i64 2, {}* %G146766.0, {}* %farg0, {}* null, {}* null)
          to label %normal-dest3005 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag453:                                           ; preds = %normal-dest629
  %ptrtoint3024 = ptrtoint {}* %"closure->LAMBDA1990" to i64
  %tag-only3025 = and i64 %ptrtoint3024, 7
  %test3026 = icmp eq i64 %tag-only3025, 1
  br i1 %test3026, label %header-check-br3023, label %tag20

tag454:                                           ; preds = %tag168
  %374 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %375 = invoke {}* @cc_safe_fdefinition({}* %374)
          to label %normal-dest3033 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag456:                                           ; preds = %tag368
  %376 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 146), align 16
  %377 = invoke {}* @cc_safe_fdefinition({}* %376)
          to label %normal-dest3047 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag458:                                           ; preds = %normal-dest1112, %tag431
  %378 = phi {}* [ %349, %tag431 ], [ %606, %normal-dest1112 ]
  %G147446.0 = phi {}* [ %362, %tag431 ], [ %G147446.1, %normal-dest1112 ]
  %379 = icmp eq {}* %G147446.0, %378
  br i1 %379, label %tag579, label %tag484

tag461:                                           ; preds = %tag259, %normal-dest1088, %tag477
  %G147683.0 = phi {}* [ %394, %tag477 ], [ %G147683.1, %normal-dest1088 ], [ %.val4877, %tag259 ]
  %380 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 230), align 16
  %381 = invoke {}* @cc_safe_fdefinition({}* %380)
          to label %normal-dest3079 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag462:                                           ; preds = %tag165
  %382 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 140), align 16
  %383 = invoke {}* @cc_safe_fdefinition({}* %382)
          to label %normal-dest3093 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag463:                                           ; preds = %normal-dest3651
  %ptrtoint3107 = ptrtoint {}* %"closure->LAMBDA3652" to i64
  %tag-only3108 = and i64 %ptrtoint3107, 7
  %test3109 = icmp eq i64 %tag-only3108, 1
  br i1 %test3109, label %header-check-br3106, label %tag118

tag464:                                           ; preds = %header-check-br2316, %normal-dest2071, %normal-dest925
  %G147892.0 = phi {}* [ %G147892.1, %normal-dest925 ], [ %G147892.2, %normal-dest2071 ], [ %"closure->LAMBDA3552", %header-check-br2316 ]
  %384 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 152), align 16
  %385 = invoke {}* @cc_safe_symbol_value({}* %384)
          to label %normal-dest3116 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag469:                                           ; preds = %normal-dest629
  %386 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 143), align 8
  %387 = invoke {}* @cc_safe_fdefinition({}* %386)
          to label %normal-dest3146 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag471:                                           ; preds = %normal-dest2680, %header-check-br
  %388 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %389 = invoke {}* @cc_safe_fdefinition({}* %388)
          to label %normal-dest3169 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag472:                                           ; preds = %tag571, %normal-dest3684, %tag567
  %.val4827 = phi {}* [ %.val4825.pre, %tag567 ], [ %1167, %normal-dest3684 ], [ %459, %tag571 ]
  %G2095854.0 = phi {}* [ %458, %tag567 ], [ %G2095854.1, %normal-dest3684 ], [ %459, %tag571 ]
  %390 = ptrtoint {}* %G2095854.0 to i64
  %tag-only31824140 = and i64 %390, 7
  %consp-test3183 = icmp eq i64 %tag-only31824140, 3
  %.val4824 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147515.0 = select i1 %consp-test3183, {}* %.val4824, {}* %.val4827
  %391 = icmp eq {}* %G147515.0, %.val4827
  br i1 %391, label %tag339, label %tag46

tag477:                                           ; preds = %tag336
  %392 = add i64 %284, -3
  %393 = inttoptr i64 %392 to {}**
  %394 = load {}*, {}** %393, align 8
  br label %tag461

tag479:                                           ; preds = %tag420
  %395 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %396 = invoke {}* @cc_safe_fdefinition({}* %395)
          to label %normal-dest3199 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag480:                                           ; preds = %tag480.backedge, %normal-dest2470
  %.val4736 = phi {}* [ %880, %normal-dest2470 ], [ %.val4736.be, %tag480.backedge ]
  %.in4287 = phi {}* [ %.in4286, %normal-dest2470 ], [ %.in4287.be, %tag480.backedge ]
  %397 = bitcast {}* %.in4287 to i8*
  %398 = ptrtoint {}* %.in4287 to i64
  %tag-only32123868 = and i64 %398, 7
  %consp-test3213 = icmp eq i64 %tag-only32123868, 3
  br i1 %consp-test3213, label %tag419, label %tag168

tag483:                                           ; preds = %tag582
  %399 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %400 = icmp eq {}* %.in4287, %399
  %.val4755 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147065.0 = select i1 %400, {}* %.val4755, {}* %399
  %401 = icmp eq {}* %G147065.0, %399
  br i1 %401, label %tag408, label %tag605

tag484:                                           ; preds = %tag458
  %402 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 191), align 8
  %403 = invoke {}* @cc_safe_fdefinition({}* %402)
          to label %normal-dest3221 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag487:                                           ; preds = %tag450
  %404 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %405 = invoke {}* @cc_safe_fdefinition({}* %404)
          to label %normal-dest3228 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag489:                                           ; preds = %normal-dest2380, %header-check-br1714
  %406 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %407 = invoke {}* @cc_safe_fdefinition({}* %406)
          to label %normal-dest3242 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag495:                                           ; preds = %normal-dest1791, %header-check-br1271
  %408 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %409 = invoke {}* @cc_safe_fdefinition({}* %408)
          to label %normal-dest3258 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag498:                                           ; preds = %normal-dest1860
  %410 = icmp eq {}* %stream.0, %.val4754
  %G147127.0 = select i1 %410, {}* %766, {}* %.val4754
  %411 = icmp eq {}* %G147127.0, %.val4754
  br i1 %411, label %tag266, label %tag194

tag501:                                           ; preds = %tag111, %header-check-br2550
  %412 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %413 = invoke {}* @cc_safe_fdefinition({}* %412)
          to label %normal-dest3292 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag502:                                           ; preds = %tag54, %normal-dest818, %tag62
  %G148099.0 = phi {}* [ %77, %tag62 ], [ %G148099.1, %normal-dest818 ], [ %.val4889, %tag54 ]
  %ptrtoint3305 = ptrtoint {}* %G148097.0 to i64
  %entry-point-addr-uint3306 = add i64 %ptrtoint3305, 7
  %entry-point-addr3307 = inttoptr i64 %entry-point-addr-uint3306 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3308 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3307, align 8
  %414 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3308({}* %G148097.0, i64 2, {}* %G146786.0, {}* %G148099.0, {}* null, {}* null)
          to label %normal-dest3311 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag505:                                           ; preds = %tag217
  %415 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %416 = invoke {}* @cc_safe_fdefinition({}* %415)
          to label %normal-dest3330 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag507:                                           ; preds = %normal-dest1740, %header-check-br1238, %normal-dest683
  %.val4889 = phi {}* [ %510, %normal-dest683 ], [ %632, %header-check-br1238 ], [ %736, %normal-dest1740 ]
  %G148097.0 = phi {}* [ %G148097.1, %normal-dest683 ], [ %"closure->LAMBDA2860", %header-check-br1238 ], [ %G148097.2, %normal-dest1740 ]
  %.val4886 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G148116.0 = select i1 %consp-test3213, {}* %.val4886, {}* %.val4889
  %417 = icmp eq {}* %G148116.0, %.val4889
  br i1 %417, label %tag54, label %tag62

tag509:                                           ; preds = %tag80, %normal-dest2628, %tag221
  %G148053.0 = phi {}* [ %213, %tag221 ], [ %G148053.1, %normal-dest2628 ], [ %.val4895, %tag80 ]
  %ptrtoint3350 = ptrtoint {}* %G148051.0 to i64
  %entry-point-addr-uint3351 = add i64 %ptrtoint3350, 7
  %entry-point-addr3352 = inttoptr i64 %entry-point-addr-uint3351 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3353 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3352, align 8
  %418 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3353({}* %G148051.0, i64 2, {}* %OUT1467781682.0, {}* %G148053.0, {}* null, {}* null)
          to label %tag247 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag513:                                           ; preds = %normal-dest1989
  %ptrtoint3376 = ptrtoint {}* %"closure->LAMBDA1990" to i64
  %tag-only3377 = and i64 %ptrtoint3376, 7
  %test3378 = icmp eq i64 %tag-only3377, 1
  br i1 %test3378, label %header-check-br3375, label %tag308

tag514:                                           ; preds = %tag595, %normal-dest2423, %tag166
  %G147161.0 = phi {}* [ %172, %tag166 ], [ %G147161.1, %normal-dest2423 ], [ %.val4867, %tag595 ]
  %ptrtoint3384 = ptrtoint {}* %G147159.0 to i64
  %entry-point-addr-uint3385 = add i64 %ptrtoint3384, 7
  %entry-point-addr3386 = inttoptr i64 %entry-point-addr-uint3385 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3387 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3386, align 8
  %419 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3387({}* %G147159.0, i64 2, {}* %stream.0, {}* %G147161.0, {}* null, {}* null)
          to label %tag212 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag520:                                           ; preds = %tag46
  %420 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %61, i64 4)
  %result = extractvalue { i64, i1 } %420, 0
  %overflow = extractvalue { i64, i1 } %420, 1
  %421 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag1, label %tag352.outer.backedge

tag352.outer.backedge:                            ; preds = %tag520, %normal-dest615, %normal-dest2248
  %LENGTH.0.ph.be = phi {}* [ %421, %tag520 ], [ %LENGTH.1, %normal-dest615 ], [ %LENGTH.2, %normal-dest2248 ]
  br label %tag352.outer

tag523:                                           ; preds = %tag154
  %422 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %423 = invoke {}* @cc_safe_fdefinition({}* %422)
          to label %normal-dest3397 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag526:                                           ; preds = %tag114, %normal-dest1754, %tag112
  %.val4795 = phi {}* [ %47, %tag112 ], [ %742, %normal-dest1754 ], [ %47, %tag114 ]
  %x881.0 = phi {}* [ %117, %tag112 ], [ %x881.1, %normal-dest1754 ], [ %47, %tag114 ]
  %424 = ptrtoint {}* %x881.0 to i64
  %tag-only34124045 = and i64 %424, 7
  %consp-test3413 = icmp eq i64 %tag-only34124045, 3
  %.val4792 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147739.0 = select i1 %consp-test3413, {}* %.val4792, {}* %.val4795
  %425 = icmp eq {}* %G147739.0, %.val4795
  br i1 %425, label %tag10, label %tag602

tag527:                                           ; preds = %tag43
  %426 = icmp eq {}* %x864.0, %.val4851
  %G147284.0 = select i1 %426, {}* %.val4848, {}* %.val4851
  %427 = icmp eq {}* %G147284.0, %.val4851
  br i1 %427, label %tag148, label %tag248

tag529:                                           ; preds = %tag329
  %428 = add i64 %398, 5
  %429 = inttoptr i64 %428 to {}**
  %430 = load {}*, {}** %429, align 8
  br label %tag28

tag531:                                           ; preds = %tag42
  %431 = icmp eq {}* %x858.0, %.val4875
  %G147550.0 = select i1 %431, {}* %.val4818, {}* %.val4875
  %432 = icmp eq {}* %G147550.0, %.val4875
  br i1 %432, label %tag151, label %tag562

tag533:                                           ; preds = %normal-dest945
  %433 = add i64 %398, 5
  %434 = inttoptr i64 %433 to {}**
  %435 = load {}*, {}** %434, align 8
  %.val4839.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %tag13

tag534:                                           ; preds = %normal-dest1854
  %ptrtoint3441 = ptrtoint {}* %"closure->LAMBDA2860" to i64
  %tag-only3442 = and i64 %ptrtoint3441, 7
  %test3443 = icmp eq i64 %tag-only3442, 1
  br i1 %test3443, label %header-check-br3440, label %tag145

tag535:                                           ; preds = %normal-dest3100
  %ptrtoint3450 = ptrtoint {}* %"closure->LAMBDA" to i64
  %tag-only3451 = and i64 %ptrtoint3450, 7
  %test3452 = icmp eq i64 %tag-only3451, 1
  br i1 %test3452, label %header-check-br3449, label %tag442

tag536:                                           ; preds = %normal-dest3221
  %436 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %437 = icmp eq {}* %.in4287, %436
  %.val4828 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147438.0 = select i1 %437, {}* %.val4828, {}* %436
  %438 = icmp eq {}* %G147438.0, %436
  br i1 %438, label %tag132, label %tag85

tag537:                                           ; preds = %tag106, %header-check-br3492
  %439 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %440 = invoke {}* @cc_safe_fdefinition({}* %439)
          to label %normal-dest3465 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag352.outer:                                     ; preds = %tag352.outer.backedge, %tag352.outer.preheader
  %SEQUENCE.0.ph = phi {}* [ %.in4287, %tag352.outer.preheader ], [ %G2095854.0, %tag352.outer.backedge ]
  %LENGTH.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag352.outer.preheader ], [ %LENGTH.0.ph.be, %tag352.outer.backedge ]
  %441 = ptrtoint {}* %SEQUENCE.0.ph to i64
  %tag-only25254139 = and i64 %441, 7
  %consp-test2526 = icmp eq i64 %tag-only25254139, 3
  %442 = add i64 %441, 5
  %443 = inttoptr i64 %442 to {}**
  br label %tag352

tag542:                                           ; preds = %tag225
  %444 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %445 = invoke {}* @cc_safe_fdefinition({}* %444)
          to label %normal-dest3479 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag545:                                           ; preds = %tag388
  %446 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %447 = invoke {}* @cc_safe_fdefinition({}* %446)
          to label %normal-dest3502 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag548:                                           ; preds = %normal-dest2976, %normal-dest2728, %header-check-br1012
  %G147133.0 = phi {}* [ %"closure->LAMBDA1861", %header-check-br1012 ], [ %G147133.1, %normal-dest2728 ], [ %G147133.2, %normal-dest2976 ]
  %448 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 152), align 16
  %449 = invoke {}* @cc_safe_symbol_value({}* %448)
          to label %normal-dest3530 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag555:                                           ; preds = %normal-dest1345
  %450 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 236), align 16
  %"closure->LAMBDA3552" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %450, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.4", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.4^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2794, i64 96, i64 0, i64 0)
          to label %normal-dest3551 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag558:                                           ; preds = %normal-dest1989
  %451 = icmp eq {}* %stream.0, %.val4805
  %G147636.0 = select i1 %451, {}* %780, {}* %.val4805
  %452 = icmp eq {}* %G147636.0, %.val4805
  br i1 %452, label %tag4, label %tag191

tag560:                                           ; preds = %normal-dest3054, %header-check-br1599
  %453 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %454 = invoke {}* @cc_safe_fdefinition({}* %453)
          to label %normal-dest3564 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag562:                                           ; preds = %tag531, %normal-dest1520, %tag333
  %G147540.0 = phi {}* [ %281, %tag333 ], [ %G147540.1, %normal-dest1520 ], [ %.val4875, %tag531 ]
  %ptrtoint3577 = ptrtoint {}* %135 to i64
  %entry-point-addr-uint3578 = add i64 %ptrtoint3577, 7
  %entry-point-addr3579 = inttoptr i64 %entry-point-addr-uint3578 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3580 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3579, align 8
  %455 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3580({}* %135, i64 1, {}* %G147540.0, {}* null, {}* null, {}* null)
          to label %normal-dest3583 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag563:                                           ; preds = %tag419
  %"closure->LAMBDA3590" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %354, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.5", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.5^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2794, i64 96, i64 0, i64 0)
          to label %normal-dest3589 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag566:                                           ; preds = %tag218
  %456 = icmp eq {}* %x1906.0, %.val4769
  %G147904.0 = select i1 %456, {}* %.val4751, {}* %.val4769
  %457 = icmp eq {}* %G147904.0, %.val4769
  br i1 %457, label %tag32, label %tag229

tag567:                                           ; preds = %tag352
  %458 = load {}*, {}** %443, align 8
  %.val4825.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %tag472

tag571:                                           ; preds = %tag352
  %459 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %460 = icmp eq {}* %SEQUENCE.0.ph, %459
  %.val4822 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147527.0 = select i1 %460, {}* %.val4822, {}* %459
  %461 = icmp eq {}* %G147527.0, %459
  br i1 %461, label %tag585, label %tag472

tag574:                                           ; preds = %header-check-br3718, %normal-dest3645, %normal-dest891
  %G148221.0 = phi {}* [ %G148221.1, %normal-dest891 ], [ %G148221.2, %normal-dest3645 ], [ %"closure->LAMBDA", %header-check-br3718 ]
  %ptrtoint3626 = ptrtoint {}* %G148221.0 to i64
  %entry-point-addr-uint3627 = add i64 %ptrtoint3626, 7
  %entry-point-addr3628 = inttoptr i64 %entry-point-addr-uint3627 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3629 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3628, align 8
  %462 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3629({}* %G148221.0, i64 2, {}* %OUT1467583625.0, {}* %farg0, {}* null, {}* null)
          to label %tag342 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag579:                                           ; preds = %tag438, %normal-dest3583, %tag458
  %463 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 236), align 16
  %"closure->LAMBDA3652" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %463, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.6", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.6^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2794, i64 96, i64 0, i64 0)
          to label %normal-dest3651 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag581:                                           ; preds = %normal-dest2896, %normal-dest2122, %header-check-br2040
  %464 = phi {}* [ %981, %header-check-br2040 ], [ %805, %normal-dest2122 ], [ %984, %normal-dest2896 ]
  %G147159.0 = phi {}* [ %"closure->LAMBDA3652", %header-check-br2040 ], [ %G147159.1, %normal-dest2122 ], [ %G147159.2, %normal-dest2896 ]
  br i1 %consp-test3213, label %tag200, label %tag398

tag582:                                           ; preds = %normal-dest1564, %normal-dest3530, %tag449, %tag379
  br i1 %consp-test3213, label %tag25, label %tag483

tag583:                                           ; preds = %normal-dest3116
  %465 = add i64 %398, 5
  %466 = inttoptr i64 %465 to {}**
  %467 = load {}*, {}** %466, align 8
  %.val4752.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %tag218

tag585:                                           ; preds = %tag571
  %468 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %469 = invoke {}* @cc_safe_fdefinition({}* %468)
          to label %normal-dest3677 unwind label %cleanup-lpad.loopexit.loopexit

tag589:                                           ; preds = %tag222
  %470 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %471 = invoke {}* @cc_safe_fdefinition({}* %470)
          to label %normal-dest3691 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag592:                                           ; preds = %normal-dest3100
  %472 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 143), align 8
  %473 = invoke {}* @cc_safe_fdefinition({}* %472)
          to label %normal-dest3705 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag595:                                           ; preds = %tag178
  %474 = icmp eq {}* %x1653.0, %.val4867
  %G147171.0 = select i1 %474, {}* %.val4864, {}* %.val4867
  %475 = icmp eq {}* %G147171.0, %.val4867
  br i1 %475, label %tag330, label %tag514

tag599:                                           ; preds = %normal-dest3571, %normal-dest3369, %header-check-br3060
  %476 = phi {}* [ %1018, %header-check-br3060 ], [ %1092, %normal-dest3369 ], [ %1142, %normal-dest3571 ]
  %G147833.0 = phi {}* [ %"closure->LAMBDA3552", %header-check-br3060 ], [ %G147833.1, %normal-dest3369 ], [ %G147833.2, %normal-dest3571 ]
  br i1 %consp-test3213, label %tag48, label %tag225

tag602:                                           ; preds = %tag526
  %477 = add i64 %424, -3
  %478 = inttoptr i64 %477 to {}**
  %479 = load {}*, {}** %478, align 8
  br label %tag277

tag605:                                           ; preds = %tag483, %normal-dest2837, %tag25
  %x759.0 = phi {}* [ %37, %tag25 ], [ %x759.1, %normal-dest2837 ], [ %399, %tag483 ]
  %480 = ptrtoint {}* %x759.0 to i64
  %tag-only37383903 = and i64 %480, 7
  %consp-test3739 = icmp eq i64 %tag-only37383903, 3
  br i1 %consp-test3739, label %tag261, label %tag228

tag606:                                           ; preds = %tag43
  %481 = add i64 %54, -3
  %482 = inttoptr i64 %481 to {}**
  %483 = load {}*, {}** %482, align 8
  br label %tag248

cleanup-lpad.loopexit.loopexit:                   ; preds = %normal-dest3677, %tag585, %normal-dest2741, %tag390
  %lpad.loopexit4926 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.loopexit.split-lp:          ; preds = %normal-dest2241, %tag287, %normal-dest612, %tag1
  %lpad.loopexit.split-lp4927 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit:          ; preds = %normal-dest3691, %tag589, %tag579, %tag562, %normal-dest3564, %tag560, %tag555, %normal-dest3530, %tag548, %normal-dest3516, %maybe-more-tests2657, %normal-dest3502, %tag545, %normal-dest3479, %tag542, %normal-dest3397, %tag523, %tag514, %normal-dest3362, %maybe-more-tests1607, %tag509, %normal-dest3330, %tag505, %normal-dest3317, %normal-dest3311, %tag502, %normal-dest3278, %maybe-more-tests3144, %normal-dest3258, %tag495, %normal-dest3242, %tag489, %normal-dest3228, %tag487, %tag484, %normal-dest3199, %tag479, %normal-dest3185, %maybe-more-tests1279, %normal-dest3169, %tag471, %normal-dest3146, %tag469, %normal-dest3123, %maybe-more-tests2535, %tag464, %normal-dest3079, %tag461, %normal-dest3047, %tag456, %normal-dest3033, %tag454, %tag449, %normal-dest2969, %tag446, %normal-dest2941, %maybe-more-tests1373, %normal-dest2927, %maybe-more-tests2225, %normal-dest2889, %maybe-more-tests1731, %normal-dest2875, %tag422, %tag413, %normal-dest2844, %tag409, %normal-dest2830, %tag408, %tag399, %normal-dest2770, %tag396, %normal-dest2754, %tag391, %normal-dest2721, %maybe-more-tests1511, %normal-dest2707, %tag386, %tag379, %normal-dest2673, %tag378, %normal-dest2659, %tag377, %normal-dest2621, %tag371, %normal-dest2573, %tag364, %normal-dest2510, %tag350, %normal-dest2436, %tag334, %normal-dest2416, %tag330, %normal-dest2373, %tag323, %normal-dest2341, %maybe-more-tests1722, %normal-dest2303, %tag308, %normal-dest2289, %normal-dest2283, %tag298, %normal-dest2264, %tag293, %normal-dest2227, %tag286, %normal-dest2204, %maybe-more-tests, %tag279, %tag277, %tag274, %normal-dest2157, %tag270, %normal-dest2143, %maybe-more-tests2371, %normal-dest2129, %tag266, %normal-dest2115, %tag265, %tag264, %normal-dest2084, %maybe-more-tests702, %normal-dest2064, %tag254, %normal-dest2050, %maybe-more-tests1270, %normal-dest2028, %normal-dest2022, %tag248, %tag247, %tag239, %tag230, %tag229, %tag227, %tag212, %normal-dest1847, %tag204, %normal-dest1833, %tag202, %normal-dest1818, %tag199, %tag195, %normal-dest1784, %tag194, %normal-dest1761, %tag191, %normal-dest1747, %tag190, %normal-dest1733, %maybe-more-tests3624, %normal-dest1698, %tag182, %normal-dest1674, %tag181, %normal-dest1659, %tag180, %normal-dest1564, %normal-dest1558, %tag156, %normal-dest1513, %tag151, %normal-dest1490, %tag148, %normal-dest1476, %maybe-more-tests3609, %normal-dest1462, %tag145, %normal-dest1422, %tag136, %normal-dest1375, %tag134, %normal-dest1352, %tag132, %tag131, %tag130, %tag128, %normal-dest1281, %maybe-more-tests756, %normal-dest1225, %tag120, %normal-dest1204, %tag118, %normal-dest1181, %tag117, %normal-dest1168, %normal-dest1162, %tag116, %normal-dest1104, %tag304, %normal-dest1080, %tag105, %normal-dest1062, %tag92, %normal-dest1048, %maybe-more-tests2262, %normal-dest968, %tag70, %normal-dest953, %tag69, %tag65, %normal-dest932, %maybe-more-tests2910, %normal-dest918, %maybe-more-tests1155, %normal-dest845, %tag41, %normal-dest831, %tag40, %normal-dest810, %tag36, %normal-dest795, %tag34, %normal-dest767, %tag32, %normal-dest729, %tag20, %normal-dest715, %tag19, %tag18, %normal-dest676, %tag12, %normal-dest652, %maybe-more-tests1652, %normal-dest636, %tag5, %normal-dest622, %tag4
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %490, %487, %normal-dest3705, %tag592, %normal-dest3638, %maybe-more-tests905, %tag574, %tag563, %normal-dest3465, %tag537, %normal-dest3427, %maybe-more-tests3675, %normal-dest3292, %tag501, %normal-dest3093, %tag462, %normal-dest3011, %normal-dest3005, %tag451, %normal-dest2955, %tag442, %normal-dest2635, %tag372, %normal-dest2602, %tag369, %normal-dest2537, %maybe-more-tests2821, %normal-dest2496, %tag346, %normal-dest2477, %tag343, %normal-dest2463, %tag342, %normal-dest1996, %maybe-more-tests3550, %normal-dest1919, %maybe-more-tests3500, %normal-dest1892, %normal-dest1886, %tag216, %normal-dest1867, %maybe-more-tests2558, %req-bb, %tag164, %normal-dest1577, %tag160, %normal-dest1527, %maybe-more-tests2339, %normal-dest1398, %tag135, %normal-dest1316, %tag129, %tag127, %normal-dest1248, %tag122, %normal-dest1119, %tag110, %normal-dest1022, %maybe-more-tests3077, %normal-dest983, %tag76, %normal-dest884, %tag50, %tag33
  %lpad.loopexit.split-lp4929 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit.loopexit, %cleanup-lpad.loopexit.loopexit.split-lp
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit4926, %cleanup-lpad.loopexit.loopexit ], [ %lpad.loopexit.split-lp4927, %cleanup-lpad.loopexit.loopexit.split-lp ], [ %lpad.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp4929, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

req-bb:                                           ; preds = %.req-bb_crit_edge, %case-opt1-bb
  %484 = phi {}* [ %491, %case-opt1-bb ], [ %.pre, %.req-bb_crit_edge ]
  %G146876.0 = phi {}* [ %491, %case-opt1-bb ], [ %9, %.req-bb_crit_edge ]
  %485 = icmp eq {}* %G146876.0, %9
  %stream.0 = select i1 %485, {}* %484, {}* %farg1
  %486 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 236), align 16
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %486, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2794, i64 96, i64 0, i64 0)
          to label %normal-dest1639 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

; <label>:487:                                    ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-AUSGABE_EIN_OBJEKT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %487
  unreachable

; <label>:488:                                    ; preds = %entry
  %489 = icmp ugt i64 %nargs, 2
  br i1 %489, label %490, label %.req-bb_crit_edge

.req-bb_crit_edge:                                ; preds = %488
  %.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  br label %req-bb

; <label>:490:                                    ; preds = %488
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-AUSGABE_EIN_OBJEKT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc4617 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc4617:                                       ; preds = %490
  unreachable

case-opt1-bb:                                     ; preds = %entry
  %491 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  br label %req-bb

normal-dest612:                                   ; preds = %tag1
  %ptrtoint = ptrtoint {}* %11 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %492 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %11, i64 1, {}* %421, {}* null, {}* null, {}* null)
          to label %normal-dest615 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

normal-dest615:                                   ; preds = %normal-dest612
  %.elt4147 = extractvalue { {}*, i64 } %492, 0
  %.elt4149 = extractvalue { {}*, i64 } %492, 1
  %cond3790 = icmp eq i64 %.elt4149, 0
  %493 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %LENGTH.1 = select i1 %cond3790, {}* %493, {}* %.elt4147
  br label %tag352.outer.backedge

normal-dest622:                                   ; preds = %tag4
  %ptrtoint623 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint624 = add i64 %ptrtoint623, 7
  %entry-point-addr625 = inttoptr i64 %entry-point-addr-uint624 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point626 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr625, align 8
  %494 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point626({}* %16, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest629 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest629:                                   ; preds = %normal-dest622
  %.elt4101 = extractvalue { {}*, i64 } %494, 0
  %.elt4103 = extractvalue { {}*, i64 } %494, 1
  %cond3782 = icmp eq i64 %.elt4103, 0
  %495 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147611.0 = select i1 %cond3782, {}* %495, {}* %.elt4101
  %496 = icmp eq {}* %G147611.0, %495
  br i1 %496, label %tag453, label %tag469

normal-dest636:                                   ; preds = %tag5
  %ptrtoint637 = ptrtoint {}* %18 to i64
  %entry-point-addr-uint638 = add i64 %ptrtoint637, 7
  %entry-point-addr639 = inttoptr i64 %entry-point-addr-uint638 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point640 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr639, align 8
  %497 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point640({}* %18, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest643 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest643:                                   ; preds = %normal-dest636
  %.elt4011 = extractvalue { {}*, i64 } %497, 0
  %.elt4013 = extractvalue { {}*, i64 } %497, 1
  %cond3766 = icmp eq i64 %.elt4013, 0
  %498 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147825.0 = select i1 %cond3766, {}* %498, {}* %.elt4011
  %499 = icmp eq {}* %G147825.0, %498
  br i1 %499, label %tag234, label %tag378

normal-dest652:                                   ; preds = %maybe-more-tests1652
  %ptrtoint653 = ptrtoint {}* %712 to i64
  %entry-point-addr-uint654 = add i64 %ptrtoint653, 7
  %entry-point-addr655 = inttoptr i64 %entry-point-addr-uint654 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point656 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr655, align 8
  %500 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point656({}* %712, i64 1, {}* nonnull %"closure->LAMBDA2860", {}* null, {}* null, {}* null)
          to label %normal-dest659 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest659:                                   ; preds = %normal-dest652
  %.elt4371 = extractvalue { {}*, i64 } %500, 0
  %.elt4373 = extractvalue { {}*, i64 } %500, 1
  %cond3832 = icmp eq i64 %.elt4373, 0
  %501 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148051.1 = select i1 %cond3832, {}* %501, {}* %.elt4371
  br label %tag403

header-check-br:                                  ; preds = %header-check-br2686
  %.off4789 = add i64 %938, -1001
  %502 = icmp ult i64 %.off4789, 5
  br i1 %502, label %maybe-more-tests, label %tag471

maybe-more-tests:                                 ; preds = %header-check-br
  %503 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %504 = invoke {}* @cc_safe_fdefinition({}* %503)
          to label %normal-dest2204 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest676:                                   ; preds = %tag12
  %505 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %506 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %507 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %508 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 160), align 16
  %ptrtoint677 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint678 = add i64 %ptrtoint677, 7
  %entry-point-addr679 = inttoptr i64 %entry-point-addr-uint678 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point680 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr679, align 8
  %509 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point680({}* %25, i64 5, {}* %505, {}* %506, {}* %"closure->LAMBDA2860", {}* %507, {}* %508)
          to label %normal-dest683 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest683:                                   ; preds = %normal-dest676
  %.elt4329 = extractvalue { {}*, i64 } %509, 0
  %.elt4331 = extractvalue { {}*, i64 } %509, 1
  %cond3825 = icmp eq i64 %.elt4331, 0
  %510 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148097.1 = select i1 %cond3825, {}* %510, {}* %.elt4329
  br label %tag507

header-check-br694:                               ; preds = %header-check-br3440
  %.off4903 = add i64 %1103, -1001
  %511 = icmp ult i64 %.off4903, 5
  br i1 %511, label %maybe-more-tests702, label %tag145

maybe-more-tests702:                              ; preds = %header-check-br694
  %512 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %513 = invoke {}* @cc_safe_fdefinition({}* %512)
          to label %normal-dest2084 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest715:                                   ; preds = %tag19
  %514 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %515 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %516 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %517 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 159), align 8
  %ptrtoint716 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint717 = add i64 %ptrtoint716, 7
  %entry-point-addr718 = inttoptr i64 %entry-point-addr-uint717 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point719 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr718, align 8
  %518 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point719({}* %30, i64 5, {}* %514, {}* %515, {}* %"closure->LAMBDA2860", {}* %516, {}* %517)
          to label %normal-dest722 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest722:                                   ; preds = %normal-dest715
  %.elt4358 = extractvalue { {}*, i64 } %518, 0
  %.elt4360 = extractvalue { {}*, i64 } %518, 1
  %cond3830 = icmp eq i64 %.elt4360, 0
  %519 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148051.2 = select i1 %cond3830, {}* %519, {}* %.elt4358
  br label %tag403

normal-dest729:                                   ; preds = %tag20
  %520 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %521 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %522 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %523 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 194), align 16
  %ptrtoint730 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint731 = add i64 %ptrtoint730, 7
  %entry-point-addr732 = inttoptr i64 %entry-point-addr-uint731 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point733 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr732, align 8
  %524 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point733({}* %32, i64 5, {}* %520, {}* %521, {}* %"closure->LAMBDA1990", {}* %522, {}* %523)
          to label %normal-dest736 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest736:                                   ; preds = %normal-dest729
  %.elt4121 = extractvalue { {}*, i64 } %524, 0
  %.elt4123 = extractvalue { {}*, i64 } %524, 1
  %cond3786 = icmp eq i64 %.elt4123, 0
  %525 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147578.1 = select i1 %cond3786, {}* %525, {}* %.elt4121
  br label %tag399

header-check-br748:                               ; preds = %header-check-br1388
  %.off4853 = add i64 %660, -1001
  %526 = icmp ult i64 %.off4853, 5
  br i1 %526, label %maybe-more-tests756, label %tag396

maybe-more-tests756:                              ; preds = %header-check-br748
  %527 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %528 = invoke {}* @cc_safe_fdefinition({}* %527)
          to label %normal-dest1281 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest767:                                   ; preds = %tag32
  %529 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %530 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %531 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %532 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint769 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint770 = add i64 %ptrtoint769, 7
  %entry-point-addr771 = inttoptr i64 %entry-point-addr-uint770 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point772 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr771, align 8
  %533 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point772({}* %41, i64 5, {}* %529, {}* %530, {}* %x1906.0, {}* %531, {}* %532)
          to label %normal-dest775 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest775:                                   ; preds = %normal-dest767
  %.elt3969 = extractvalue { {}*, i64 } %533, 0
  %.elt3971 = extractvalue { {}*, i64 } %533, 1
  %cond3758 = icmp eq i64 %.elt3971, 0
  %534 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147894.1 = select i1 %cond3758, {}* %534, {}* %.elt3969
  br label %tag229

normal-dest787:                                   ; preds = %tag33
  %535 = load i64, i64* bitcast ({}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12) to i64*), align 16
  br label %tag104

normal-dest795:                                   ; preds = %tag34
  %536 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %537 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %538 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %539 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint796 = ptrtoint {}* %44 to i64
  %entry-point-addr-uint797 = add i64 %ptrtoint796, 7
  %entry-point-addr798 = inttoptr i64 %entry-point-addr-uint797 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point799 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr798, align 8
  %540 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point799({}* %44, i64 5, {}* %536, {}* %537, {}* %.in4287, {}* %538, {}* %539)
          to label %normal-dest802 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest802:                                   ; preds = %normal-dest795
  %.elt4313 = extractvalue { {}*, i64 } %540, 0
  %.elt4315 = extractvalue { {}*, i64 } %540, 1
  %cond3821 = icmp eq i64 %.elt4315, 0
  %541 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x803.1 = select i1 %cond3821, {}* %541, {}* %.elt4313
  br label %tag58

normal-dest810:                                   ; preds = %tag36
  %542 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %543 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %544 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %545 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint812 = ptrtoint {}* %46 to i64
  %entry-point-addr-uint813 = add i64 %ptrtoint812, 7
  %entry-point-addr814 = inttoptr i64 %entry-point-addr-uint813 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point815 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr814, align 8
  %546 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point815({}* %46, i64 5, {}* %542, {}* %543, {}* %.in4287, {}* %544, {}* %545)
          to label %normal-dest818 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest818:                                   ; preds = %normal-dest810
  %.elt4342 = extractvalue { {}*, i64 } %546, 0
  %.elt4344 = extractvalue { {}*, i64 } %546, 1
  %cond3826 = icmp eq i64 %.elt4344, 0
  %547 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148099.1 = select i1 %cond3826, {}* %547, {}* %.elt4342
  br label %tag502

normal-dest831:                                   ; preds = %tag40
  %548 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %549 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %550 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %551 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 198), align 16
  %ptrtoint832 = ptrtoint {}* %49 to i64
  %entry-point-addr-uint833 = add i64 %ptrtoint832, 7
  %entry-point-addr834 = inttoptr i64 %entry-point-addr-uint833 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point835 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr834, align 8
  %552 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point835({}* %49, i64 5, {}* %548, {}* %549, {}* %"closure->LAMBDA1990", {}* %550, {}* %551)
          to label %normal-dest838 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest838:                                   ; preds = %normal-dest831
  %.elt4085 = extractvalue { {}*, i64 } %552, 0
  %.elt4087 = extractvalue { {}*, i64 } %552, 1
  %cond3780 = icmp eq i64 %.elt4087, 0
  %553 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147619.1 = select i1 %cond3780, {}* %553, {}* %.elt4085
  br label %tag116

normal-dest845:                                   ; preds = %tag41
  %554 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %555 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %556 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %557 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint846 = ptrtoint {}* %51 to i64
  %entry-point-addr-uint847 = add i64 %ptrtoint846, 7
  %entry-point-addr848 = inttoptr i64 %entry-point-addr-uint847 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point849 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr848, align 8
  %558 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point849({}* %51, i64 5, {}* %554, {}* %555, {}* %x689.0, {}* %556, {}* %557)
          to label %normal-dest852 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest852:                                   ; preds = %normal-dest845
  %.elt4180 = extractvalue { {}*, i64 } %558, 0
  %.elt4182 = extractvalue { {}*, i64 } %558, 1
  %cond3795 = icmp eq i64 %.elt4182, 0
  %559 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147333.1 = select i1 %cond3795, {}* %559, {}* %.elt4180
  br label %tag130

normal-dest884:                                   ; preds = %tag50
  %560 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %561 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %562 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %563 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 145), align 8
  %ptrtoint885 = ptrtoint {}* %69 to i64
  %entry-point-addr-uint886 = add i64 %ptrtoint885, 7
  %entry-point-addr887 = inttoptr i64 %entry-point-addr-uint886 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point888 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr887, align 8
  %564 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point888({}* %69, i64 5, {}* %560, {}* %561, {}* %"closure->LAMBDA", {}* %562, {}* %563)
          to label %normal-dest891 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest891:                                   ; preds = %normal-dest884
  %.elt4495 = extractvalue { {}*, i64 } %564, 0
  %.elt4497 = extractvalue { {}*, i64 } %564, 1
  %cond3854 = icmp eq i64 %.elt4497, 0
  %565 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148221.1 = select i1 %cond3854, {}* %565, {}* %.elt4495
  br label %tag574

header-check-br897:                               ; preds = %header-check-br3718
  %.off4923 = add i64 %1176, -1001
  %566 = icmp ult i64 %.off4923, 5
  br i1 %566, label %maybe-more-tests905, label %tag50

maybe-more-tests905:                              ; preds = %header-check-br897
  %567 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %568 = invoke {}* @cc_safe_fdefinition({}* %567)
          to label %normal-dest3638 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest918:                                   ; preds = %maybe-more-tests1155
  %ptrtoint919 = ptrtoint {}* %617 to i64
  %entry-point-addr-uint920 = add i64 %ptrtoint919, 7
  %entry-point-addr921 = inttoptr i64 %entry-point-addr-uint920 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point922 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr921, align 8
  %569 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point922({}* %617, i64 1, {}* nonnull %"closure->LAMBDA3552", {}* null, {}* null, {}* null)
          to label %normal-dest925 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest925:                                   ; preds = %normal-dest918
  %.elt3977 = extractvalue { {}*, i64 } %569, 0
  %.elt3979 = extractvalue { {}*, i64 } %569, 1
  %cond3760 = icmp eq i64 %.elt3979, 0
  %570 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147892.1 = select i1 %cond3760, {}* %570, {}* %.elt3977
  br label %tag464

normal-dest932:                                   ; preds = %maybe-more-tests2910
  %ptrtoint933 = ptrtoint {}* %987 to i64
  %entry-point-addr-uint934 = add i64 %ptrtoint933, 7
  %entry-point-addr935 = inttoptr i64 %entry-point-addr-uint934 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point936 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr935, align 8
  %571 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point936({}* %987, i64 1, {}* nonnull %"closure->LAMBDA1990", {}* null, {}* null, {}* null)
          to label %normal-dest939 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest939:                                   ; preds = %normal-dest932
  %.elt4077 = extractvalue { {}*, i64 } %571, 0
  %.elt4079 = extractvalue { {}*, i64 } %571, 1
  %cond3778 = icmp eq i64 %.elt4079, 0
  %572 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147642.1 = select i1 %cond3778, {}* %572, {}* %.elt4077
  br label %tag92

normal-dest945:                                   ; preds = %tag65
  br i1 %consp-test3213, label %tag533, label %tag314

normal-dest953:                                   ; preds = %tag69
  %573 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %574 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %575 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %576 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint955 = ptrtoint {}* %81 to i64
  %entry-point-addr-uint956 = add i64 %ptrtoint955, 7
  %entry-point-addr957 = inttoptr i64 %entry-point-addr-uint956 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point958 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr957, align 8
  %577 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point958({}* %81, i64 5, {}* %573, {}* %574, {}* %x650.0, {}* %575, {}* %576)
          to label %normal-dest961 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest961:                                   ; preds = %normal-dest953
  %.elt4162 = extractvalue { {}*, i64 } %577, 0
  %.elt4164 = extractvalue { {}*, i64 } %577, 1
  %cond3792 = icmp eq i64 %.elt4164, 0
  %578 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147407.1 = select i1 %cond3792, {}* %578, {}* %.elt4162
  br label %tag279

normal-dest968:                                   ; preds = %tag70
  %579 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %580 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %581 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %582 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 203), align 8
  %ptrtoint969 = ptrtoint {}* %83 to i64
  %entry-point-addr-uint970 = add i64 %ptrtoint969, 7
  %entry-point-addr971 = inttoptr i64 %entry-point-addr-uint970 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point972 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr971, align 8
  %583 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point972({}* %83, i64 5, {}* %579, {}* %580, {}* %"closure->LAMBDA3552", {}* %581, {}* %582)
          to label %normal-dest975 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest975:                                   ; preds = %normal-dest968
  %.elt4041 = extractvalue { {}*, i64 } %583, 0
  %.elt4043 = extractvalue { {}*, i64 } %583, 1
  %cond3772 = icmp eq i64 %.elt4043, 0
  %584 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147720.1 = select i1 %cond3772, {}* %584, {}* %.elt4041
  br label %tag38

normal-dest983:                                   ; preds = %tag76
  %ptrtoint984 = ptrtoint {}* %88 to i64
  %entry-point-addr-uint985 = add i64 %ptrtoint984, 7
  %entry-point-addr986 = inttoptr i64 %entry-point-addr-uint985 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point987 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr986, align 8
  %585 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point987({}* %88, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest990 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest990:                                   ; preds = %normal-dest983
  %.elt4467 = extractvalue { {}*, i64 } %585, 0
  %.elt4469 = extractvalue { {}*, i64 } %585, 1
  %cond3849 = icmp eq i64 %.elt4469, 0
  %586 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146766.0 = select i1 %cond3849, {}* %586, {}* %.elt4467
  %ptrtoint997 = ptrtoint {}* %"closure->LAMBDA" to i64
  %tag-only998 = and i64 %ptrtoint997, 7
  %test999 = icmp eq i64 %tag-only998, 1
  br i1 %test999, label %header-check-br996, label %tag110

header-check-br996:                               ; preds = %normal-dest990
  %irc-bit-cast1000 = bitcast {}* %"closure->LAMBDA" to i8*
  %gep1001 = getelementptr inbounds i8, i8* %irc-bit-cast1000, i64 -9
  %irc-bit-cast1002 = bitcast i8* %gep1001 to i64*
  %587 = load i64, i64* %irc-bit-cast1002, align 8
  %.off4920 = add i64 %587, -913
  %588 = icmp ult i64 %.off4920, 85
  br i1 %588, label %tag451, label %header-check-br3069

header-check-br1012:                              ; preds = %tag82
  %irc-bit-cast1016 = bitcast {}* %"closure->LAMBDA1861" to i8*
  %gep1017 = getelementptr inbounds i8, i8* %irc-bit-cast1016, i64 -9
  %irc-bit-cast1018 = bitcast i8* %gep1017 to i64*
  %589 = load i64, i64* %irc-bit-cast1018, align 8
  %.off = add i64 %589, -913
  %590 = icmp ult i64 %.off, 85
  br i1 %590, label %tag548, label %header-check-br1503

normal-dest1022:                                  ; preds = %maybe-more-tests3077
  %ptrtoint1023 = ptrtoint {}* %1023 to i64
  %entry-point-addr-uint1024 = add i64 %ptrtoint1023, 7
  %entry-point-addr1025 = inttoptr i64 %entry-point-addr-uint1024 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1026 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1025, align 8
  %591 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1026({}* %1023, i64 1, {}* nonnull %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest1029 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1029:                                  ; preds = %normal-dest1022
  %.elt4483 = extractvalue { {}*, i64 } %591, 0
  %.elt4485 = extractvalue { {}*, i64 } %591, 1
  %cond3851 = icmp eq i64 %.elt4485, 0
  %592 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148247.1 = select i1 %cond3851, {}* %592, {}* %.elt4483
  br label %tag451

normal-dest1048:                                  ; preds = %maybe-more-tests2262
  %ptrtoint1049 = ptrtoint {}* %833 to i64
  %entry-point-addr-uint1050 = add i64 %ptrtoint1049, 7
  %entry-point-addr1051 = inttoptr i64 %entry-point-addr-uint1050 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1052 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1051, align 8
  %593 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1052({}* %833, i64 1, {}* nonnull %"closure->LAMBDA3552", {}* null, {}* null, {}* null)
          to label %normal-dest1055 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1055:                                  ; preds = %normal-dest1048
  %.elt4059 = extractvalue { {}*, i64 } %593, 0
  %.elt4061 = extractvalue { {}*, i64 } %593, 1
  %cond3775 = icmp eq i64 %.elt4061, 0
  %594 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147720.2 = select i1 %cond3775, {}* %594, {}* %.elt4059
  br label %tag38

normal-dest1062:                                  ; preds = %tag92
  %595 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 195), align 8
  %ptrtoint1063 = ptrtoint {}* %G147642.0 to i64
  %entry-point-addr-uint1064 = add i64 %ptrtoint1063, 7
  %entry-point-addr1065 = inttoptr i64 %entry-point-addr-uint1064 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1066 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1065, align 8
  %596 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1066({}* %G147642.0, i64 2, {}* %99, {}* %595, {}* null, {}* null)
          to label %tag212 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1080:                                  ; preds = %tag105
  %597 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %598 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %599 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %600 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint1082 = ptrtoint {}* %112 to i64
  %entry-point-addr-uint1083 = add i64 %ptrtoint1082, 7
  %entry-point-addr1084 = inttoptr i64 %entry-point-addr-uint1083 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1085 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1084, align 8
  %601 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1085({}* %112, i64 5, {}* %597, {}* %598, {}* %x757.0, {}* %599, {}* %600)
          to label %normal-dest1088 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1088:                                  ; preds = %normal-dest1080
  %.elt4301 = extractvalue { {}*, i64 } %601, 0
  %.elt4303 = extractvalue { {}*, i64 } %601, 1
  %cond3818 = icmp eq i64 %.elt4303, 0
  %602 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147683.1 = select i1 %cond3818, {}* %602, {}* %.elt4301
  br label %tag461

header-check-br1094:                              ; preds = %tag106
  %irc-bit-cast1098 = bitcast {}* %"closure->LAMBDA" to i8*
  %gep1099 = getelementptr inbounds i8, i8* %irc-bit-cast1098, i64 -9
  %irc-bit-cast1100 = bitcast i8* %gep1099 to i64*
  %603 = load i64, i64* %irc-bit-cast1100, align 8
  %.off4916 = add i64 %603, -913
  %604 = icmp ult i64 %.off4916, 85
  br i1 %604, label %tag129, label %header-check-br3492

normal-dest1104:                                  ; preds = %tag304
  %ptrtoint1106 = ptrtoint {}* %266 to i64
  %entry-point-addr-uint1107 = add i64 %ptrtoint1106, 7
  %entry-point-addr1108 = inttoptr i64 %entry-point-addr-uint1107 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1109 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1108, align 8
  %605 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1109({}* %266, i64 2, {}* %x981.0, {}* inttoptr (i64 20 to {}*), {}* null, {}* null)
          to label %normal-dest1112 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1112:                                  ; preds = %normal-dest1104
  %.elt4152 = extractvalue { {}*, i64 } %605, 0
  %.elt4154 = extractvalue { {}*, i64 } %605, 1
  %cond3791 = icmp eq i64 %.elt4154, 0
  %606 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147446.1 = select i1 %cond3791, {}* %606, {}* %.elt4152
  br label %tag458

normal-dest1119:                                  ; preds = %tag110
  %607 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %608 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %609 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %610 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 148), align 16
  %ptrtoint1120 = ptrtoint {}* %114 to i64
  %entry-point-addr-uint1121 = add i64 %ptrtoint1120, 7
  %entry-point-addr1122 = inttoptr i64 %entry-point-addr-uint1121 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1123 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1122, align 8
  %611 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1123({}* %114, i64 5, {}* %607, {}* %608, {}* %"closure->LAMBDA", {}* %609, {}* %610)
          to label %normal-dest1126 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1126:                                  ; preds = %normal-dest1119
  %.elt4471 = extractvalue { {}*, i64 } %611, 0
  %.elt4473 = extractvalue { {}*, i64 } %611, 1
  %cond3850 = icmp eq i64 %.elt4473, 0
  %612 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148247.2 = select i1 %cond3850, {}* %612, {}* %.elt4471
  br label %tag451

header-check-br1132:                              ; preds = %tag111
  %irc-bit-cast1136 = bitcast {}* %"closure->LAMBDA3590" to i8*
  %gep1137 = getelementptr inbounds i8, i8* %irc-bit-cast1136, i64 -9
  %irc-bit-cast1138 = bitcast i8* %gep1137 to i64*
  %613 = load i64, i64* %irc-bit-cast1138, align 8
  %.off4906 = add i64 %613, -913
  %614 = icmp ult i64 %.off4906, 85
  br i1 %614, label %tag122, label %header-check-br2550

header-check-br1147:                              ; preds = %header-check-br2316
  %.off4771 = add i64 %849, -1001
  %615 = icmp ult i64 %.off4771, 5
  br i1 %615, label %maybe-more-tests1155, label %tag254

maybe-more-tests1155:                             ; preds = %header-check-br1147
  %616 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %617 = invoke {}* @cc_safe_fdefinition({}* %616)
          to label %normal-dest918 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1162:                                  ; preds = %tag116
  %618 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 149), align 8
  %619 = invoke {}* @cc_safe_fdefinition({}* %618)
          to label %normal-dest1168 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1168:                                  ; preds = %normal-dest1162
  %ptrtoint1169 = ptrtoint {}* %619 to i64
  %entry-point-addr-uint1170 = add i64 %ptrtoint1169, 7
  %entry-point-addr1171 = inttoptr i64 %entry-point-addr-uint1170 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1172 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1171, align 8
  %620 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1172({}* %619, i64 1, {}* %G146820.0, {}* null, {}* null, {}* null)
          to label %tag212 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1181:                                  ; preds = %tag117
  %ptrtoint1182 = ptrtoint {}* %123 to i64
  %entry-point-addr-uint1183 = add i64 %ptrtoint1182, 7
  %entry-point-addr1184 = inttoptr i64 %entry-point-addr-uint1183 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1185 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1184, align 8
  %621 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1185({}* %123, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest1188 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1188:                                  ; preds = %normal-dest1181
  %.elt3941 = extractvalue { {}*, i64 } %621, 0
  %.elt3943 = extractvalue { {}*, i64 } %621, 1
  %cond3753 = icmp eq i64 %.elt3943, 0
  %622 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %OUT146846.0 = select i1 %cond3753, {}* %622, {}* %.elt3941
  %ptrtoint1195 = ptrtoint {}* %"closure->LAMBDA1861" to i64
  %tag-only1196 = and i64 %ptrtoint1195, 7
  %test1197 = icmp eq i64 %tag-only1196, 1
  br i1 %test1197, label %header-check-br1194, label %tag136

header-check-br1194:                              ; preds = %normal-dest1188
  %irc-bit-cast1198 = bitcast {}* %"closure->LAMBDA1861" to i8*
  %gep1199 = getelementptr inbounds i8, i8* %irc-bit-cast1198, i64 -9
  %irc-bit-cast1200 = bitcast i8* %gep1199 to i64*
  %623 = load i64, i64* %irc-bit-cast1200, align 8
  %.off4764 = add i64 %623, -913
  %624 = icmp ult i64 %.off4764, 85
  br i1 %624, label %tag449, label %header-check-br2649

normal-dest1204:                                  ; preds = %tag118
  %625 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %626 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %627 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %628 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 190), align 16
  %ptrtoint1205 = ptrtoint {}* %125 to i64
  %entry-point-addr-uint1206 = add i64 %ptrtoint1205, 7
  %entry-point-addr1207 = inttoptr i64 %entry-point-addr-uint1206 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1208 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1207, align 8
  %629 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1208({}* %125, i64 5, {}* %625, {}* %626, {}* %"closure->LAMBDA3652", {}* %627, {}* %628)
          to label %normal-dest1211 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1211:                                  ; preds = %normal-dest1204
  %.elt4170 = extractvalue { {}*, i64 } %629, 0
  %.elt4172 = extractvalue { {}*, i64 } %629, 1
  %cond3794 = icmp eq i64 %.elt4172, 0
  %630 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147331.1 = select i1 %cond3794, {}* %630, {}* %.elt4170
  br label %tag65

normal-dest1225:                                  ; preds = %tag120
  %ptrtoint1226 = ptrtoint {}* %127 to i64
  %entry-point-addr-uint1227 = add i64 %ptrtoint1226, 7
  %entry-point-addr1228 = inttoptr i64 %entry-point-addr-uint1227 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1229 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1228, align 8
  %631 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1229({}* %127, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest1232 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1232:                                  ; preds = %normal-dest1225
  %.elt4325 = extractvalue { {}*, i64 } %631, 0
  %.elt4327 = extractvalue { {}*, i64 } %631, 1
  %cond3824 = icmp eq i64 %.elt4327, 0
  %632 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146786.0 = select i1 %cond3824, {}* %632, {}* %.elt4325
  %ptrtoint1239 = ptrtoint {}* %"closure->LAMBDA2860" to i64
  %tag-only1240 = and i64 %ptrtoint1239, 7
  %test1241 = icmp eq i64 %tag-only1240, 1
  br i1 %test1241, label %header-check-br1238, label %tag12

header-check-br1238:                              ; preds = %normal-dest1232
  %irc-bit-cast1242 = bitcast {}* %"closure->LAMBDA2860" to i8*
  %gep1243 = getelementptr inbounds i8, i8* %irc-bit-cast1242, i64 -9
  %irc-bit-cast1244 = bitcast i8* %gep1243 to i64*
  %633 = load i64, i64* %irc-bit-cast1244, align 8
  %.off4890 = add i64 %633, -913
  %634 = icmp ult i64 %.off4890, 85
  br i1 %634, label %tag507, label %header-check-br3616

normal-dest1248:                                  ; preds = %tag122
  %ptrtoint1249 = ptrtoint {}* %G146974.0 to i64
  %entry-point-addr-uint1250 = add i64 %ptrtoint1249, 7
  %entry-point-addr1251 = inttoptr i64 %entry-point-addr-uint1250 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1252 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1251, align 8
  %635 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1252({}* %G146974.0, i64 1, {}* %129, {}* null, {}* null, {}* null)
          to label %normal-dest1255 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1255:                                  ; preds = %normal-dest1248
  %636 = load i64, i64* bitcast ({}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12) to i64*), align 16
  br label %tag104

header-check-br1262:                              ; preds = %header-check-br1774
  %.off4811 = add i64 %745, -1001
  %637 = icmp ult i64 %.off4811, 5
  br i1 %637, label %maybe-more-tests1270, label %tag40

maybe-more-tests1270:                             ; preds = %header-check-br1262
  %638 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %639 = invoke {}* @cc_safe_fdefinition({}* %638)
          to label %normal-dest2050 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

header-check-br1271:                              ; preds = %header-check-br1797
  %.off4763 = add i64 %749, -1001
  %640 = icmp ult i64 %.off4763, 5
  br i1 %640, label %maybe-more-tests1279, label %tag495

maybe-more-tests1279:                             ; preds = %header-check-br1271
  %641 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %642 = invoke {}* @cc_safe_fdefinition({}* %641)
          to label %normal-dest3185 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1281:                                  ; preds = %maybe-more-tests756
  %ptrtoint1282 = ptrtoint {}* %528 to i64
  %entry-point-addr-uint1283 = add i64 %ptrtoint1282, 7
  %entry-point-addr1284 = inttoptr i64 %entry-point-addr-uint1283 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1285 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1284, align 8
  %643 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1285({}* %528, i64 1, {}* nonnull %"closure->LAMBDA3652", {}* null, {}* null, {}* null)
          to label %normal-dest1288 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1288:                                  ; preds = %normal-dest1281
  %.elt4218 = extractvalue { {}*, i64 } %643, 0
  %.elt4220 = extractvalue { {}*, i64 } %643, 1
  %cond3802 = icmp eq i64 %.elt4220, 0
  %644 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147272.1 = select i1 %cond3802, {}* %644, {}* %.elt4218
  br label %tag370

normal-dest1300:                                  ; preds = %tag127
  %645 = load i64, i64* bitcast ({}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12) to i64*), align 16
  br label %tag104

normal-dest1308:                                  ; preds = %tag128
  br i1 %consp-test3213, label %tag289, label %tag217

normal-dest1316:                                  ; preds = %tag129
  %ptrtoint1317 = ptrtoint {}* %G148270.0 to i64
  %entry-point-addr-uint1318 = add i64 %ptrtoint1317, 7
  %entry-point-addr1319 = inttoptr i64 %entry-point-addr-uint1318 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1320 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1319, align 8
  %646 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1320({}* %G148270.0, i64 2, {}* %137, {}* %farg0, {}* null, {}* null)
          to label %tag342 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1345:                                  ; preds = %tag131
  %.elt3881 = extractvalue { {}*, i64 } %139, 0
  %.elt3883 = extractvalue { {}*, i64 } %139, 1
  %cond3743 = icmp eq i64 %.elt3883, 0
  %647 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147975.0 = select i1 %cond3743, {}* %647, {}* %.elt3881
  %648 = icmp eq {}* %G147975.0, %647
  br i1 %648, label %tag345, label %tag555

normal-dest1352:                                  ; preds = %tag132
  %649 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %650 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %651 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %652 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint1353 = ptrtoint {}* %141 to i64
  %entry-point-addr-uint1354 = add i64 %ptrtoint1353, 7
  %entry-point-addr1355 = inttoptr i64 %entry-point-addr-uint1354 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1356 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1355, align 8
  %653 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1356({}* %141, i64 5, {}* %649, {}* %650, {}* %.in4287, {}* %651, {}* %652)
          to label %normal-dest1359 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1359:                                  ; preds = %normal-dest1352
  %.elt4166 = extractvalue { {}*, i64 } %653, 0
  %.elt4168 = extractvalue { {}*, i64 } %653, 1
  %cond3793 = icmp eq i64 %.elt4168, 0
  %654 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x650.1 = select i1 %cond3793, {}* %654, {}* %.elt4166
  br label %tag85

header-check-br1365:                              ; preds = %header-check-br2911
  %.off4767 = add i64 %988, -1001
  %655 = icmp ult i64 %.off4767, 5
  br i1 %655, label %maybe-more-tests1373, label %tag334

maybe-more-tests1373:                             ; preds = %header-check-br1365
  %656 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %657 = invoke {}* @cc_safe_fdefinition({}* %656)
          to label %normal-dest2941 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1375:                                  ; preds = %tag134
  %ptrtoint1376 = ptrtoint {}* %143 to i64
  %entry-point-addr-uint1377 = add i64 %ptrtoint1376, 7
  %entry-point-addr1378 = inttoptr i64 %entry-point-addr-uint1377 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1379 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1378, align 8
  %658 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1379({}* %143, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest1382 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1382:                                  ; preds = %normal-dest1375
  %.elt4192 = extractvalue { {}*, i64 } %658, 0
  %.elt4194 = extractvalue { {}*, i64 } %658, 1
  %cond3798 = icmp eq i64 %.elt4194, 0
  %659 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146837.0 = select i1 %cond3798, {}* %659, {}* %.elt4192
  %ptrtoint1389 = ptrtoint {}* %"closure->LAMBDA3652" to i64
  %tag-only1390 = and i64 %ptrtoint1389, 7
  %test1391 = icmp eq i64 %tag-only1390, 1
  br i1 %test1391, label %header-check-br1388, label %tag396

header-check-br1388:                              ; preds = %normal-dest1382
  %irc-bit-cast1392 = bitcast {}* %"closure->LAMBDA3652" to i8*
  %gep1393 = getelementptr inbounds i8, i8* %irc-bit-cast1392, i64 -9
  %irc-bit-cast1394 = bitcast i8* %gep1393 to i64*
  %660 = load i64, i64* %irc-bit-cast1394, align 8
  %.off4852 = add i64 %660, -913
  %661 = icmp ult i64 %.off4852, 85
  br i1 %661, label %tag370, label %header-check-br748

normal-dest1398:                                  ; preds = %tag135
  %ptrtoint1399 = ptrtoint {}* %145 to i64
  %entry-point-addr-uint1400 = add i64 %ptrtoint1399, 7
  %entry-point-addr1401 = inttoptr i64 %entry-point-addr-uint1400 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1402 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1401, align 8
  %662 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1402({}* %145, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest1405 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1405:                                  ; preds = %normal-dest1398
  %.elt4407 = extractvalue { {}*, i64 } %662, 0
  %.elt4409 = extractvalue { {}*, i64 } %662, 1
  %cond3838 = icmp eq i64 %.elt4409, 0
  %663 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146868.0 = select i1 %cond3838, {}* %663, {}* %.elt4407
  %ptrtoint1413 = ptrtoint {}* %"closure->LAMBDA3590" to i64
  %tag-only1414 = and i64 %ptrtoint1413, 7
  %test1415 = icmp eq i64 %tag-only1414, 1
  br i1 %test1415, label %header-check-br1412, label %tag369

header-check-br1412:                              ; preds = %normal-dest1405
  %irc-bit-cast1416 = bitcast {}* %"closure->LAMBDA3590" to i8*
  %gep1417 = getelementptr inbounds i8, i8* %irc-bit-cast1416, i64 -9
  %irc-bit-cast1418 = bitcast i8* %gep1417 to i64*
  %664 = load i64, i64* %irc-bit-cast1418, align 8
  %.off4910 = add i64 %664, -913
  %665 = icmp ult i64 %.off4910, 85
  br i1 %665, label %tag216, label %header-check-br3667

normal-dest1422:                                  ; preds = %tag136
  %666 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %667 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %668 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %669 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 208), align 16
  %ptrtoint1423 = ptrtoint {}* %147 to i64
  %entry-point-addr-uint1424 = add i64 %ptrtoint1423, 7
  %entry-point-addr1425 = inttoptr i64 %entry-point-addr-uint1424 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1426 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1425, align 8
  %670 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1426({}* %147, i64 5, {}* %666, {}* %667, {}* %"closure->LAMBDA1861", {}* %668, {}* %669)
          to label %normal-dest1429 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1429:                                  ; preds = %normal-dest1422
  %.elt3945 = extractvalue { {}*, i64 } %670, 0
  %.elt3947 = extractvalue { {}*, i64 } %670, 1
  %cond3754 = icmp eq i64 %.elt3947, 0
  %671 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147086.1 = select i1 %cond3754, {}* %671, {}* %.elt3945
  br label %tag449

normal-dest1462:                                  ; preds = %tag145
  %672 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %673 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %674 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %675 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 156), align 16
  %ptrtoint1463 = ptrtoint {}* %155 to i64
  %entry-point-addr-uint1464 = add i64 %ptrtoint1463, 7
  %entry-point-addr1465 = inttoptr i64 %entry-point-addr-uint1464 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1466 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1465, align 8
  %676 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1466({}* %155, i64 5, {}* %672, {}* %673, {}* %"closure->LAMBDA2860", {}* %674, {}* %675)
          to label %normal-dest1469 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1469:                                  ; preds = %normal-dest1462
  %.elt4375 = extractvalue { {}*, i64 } %676, 0
  %.elt4377 = extractvalue { {}*, i64 } %676, 1
  %cond3833 = icmp eq i64 %.elt4377, 0
  %677 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148016.1 = select i1 %cond3833, {}* %677, {}* %.elt4375
  br label %tag143

normal-dest1476:                                  ; preds = %maybe-more-tests3609
  %ptrtoint1477 = ptrtoint {}* %1150 to i64
  %entry-point-addr-uint1478 = add i64 %ptrtoint1477, 7
  %entry-point-addr1479 = inttoptr i64 %entry-point-addr-uint1478 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1480 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1479, align 8
  %678 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1480({}* %1150, i64 1, {}* nonnull %"closure->LAMBDA3652", {}* null, {}* null, {}* null)
          to label %normal-dest1483 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1483:                                  ; preds = %normal-dest1476
  %.elt4188 = extractvalue { {}*, i64 } %678, 0
  %.elt4190 = extractvalue { {}*, i64 } %678, 1
  %cond3797 = icmp eq i64 %.elt4190, 0
  %679 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147331.2 = select i1 %cond3797, {}* %679, {}* %.elt4188
  br label %tag65

normal-dest1490:                                  ; preds = %tag148
  %680 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %681 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %682 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %683 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint1491 = ptrtoint {}* %157 to i64
  %entry-point-addr-uint1492 = add i64 %ptrtoint1491, 7
  %entry-point-addr1493 = inttoptr i64 %entry-point-addr-uint1492 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1494 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1493, align 8
  %684 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1494({}* %157, i64 5, {}* %680, {}* %681, {}* %x864.0, {}* %682, {}* %683)
          to label %normal-dest1497 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1497:                                  ; preds = %normal-dest1490
  %.elt4210 = extractvalue { {}*, i64 } %684, 0
  %.elt4212 = extractvalue { {}*, i64 } %684, 1
  %cond3800 = icmp eq i64 %.elt4212, 0
  %685 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147274.1 = select i1 %cond3800, {}* %685, {}* %.elt4210
  br label %tag248

header-check-br1503:                              ; preds = %header-check-br1012
  %.off4759 = add i64 %589, -1001
  %686 = icmp ult i64 %.off4759, 5
  br i1 %686, label %maybe-more-tests1511, label %tag446

maybe-more-tests1511:                             ; preds = %header-check-br1503
  %687 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %688 = invoke {}* @cc_safe_fdefinition({}* %687)
          to label %normal-dest2721 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1513:                                  ; preds = %tag151
  %689 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %690 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %691 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %692 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint1514 = ptrtoint {}* %159 to i64
  %entry-point-addr-uint1515 = add i64 %ptrtoint1514, 7
  %entry-point-addr1516 = inttoptr i64 %entry-point-addr-uint1515 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1517 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1516, align 8
  %693 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1517({}* %159, i64 5, {}* %689, {}* %690, {}* %x858.0, {}* %691, {}* %692)
          to label %normal-dest1520 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1520:                                  ; preds = %normal-dest1513
  %.elt4293 = extractvalue { {}*, i64 } %693, 0
  %.elt4295 = extractvalue { {}*, i64 } %693, 1
  %cond3816 = icmp eq i64 %.elt4295, 0
  %694 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147540.1 = select i1 %cond3816, {}* %694, {}* %.elt4293
  br label %tag562

normal-dest1527:                                  ; preds = %maybe-more-tests2339
  %ptrtoint1528 = ptrtoint {}* %853 to i64
  %entry-point-addr-uint1529 = add i64 %ptrtoint1528, 7
  %entry-point-addr1530 = inttoptr i64 %entry-point-addr-uint1529 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1531 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1530, align 8
  %695 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1531({}* %853, i64 1, {}* nonnull %"closure->LAMBDA3590", {}* null, {}* null, {}* null)
          to label %normal-dest1534 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1534:                                  ; preds = %normal-dest1527
  %.elt4443 = extractvalue { {}*, i64 } %695, 0
  %.elt4445 = extractvalue { {}*, i64 } %695, 1
  %cond3844 = icmp eq i64 %.elt4445, 0
  %696 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146926.1 = select i1 %cond3844, {}* %696, {}* %.elt4443
  br label %tag33

normal-dest1558:                                  ; preds = %tag156
  %697 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 149), align 8
  %698 = invoke {}* @cc_safe_fdefinition({}* %697)
          to label %normal-dest1564 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1564:                                  ; preds = %normal-dest1558
  %ptrtoint1565 = ptrtoint {}* %698 to i64
  %entry-point-addr-uint1566 = add i64 %ptrtoint1565, 7
  %entry-point-addr1567 = inttoptr i64 %entry-point-addr-uint1566 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1568 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1567, align 8
  %699 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1568({}* %698, i64 1, {}* %G146852.0, {}* null, {}* null, {}* null)
          to label %tag582 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1577:                                  ; preds = %tag160
  %ptrtoint1578 = ptrtoint {}* %166 to i64
  %entry-point-addr-uint1579 = add i64 %ptrtoint1578, 7
  %entry-point-addr1580 = inttoptr i64 %entry-point-addr-uint1579 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1581 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1580, align 8
  %700 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1581({}* %166, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest1584 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1584:                                  ; preds = %normal-dest1577
  %.elt4431 = extractvalue { {}*, i64 } %700, 0
  %.elt4433 = extractvalue { {}*, i64 } %700, 1
  %cond3842 = icmp eq i64 %.elt4433, 0
  %701 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %OUT146862.0 = select i1 %cond3842, {}* %701, {}* %.elt4431
  %ptrtoint1591 = ptrtoint {}* %"closure->LAMBDA3590" to i64
  %tag-only1592 = and i64 %ptrtoint1591, 7
  %test1593 = icmp eq i64 %tag-only1592, 1
  br i1 %test1593, label %header-check-br1590, label %tag343

header-check-br1590:                              ; preds = %normal-dest1584
  %irc-bit-cast1594 = bitcast {}* %"closure->LAMBDA3590" to i8*
  %gep1595 = getelementptr inbounds i8, i8* %irc-bit-cast1594, i64 -9
  %irc-bit-cast1596 = bitcast i8* %gep1595 to i64*
  %702 = load i64, i64* %irc-bit-cast1596, align 8
  %.off4912 = add i64 %702, -913
  %703 = icmp ult i64 %.off4912, 85
  br i1 %703, label %tag33, label %header-check-br2331

header-check-br1599:                              ; preds = %header-check-br3060
  %.off4781 = add i64 %1019, -1001
  %704 = icmp ult i64 %.off4781, 5
  br i1 %704, label %maybe-more-tests1607, label %tag560

maybe-more-tests1607:                             ; preds = %header-check-br1599
  %705 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %706 = invoke {}* @cc_safe_fdefinition({}* %705)
          to label %normal-dest3362 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1639:                                  ; preds = %req-bb
  %707 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %708 = icmp eq {}* %stream.0, %707
  %.val4735 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148286.0 = select i1 %708, {}* %707, {}* %.val4735
  %709 = icmp eq {}* %G148286.0, %.val4735
  br i1 %709, label %tag165, label %tag106

header-check-br1644:                              ; preds = %header-check-br1688
  %.off4897 = add i64 %721, -1001
  %710 = icmp ult i64 %.off4897, 5
  br i1 %710, label %maybe-more-tests1652, label %tag19

maybe-more-tests1652:                             ; preds = %header-check-br1644
  %711 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %712 = invoke {}* @cc_safe_fdefinition({}* %711)
          to label %normal-dest652 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1659:                                  ; preds = %tag180
  %713 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %714 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %715 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %716 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint1661 = ptrtoint {}* %180 to i64
  %entry-point-addr-uint1662 = add i64 %ptrtoint1661, 7
  %entry-point-addr1663 = inttoptr i64 %entry-point-addr-uint1662 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1664 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1663, align 8
  %717 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1664({}* %180, i64 5, {}* %713, {}* %714, {}* %x759.0, {}* %715, {}* %716)
          to label %normal-dest1667 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1667:                                  ; preds = %normal-dest1659
  %.elt3905 = extractvalue { {}*, i64 } %717, 0
  %.elt3907 = extractvalue { {}*, i64 } %717, 1
  %cond3746 = icmp eq i64 %.elt3907, 0
  %718 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %.in = select i1 %cond3746, {}* %718, {}* %.elt3905
  br label %tag480.backedge

normal-dest1674:                                  ; preds = %tag181
  %ptrtoint1675 = ptrtoint {}* %182 to i64
  %entry-point-addr-uint1676 = add i64 %ptrtoint1675, 7
  %entry-point-addr1677 = inttoptr i64 %entry-point-addr-uint1676 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1678 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1677, align 8
  %719 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1678({}* %182, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest1681 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1681:                                  ; preds = %normal-dest1674
  %.elt4354 = extractvalue { {}*, i64 } %719, 0
  %.elt4356 = extractvalue { {}*, i64 } %719, 1
  %cond3829 = icmp eq i64 %.elt4356, 0
  %720 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %OUT1467781682.0 = select i1 %cond3829, {}* %720, {}* %.elt4354
  %ptrtoint1689 = ptrtoint {}* %"closure->LAMBDA2860" to i64
  %tag-only1690 = and i64 %ptrtoint1689, 7
  %test1691 = icmp eq i64 %tag-only1690, 1
  br i1 %test1691, label %header-check-br1688, label %tag19

header-check-br1688:                              ; preds = %normal-dest1681
  %irc-bit-cast1692 = bitcast {}* %"closure->LAMBDA2860" to i8*
  %gep1693 = getelementptr inbounds i8, i8* %irc-bit-cast1692, i64 -9
  %irc-bit-cast1694 = bitcast i8* %gep1693 to i64*
  %721 = load i64, i64* %irc-bit-cast1694, align 8
  %.off4896 = add i64 %721, -913
  %722 = icmp ult i64 %.off4896, 85
  br i1 %722, label %tag403, label %header-check-br1644

normal-dest1698:                                  ; preds = %tag182
  %723 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %724 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %725 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %726 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint1699 = ptrtoint {}* %184 to i64
  %entry-point-addr-uint1700 = add i64 %ptrtoint1699, 7
  %entry-point-addr1701 = inttoptr i64 %entry-point-addr-uint1700 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1702 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1701, align 8
  %727 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1702({}* %184, i64 5, {}* %723, {}* %724, {}* %x742.0, {}* %725, {}* %726)
          to label %normal-dest1705 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1705:                                  ; preds = %normal-dest1698
  %.elt3999 = extractvalue { {}*, i64 } %727, 0
  %.elt4001 = extractvalue { {}*, i64 } %727, 1
  %cond3763 = icmp eq i64 %.elt4001, 0
  %728 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147835.1 = select i1 %cond3763, {}* %728, {}* %.elt3999
  br label %tag298

header-check-br1714:                              ; preds = %header-check-br2386
  %.off4861 = add i64 %863, -1001
  %729 = icmp ult i64 %.off4861, 5
  br i1 %729, label %maybe-more-tests1722, label %tag489

maybe-more-tests1722:                             ; preds = %header-check-br1714
  %730 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %731 = invoke {}* @cc_safe_fdefinition({}* %730)
          to label %normal-dest2341 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

header-check-br1723:                              ; preds = %header-check-br2040
  %.off4869 = add i64 %788, -1001
  %732 = icmp ult i64 %.off4869, 5
  br i1 %732, label %maybe-more-tests1731, label %tag265

maybe-more-tests1731:                             ; preds = %header-check-br1723
  %733 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %734 = invoke {}* @cc_safe_fdefinition({}* %733)
          to label %normal-dest2889 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1733:                                  ; preds = %maybe-more-tests3624
  %ptrtoint1734 = ptrtoint {}* %1153 to i64
  %entry-point-addr-uint1735 = add i64 %ptrtoint1734, 7
  %entry-point-addr1736 = inttoptr i64 %entry-point-addr-uint1735 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1737 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1736, align 8
  %735 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1737({}* %1153, i64 1, {}* nonnull %"closure->LAMBDA2860", {}* null, {}* null, {}* null)
          to label %normal-dest1740 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1740:                                  ; preds = %normal-dest1733
  %.elt4346 = extractvalue { {}*, i64 } %735, 0
  %.elt4348 = extractvalue { {}*, i64 } %735, 1
  %cond3827 = icmp eq i64 %.elt4348, 0
  %736 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148097.2 = select i1 %cond3827, {}* %736, {}* %.elt4346
  br label %tag507

normal-dest1747:                                  ; preds = %tag190
  %737 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %738 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %739 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %740 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint1748 = ptrtoint {}* %186 to i64
  %entry-point-addr-uint1749 = add i64 %ptrtoint1748, 7
  %entry-point-addr1750 = inttoptr i64 %entry-point-addr-uint1749 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1751 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1750, align 8
  %741 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1751({}* %186, i64 5, {}* %737, {}* %738, {}* %.in4287, {}* %739, {}* %740)
          to label %normal-dest1754 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1754:                                  ; preds = %normal-dest1747
  %.elt4055 = extractvalue { {}*, i64 } %741, 0
  %.elt4057 = extractvalue { {}*, i64 } %741, 1
  %cond3774 = icmp eq i64 %.elt4057, 0
  %742 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x881.1 = select i1 %cond3774, {}* %742, {}* %.elt4055
  br label %tag526

normal-dest1761:                                  ; preds = %tag191
  %ptrtoint1762 = ptrtoint {}* %188 to i64
  %entry-point-addr-uint1763 = add i64 %ptrtoint1762, 7
  %entry-point-addr1764 = inttoptr i64 %entry-point-addr-uint1763 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1765 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1764, align 8
  %743 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1765({}* %188, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest1768 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1768:                                  ; preds = %normal-dest1761
  %.elt4081 = extractvalue { {}*, i64 } %743, 0
  %.elt4083 = extractvalue { {}*, i64 } %743, 1
  %cond3779 = icmp eq i64 %.elt4083, 0
  %744 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146820.0 = select i1 %cond3779, {}* %744, {}* %.elt4081
  %ptrtoint1775 = ptrtoint {}* %"closure->LAMBDA1990" to i64
  %tag-only1776 = and i64 %ptrtoint1775, 7
  %test1777 = icmp eq i64 %tag-only1776, 1
  br i1 %test1777, label %header-check-br1774, label %tag40

header-check-br1774:                              ; preds = %normal-dest1768
  %irc-bit-cast1778 = bitcast {}* %"closure->LAMBDA1990" to i8*
  %gep1779 = getelementptr inbounds i8, i8* %irc-bit-cast1778, i64 -9
  %irc-bit-cast1780 = bitcast i8* %gep1779 to i64*
  %745 = load i64, i64* %irc-bit-cast1780, align 8
  %.off4810 = add i64 %745, -913
  %746 = icmp ult i64 %.off4810, 85
  br i1 %746, label %tag116, label %header-check-br1262

normal-dest1784:                                  ; preds = %tag194
  %ptrtoint1785 = ptrtoint {}* %190 to i64
  %entry-point-addr-uint1786 = add i64 %ptrtoint1785, 7
  %entry-point-addr1787 = inttoptr i64 %entry-point-addr-uint1786 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1788 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1787, align 8
  %747 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1788({}* %190, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest1791 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1791:                                  ; preds = %normal-dest1784
  %.elt3917 = extractvalue { {}*, i64 } %747, 0
  %.elt3919 = extractvalue { {}*, i64 } %747, 1
  %cond3749 = icmp eq i64 %.elt3919, 0
  %748 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146852.0 = select i1 %cond3749, {}* %748, {}* %.elt3917
  %ptrtoint1798 = ptrtoint {}* %"closure->LAMBDA1861" to i64
  %tag-only1799 = and i64 %ptrtoint1798, 7
  %test1800 = icmp eq i64 %tag-only1799, 1
  br i1 %test1800, label %header-check-br1797, label %tag495

header-check-br1797:                              ; preds = %normal-dest1791
  %irc-bit-cast1801 = bitcast {}* %"closure->LAMBDA1861" to i8*
  %gep1802 = getelementptr inbounds i8, i8* %irc-bit-cast1801, i64 -9
  %irc-bit-cast1803 = bitcast i8* %gep1802 to i64*
  %749 = load i64, i64* %irc-bit-cast1803, align 8
  %.off4762 = add i64 %749, -913
  %750 = icmp ult i64 %.off4762, 85
  br i1 %750, label %tag156, label %header-check-br1271

normal-dest1818:                                  ; preds = %tag199
  %751 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %752 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %753 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %754 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint1819 = ptrtoint {}* %193 to i64
  %entry-point-addr-uint1820 = add i64 %ptrtoint1819, 7
  %entry-point-addr1821 = inttoptr i64 %entry-point-addr-uint1820 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1822 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1821, align 8
  %755 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1822({}* %193, i64 5, {}* %751, {}* %752, {}* %x760.0, {}* %753, {}* %754)
          to label %normal-dest1825 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1825:                                  ; preds = %normal-dest1818
  %.elt4029 = extractvalue { {}*, i64 } %755, 0
  %.elt4031 = extractvalue { {}*, i64 } %755, 1
  %cond3769 = icmp eq i64 %.elt4031, 0
  %756 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147773.1 = select i1 %cond3769, {}* %756, {}* %.elt4029
  br label %tag264

normal-dest1833:                                  ; preds = %tag202
  %757 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %758 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %759 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %760 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 161), align 8
  %ptrtoint1834 = ptrtoint {}* %198 to i64
  %entry-point-addr-uint1835 = add i64 %ptrtoint1834, 7
  %entry-point-addr1836 = inttoptr i64 %entry-point-addr-uint1835 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1837 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1836, align 8
  %761 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1837({}* %198, i64 5, {}* %757, {}* %758, {}* %"closure->LAMBDA2860", {}* %759, {}* %760)
          to label %normal-dest1840 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1840:                                  ; preds = %normal-dest1833
  %.elt3870 = extractvalue { {}*, i64 } %761, 0
  %.elt3872 = extractvalue { {}*, i64 } %761, 1
  %cond3742 = icmp eq i64 %.elt3872, 0
  %762 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148140.1 = select i1 %cond3742, {}* %762, {}* %.elt3870
  br label %tag227

normal-dest1847:                                  ; preds = %tag204
  %ptrtoint1848 = ptrtoint {}* %200 to i64
  %entry-point-addr-uint1849 = add i64 %ptrtoint1848, 7
  %entry-point-addr1850 = inttoptr i64 %entry-point-addr-uint1849 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1851 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1850, align 8
  %763 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1851({}* %200, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest1854 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1854:                                  ; preds = %normal-dest1847
  %.elt4350 = extractvalue { {}*, i64 } %763, 0
  %.elt4352 = extractvalue { {}*, i64 } %763, 1
  %cond3828 = icmp eq i64 %.elt4352, 0
  %764 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148089.0 = select i1 %cond3828, {}* %764, {}* %.elt4350
  %765 = icmp eq {}* %G148089.0, %764
  br i1 %765, label %tag534, label %tag181

normal-dest1860:                                  ; preds = %tag212
  %766 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %767 = icmp eq {}* %stream.0, %766
  %.val4754 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147148.0 = select i1 %767, {}* %766, {}* %.val4754
  %768 = icmp eq {}* %G147148.0, %.val4754
  br i1 %768, label %tag498, label %tag82

normal-dest1867:                                  ; preds = %maybe-more-tests2558
  %ptrtoint1868 = ptrtoint {}* %906 to i64
  %entry-point-addr-uint1869 = add i64 %ptrtoint1868, 7
  %entry-point-addr1870 = inttoptr i64 %entry-point-addr-uint1869 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1871 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1870, align 8
  %769 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1871({}* %906, i64 1, {}* nonnull %"closure->LAMBDA3590", {}* null, {}* null, {}* null)
          to label %normal-dest1874 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1874:                                  ; preds = %normal-dest1867
  %.elt4403 = extractvalue { {}*, i64 } %769, 0
  %.elt4405 = extractvalue { {}*, i64 } %769, 1
  %cond3837 = icmp eq i64 %.elt4405, 0
  %770 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146974.1 = select i1 %cond3837, {}* %770, {}* %.elt4403
  br label %tag122

normal-dest1886:                                  ; preds = %tag216
  %771 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 149), align 8
  %772 = invoke {}* @cc_safe_fdefinition({}* %771)
          to label %normal-dest1892 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1892:                                  ; preds = %normal-dest1886
  %ptrtoint1893 = ptrtoint {}* %772 to i64
  %entry-point-addr-uint1894 = add i64 %ptrtoint1893, 7
  %entry-point-addr1895 = inttoptr i64 %entry-point-addr-uint1894 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1896 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1895, align 8
  %773 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1896({}* %772, i64 1, {}* %G146868.0, {}* null, {}* null, {}* null)
          to label %normal-dest1899 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1899:                                  ; preds = %normal-dest1892
  %.elt4419 = extractvalue { {}*, i64 } %773, 0
  %774 = ptrtoint {}* %.elt4419 to i64
  %.elt4421 = extractvalue { {}*, i64 } %773, 1
  br label %tag104

normal-dest1919:                                  ; preds = %maybe-more-tests3500
  %ptrtoint1920 = ptrtoint {}* %1121 to i64
  %entry-point-addr-uint1921 = add i64 %ptrtoint1920, 7
  %entry-point-addr1922 = inttoptr i64 %entry-point-addr-uint1921 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1923 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1922, align 8
  %775 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1923({}* %1121, i64 1, {}* nonnull %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest1926 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1926:                                  ; preds = %normal-dest1919
  %.elt4463 = extractvalue { {}*, i64 } %775, 0
  %.elt4465 = extractvalue { {}*, i64 } %775, 1
  %cond3848 = icmp eq i64 %.elt4465, 0
  %776 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148270.1 = select i1 %cond3848, {}* %776, {}* %.elt4463
  br label %tag129

normal-dest1939:                                  ; preds = %tag227
  %.val4741 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %.val4742 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148159.0 = select i1 %consp-test3213, {}* %.val4741, {}* %.val4742
  %777 = icmp eq {}* %G148159.0, %.val4742
  br i1 %777, label %tag433, label %tag374

header-check-br1977:                              ; preds = %tag234
  %irc-bit-cast1981 = bitcast {}* %"closure->LAMBDA3552" to i8*
  %gep1982 = getelementptr inbounds i8, i8* %irc-bit-cast1981, i64 -9
  %irc-bit-cast1983 = bitcast i8* %gep1982 to i64*
  %778 = load i64, i64* %irc-bit-cast1983, align 8
  %.off4796 = add i64 %778, -913
  %779 = icmp ult i64 %.off4796, 85
  br i1 %779, label %tag38, label %header-check-br2254

normal-dest1989:                                  ; preds = %tag239
  %780 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %781 = icmp eq {}* %stream.0, %780
  %.val4805 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147658.0 = select i1 %781, {}* %780, {}* %.val4805
  %782 = icmp eq {}* %G147658.0, %.val4805
  br i1 %782, label %tag558, label %tag513

normal-dest1996:                                  ; preds = %maybe-more-tests3550
  %ptrtoint1997 = ptrtoint {}* %1133 to i64
  %entry-point-addr-uint1998 = add i64 %ptrtoint1997, 7
  %entry-point-addr1999 = inttoptr i64 %entry-point-addr-uint1998 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2000 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1999, align 8
  %783 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2000({}* %1133, i64 1, {}* nonnull %"closure->LAMBDA3590", {}* null, {}* null, {}* null)
          to label %normal-dest2003 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2003:                                  ; preds = %normal-dest1996
  %.elt4455 = extractvalue { {}*, i64 } %783, 0
  %.elt4457 = extractvalue { {}*, i64 } %783, 1
  %cond3846 = icmp eq i64 %.elt4457, 0
  %784 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146911.1 = select i1 %cond3846, {}* %784, {}* %.elt4455
  br label %tag127

normal-dest2010:                                  ; preds = %tag247
  br i1 %consp-test3213, label %tag208, label %tag2

normal-dest2022:                                  ; preds = %tag248
  %785 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 149), align 8
  %786 = invoke {}* @cc_safe_fdefinition({}* %785)
          to label %normal-dest2028 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2028:                                  ; preds = %normal-dest2022
  %ptrtoint2029 = ptrtoint {}* %786 to i64
  %entry-point-addr-uint2030 = add i64 %ptrtoint2029, 7
  %entry-point-addr2031 = inttoptr i64 %entry-point-addr-uint2030 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2032 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2031, align 8
  %787 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2032({}* %786, i64 1, {}* %G146837.0, {}* null, {}* null, {}* null)
          to label %tag212 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

header-check-br2040:                              ; preds = %tag249
  %irc-bit-cast2044 = bitcast {}* %"closure->LAMBDA3652" to i8*
  %gep2045 = getelementptr inbounds i8, i8* %irc-bit-cast2044, i64 -9
  %irc-bit-cast2046 = bitcast i8* %gep2045 to i64*
  %788 = load i64, i64* %irc-bit-cast2046, align 8
  %.off4868 = add i64 %788, -913
  %789 = icmp ult i64 %.off4868, 85
  br i1 %789, label %tag581, label %header-check-br1723

normal-dest2050:                                  ; preds = %maybe-more-tests1270
  %ptrtoint2051 = ptrtoint {}* %639 to i64
  %entry-point-addr-uint2052 = add i64 %ptrtoint2051, 7
  %entry-point-addr2053 = inttoptr i64 %entry-point-addr-uint2052 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2054 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2053, align 8
  %790 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2054({}* %639, i64 1, {}* nonnull %"closure->LAMBDA1990", {}* null, {}* null, {}* null)
          to label %normal-dest2057 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2057:                                  ; preds = %normal-dest2050
  %.elt4097 = extractvalue { {}*, i64 } %790, 0
  %.elt4099 = extractvalue { {}*, i64 } %790, 1
  %cond3781 = icmp eq i64 %.elt4099, 0
  %791 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147619.2 = select i1 %cond3781, {}* %791, {}* %.elt4097
  br label %tag116

normal-dest2064:                                  ; preds = %tag254
  %792 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %793 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %794 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %795 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 206), align 16
  %ptrtoint2065 = ptrtoint {}* %231 to i64
  %entry-point-addr-uint2066 = add i64 %ptrtoint2065, 7
  %entry-point-addr2067 = inttoptr i64 %entry-point-addr-uint2066 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2068 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2067, align 8
  %796 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2068({}* %231, i64 5, {}* %792, {}* %793, {}* %"closure->LAMBDA3552", {}* %794, {}* %795)
          to label %normal-dest2071 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2071:                                  ; preds = %normal-dest2064
  %.elt3885 = extractvalue { {}*, i64 } %796, 0
  %.elt3887 = extractvalue { {}*, i64 } %796, 1
  %cond3744 = icmp eq i64 %.elt3887, 0
  %797 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147892.2 = select i1 %cond3744, {}* %797, {}* %.elt3885
  br label %tag464

normal-dest2084:                                  ; preds = %maybe-more-tests702
  %ptrtoint2085 = ptrtoint {}* %513 to i64
  %entry-point-addr-uint2086 = add i64 %ptrtoint2085, 7
  %entry-point-addr2087 = inttoptr i64 %entry-point-addr-uint2086 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2088 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2087, align 8
  %798 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2088({}* %513, i64 1, {}* nonnull %"closure->LAMBDA2860", {}* null, {}* null, {}* null)
          to label %normal-dest2091 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2091:                                  ; preds = %normal-dest2084
  %.elt4388 = extractvalue { {}*, i64 } %798, 0
  %.elt4390 = extractvalue { {}*, i64 } %798, 1
  %cond3835 = icmp eq i64 %.elt4390, 0
  %799 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148016.2 = select i1 %cond3835, {}* %799, {}* %.elt4388
  br label %tag143

normal-dest2115:                                  ; preds = %tag265
  %800 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %801 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %802 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %803 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 187), align 8
  %ptrtoint2116 = ptrtoint {}* %241 to i64
  %entry-point-addr-uint2117 = add i64 %ptrtoint2116, 7
  %entry-point-addr2118 = inttoptr i64 %entry-point-addr-uint2117 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2119 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2118, align 8
  %804 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2119({}* %241, i64 5, {}* %800, {}* %801, {}* %"closure->LAMBDA3652", {}* %802, {}* %803)
          to label %normal-dest2122 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2122:                                  ; preds = %normal-dest2115
  %.elt4252 = extractvalue { {}*, i64 } %804, 0
  %.elt4254 = extractvalue { {}*, i64 } %804, 1
  %cond3809 = icmp eq i64 %.elt4254, 0
  %805 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147159.1 = select i1 %cond3809, {}* %805, {}* %.elt4252
  br label %tag581

normal-dest2129:                                  ; preds = %tag266
  %ptrtoint2130 = ptrtoint {}* %243 to i64
  %entry-point-addr-uint2131 = add i64 %ptrtoint2130, 7
  %entry-point-addr2132 = inttoptr i64 %entry-point-addr-uint2131 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2133 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2132, align 8
  %806 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2133({}* %243, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest2136 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2136:                                  ; preds = %normal-dest2129
  %.elt3937 = extractvalue { {}*, i64 } %806, 0
  %.elt3939 = extractvalue { {}*, i64 } %806, 1
  %cond3752 = icmp eq i64 %.elt3939, 0
  %807 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147103.0 = select i1 %cond3752, {}* %807, {}* %.elt3937
  %808 = icmp eq {}* %G147103.0, %807
  br i1 %808, label %tag426, label %tag117

normal-dest2143:                                  ; preds = %maybe-more-tests2371
  %ptrtoint2144 = ptrtoint {}* %860 to i64
  %entry-point-addr-uint2145 = add i64 %ptrtoint2144, 7
  %entry-point-addr2146 = inttoptr i64 %entry-point-addr-uint2145 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2147 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2146, align 8
  %809 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2147({}* %860, i64 1, {}* nonnull %.in4287, {}* null, {}* null, {}* null)
          to label %normal-dest2150 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2150:                                  ; preds = %normal-dest2143
  %.elt4289 = extractvalue { {}*, i64 } %809, 0
  %.elt4291 = extractvalue { {}*, i64 } %809, 1
  %cond3815 = icmp eq i64 %.elt4291, 0
  %810 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148332.0 = select i1 %cond3815, {}* %810, {}* %.elt4289
  %811 = icmp eq {}* %G148332.0, inttoptr (i64 4 to {}*)
  br i1 %811, label %tag57, label %tag223

normal-dest2157:                                  ; preds = %tag270
  %812 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %813 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %814 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %815 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint2158 = ptrtoint {}* %248 to i64
  %entry-point-addr-uint2159 = add i64 %ptrtoint2158, 7
  %entry-point-addr2160 = inttoptr i64 %entry-point-addr-uint2159 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2161 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2160, align 8
  %816 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2161({}* %248, i64 5, {}* %812, {}* %813, {}* %.in4287, {}* %814, {}* %815)
          to label %normal-dest2164 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2164:                                  ; preds = %normal-dest2157
  %.elt4266 = extractvalue { {}*, i64 } %816, 0
  %.elt4268 = extractvalue { {}*, i64 } %816, 1
  %cond3811 = icmp eq i64 %.elt4268, 0
  %817 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x1653.1 = select i1 %cond3811, {}* %817, {}* %.elt4266
  br label %tag178

normal-dest2204:                                  ; preds = %maybe-more-tests
  %ptrtoint2205 = ptrtoint {}* %504 to i64
  %entry-point-addr-uint2206 = add i64 %ptrtoint2205, 7
  %entry-point-addr2207 = inttoptr i64 %entry-point-addr-uint2206 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2208 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2207, align 8
  %818 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2208({}* %504, i64 1, {}* nonnull %"closure->LAMBDA3552", {}* null, {}* null, {}* null)
          to label %normal-dest2211 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2211:                                  ; preds = %normal-dest2204
  %.elt4037 = extractvalue { {}*, i64 } %818, 0
  %.elt4039 = extractvalue { {}*, i64 } %818, 1
  %cond3771 = icmp eq i64 %.elt4039, 0
  %819 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147771.1 = select i1 %cond3771, {}* %819, {}* %.elt4037
  br label %tag329

header-check-br2217:                              ; preds = %header-check-br3159
  %.off4813 = add i64 %1040, -1001
  %820 = icmp ult i64 %.off4813, 5
  br i1 %820, label %maybe-more-tests2225, label %tag350

maybe-more-tests2225:                             ; preds = %header-check-br2217
  %821 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %822 = invoke {}* @cc_safe_fdefinition({}* %821)
          to label %normal-dest2927 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2227:                                  ; preds = %tag286
  %823 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %824 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %825 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %826 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint2228 = ptrtoint {}* %256 to i64
  %entry-point-addr-uint2229 = add i64 %ptrtoint2228, 7
  %entry-point-addr2230 = inttoptr i64 %entry-point-addr-uint2229 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2231 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2230, align 8
  %827 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2231({}* %256, i64 5, {}* %823, {}* %824, {}* %x881.0, {}* %825, {}* %826)
          to label %normal-dest2234 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2234:                                  ; preds = %normal-dest2227
  %.elt4051 = extractvalue { {}*, i64 } %827, 0
  %.elt4053 = extractvalue { {}*, i64 } %827, 1
  %cond3773 = icmp eq i64 %.elt4053, 0
  %828 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147722.1 = select i1 %cond3773, {}* %828, {}* %.elt4051
  br label %tag277

normal-dest2241:                                  ; preds = %tag287
  %ptrtoint2242 = ptrtoint {}* %258 to i64
  %entry-point-addr-uint2243 = add i64 %ptrtoint2242, 7
  %entry-point-addr2244 = inttoptr i64 %entry-point-addr-uint2243 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2245 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2244, align 8
  %829 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2245({}* %258, i64 2, {}* %LENGTH.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest2248 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

normal-dest2248:                                  ; preds = %normal-dest2241
  %.elt4143 = extractvalue { {}*, i64 } %829, 0
  %.elt4145 = extractvalue { {}*, i64 } %829, 1
  %cond3789 = icmp eq i64 %.elt4145, 0
  %830 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %LENGTH.2 = select i1 %cond3789, {}* %830, {}* %.elt4143
  br label %tag352.outer.backedge

header-check-br2254:                              ; preds = %header-check-br1977
  %.off4797 = add i64 %778, -1001
  %831 = icmp ult i64 %.off4797, 5
  br i1 %831, label %maybe-more-tests2262, label %tag70

maybe-more-tests2262:                             ; preds = %header-check-br2254
  %832 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %833 = invoke {}* @cc_safe_fdefinition({}* %832)
          to label %normal-dest1048 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2264:                                  ; preds = %tag293
  %834 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %835 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %836 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %837 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint2265 = ptrtoint {}* %263 to i64
  %entry-point-addr-uint2266 = add i64 %ptrtoint2265, 7
  %entry-point-addr2267 = inttoptr i64 %entry-point-addr-uint2266 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2268 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2267, align 8
  %838 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2268({}* %263, i64 5, {}* %834, {}* %835, {}* %.in4287, {}* %836, {}* %837)
          to label %normal-dest2271 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2271:                                  ; preds = %normal-dest2264
  %.elt4384 = extractvalue { {}*, i64 } %838, 0
  %.elt4386 = extractvalue { {}*, i64 } %838, 1
  %cond3834 = icmp eq i64 %.elt4386, 0
  %839 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148018.1 = select i1 %cond3834, {}* %839, {}* %.elt4384
  br label %tag18

normal-dest2283:                                  ; preds = %tag298
  %840 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 149), align 8
  %841 = invoke {}* @cc_safe_fdefinition({}* %840)
          to label %normal-dest2289 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2289:                                  ; preds = %normal-dest2283
  %ptrtoint2290 = ptrtoint {}* %841 to i64
  %entry-point-addr-uint2291 = add i64 %ptrtoint2290, 7
  %entry-point-addr2292 = inttoptr i64 %entry-point-addr-uint2291 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2293 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2292, align 8
  %842 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2293({}* %841, i64 1, {}* %G146803.0, {}* null, {}* null, {}* null)
          to label %tag212 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2303:                                  ; preds = %tag308
  %843 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %844 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %845 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %846 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 199), align 8
  %ptrtoint2304 = ptrtoint {}* %268 to i64
  %entry-point-addr-uint2305 = add i64 %ptrtoint2304, 7
  %entry-point-addr2306 = inttoptr i64 %entry-point-addr-uint2305 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2307 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2306, align 8
  %847 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2307({}* %268, i64 5, {}* %843, {}* %844, {}* %"closure->LAMBDA1990", {}* %845, {}* %846)
          to label %normal-dest2310 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2310:                                  ; preds = %normal-dest2303
  %.elt4069 = extractvalue { {}*, i64 } %847, 0
  %.elt4071 = extractvalue { {}*, i64 } %847, 1
  %cond3777 = icmp eq i64 %.elt4071, 0
  %848 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147642.2 = select i1 %cond3777, {}* %848, {}* %.elt4069
  br label %tag92

header-check-br2316:                              ; preds = %tag313
  %irc-bit-cast2320 = bitcast {}* %"closure->LAMBDA3552" to i8*
  %gep2321 = getelementptr inbounds i8, i8* %irc-bit-cast2320, i64 -9
  %irc-bit-cast2322 = bitcast i8* %gep2321 to i64*
  %849 = load i64, i64* %irc-bit-cast2322, align 8
  %.off4770 = add i64 %849, -913
  %850 = icmp ult i64 %.off4770, 85
  br i1 %850, label %tag464, label %header-check-br1147

header-check-br2331:                              ; preds = %header-check-br1590
  %.off4913 = add i64 %702, -1001
  %851 = icmp ult i64 %.off4913, 5
  br i1 %851, label %maybe-more-tests2339, label %tag343

maybe-more-tests2339:                             ; preds = %header-check-br2331
  %852 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %853 = invoke {}* @cc_safe_fdefinition({}* %852)
          to label %normal-dest1527 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2341:                                  ; preds = %maybe-more-tests1722
  %ptrtoint2342 = ptrtoint {}* %731 to i64
  %entry-point-addr-uint2343 = add i64 %ptrtoint2342, 7
  %entry-point-addr2344 = inttoptr i64 %entry-point-addr-uint2343 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2345 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2344, align 8
  %854 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2345({}* %731, i64 1, {}* nonnull %"closure->LAMBDA3652", {}* null, {}* null, {}* null)
          to label %normal-dest2348 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2348:                                  ; preds = %normal-dest2341
  %.elt4248 = extractvalue { {}*, i64 } %854, 0
  %.elt4250 = extractvalue { {}*, i64 } %854, 1
  %cond3808 = icmp eq i64 %.elt4250, 0
  %855 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147210.1 = select i1 %cond3808, {}* %855, {}* %.elt4248
  br label %tag141

header-check-br2354:                              ; preds = %tag320
  %irc-bit-cast2358 = bitcast {}* %"closure->LAMBDA3590" to i8*
  %gep2359 = getelementptr inbounds i8, i8* %irc-bit-cast2358, i64 -9
  %irc-bit-cast2360 = bitcast i8* %gep2359 to i64*
  %856 = load i64, i64* %irc-bit-cast2360, align 8
  %.off4914 = add i64 %856, -913
  %857 = icmp ult i64 %.off4914, 85
  br i1 %857, label %tag127, label %header-check-br3542

header-check-br2363:                              ; preds = %header-check-br2453
  %.off4873 = add i64 %877, -1153
  %858 = icmp ult i64 %.off4873, 149
  br i1 %858, label %maybe-more-tests2371, label %tag223

maybe-more-tests2371:                             ; preds = %header-check-br2363
  %859 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 232), align 16
  %860 = invoke {}* @cc_safe_fdefinition({}* %859)
          to label %normal-dest2143 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2373:                                  ; preds = %tag323
  %ptrtoint2374 = ptrtoint {}* %273 to i64
  %entry-point-addr-uint2375 = add i64 %ptrtoint2374, 7
  %entry-point-addr2376 = inttoptr i64 %entry-point-addr-uint2375 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2377 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2376, align 8
  %861 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2377({}* %273, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest2380 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2380:                                  ; preds = %normal-dest2373
  %.elt4226 = extractvalue { {}*, i64 } %861, 0
  %.elt4228 = extractvalue { {}*, i64 } %861, 1
  %cond3804 = icmp eq i64 %.elt4228, 0
  %862 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %OUT1468291447.0 = select i1 %cond3804, {}* %862, {}* %.elt4226
  %ptrtoint2387 = ptrtoint {}* %"closure->LAMBDA3652" to i64
  %tag-only2388 = and i64 %ptrtoint2387, 7
  %test2389 = icmp eq i64 %tag-only2388, 1
  br i1 %test2389, label %header-check-br2386, label %tag489

header-check-br2386:                              ; preds = %normal-dest2380
  %irc-bit-cast2390 = bitcast {}* %"closure->LAMBDA3652" to i8*
  %gep2391 = getelementptr inbounds i8, i8* %irc-bit-cast2390, i64 -9
  %irc-bit-cast2392 = bitcast i8* %gep2391 to i64*
  %863 = load i64, i64* %irc-bit-cast2392, align 8
  %.off4860 = add i64 %863, -913
  %864 = icmp ult i64 %.off4860, 85
  br i1 %864, label %tag141, label %header-check-br1714

normal-dest2416:                                  ; preds = %tag330
  %865 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %866 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %867 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %868 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint2417 = ptrtoint {}* %276 to i64
  %entry-point-addr-uint2418 = add i64 %ptrtoint2417, 7
  %entry-point-addr2419 = inttoptr i64 %entry-point-addr-uint2418 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2420 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2419, align 8
  %869 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2420({}* %276, i64 5, {}* %865, {}* %866, {}* %x1653.0, {}* %867, {}* %868)
          to label %normal-dest2423 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2423:                                  ; preds = %normal-dest2416
  %.elt4262 = extractvalue { {}*, i64 } %869, 0
  %.elt4264 = extractvalue { {}*, i64 } %869, 1
  %cond3810 = icmp eq i64 %.elt4264, 0
  %870 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147161.1 = select i1 %cond3810, {}* %870, {}* %.elt4262
  br label %tag514

normal-dest2436:                                  ; preds = %tag334
  %871 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %872 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %873 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %874 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 207), align 8
  %ptrtoint2437 = ptrtoint {}* %283 to i64
  %entry-point-addr-uint2438 = add i64 %ptrtoint2437, 7
  %entry-point-addr2439 = inttoptr i64 %entry-point-addr-uint2438 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2440 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2439, align 8
  %875 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2440({}* %283, i64 5, {}* %871, {}* %872, {}* %"closure->LAMBDA1861", {}* %873, {}* %874)
          to label %normal-dest2443 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2443:                                  ; preds = %normal-dest2436
  %.elt3957 = extractvalue { {}*, i64 } %875, 0
  %.elt3959 = extractvalue { {}*, i64 } %875, 1
  %cond3756 = icmp eq i64 %.elt3959, 0
  %876 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147072.1 = select i1 %cond3756, {}* %876, {}* %.elt3957
  br label %tag379

header-check-br2453:                              ; preds = %tag340
  %gep2458 = getelementptr inbounds i8, i8* %397, i64 -9
  %irc-bit-cast2459 = bitcast i8* %gep2458 to i64*
  %877 = load i64, i64* %irc-bit-cast2459, align 8
  %.off4872 = add i64 %877, -1081
  %878 = icmp ult i64 %.off4872, 69
  br i1 %878, label %tag57, label %header-check-br2363

normal-dest2463:                                  ; preds = %tag342
  %ptrtoint2464 = ptrtoint {}* %296 to i64
  %entry-point-addr-uint2465 = add i64 %ptrtoint2464, 7
  %entry-point-addr2466 = inttoptr i64 %entry-point-addr-uint2465 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2467 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2466, align 8
  %879 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2467({}* %296, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest2470 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2470:                                  ; preds = %normal-dest2463
  %.elt3865 = extractvalue { {}*, i64 } %879, 0
  %.elt3867 = extractvalue { {}*, i64 } %879, 1
  %cond3741 = icmp eq i64 %.elt3867, 0
  %880 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %.in4286 = select i1 %cond3741, {}* %880, {}* %.elt3865
  br label %tag480

normal-dest2477:                                  ; preds = %tag343
  %881 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %882 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %883 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %884 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 215), align 8
  %ptrtoint2478 = ptrtoint {}* %298 to i64
  %entry-point-addr-uint2479 = add i64 %ptrtoint2478, 7
  %entry-point-addr2480 = inttoptr i64 %entry-point-addr-uint2479 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2481 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2480, align 8
  %885 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2481({}* %298, i64 5, {}* %881, {}* %882, {}* %"closure->LAMBDA3590", {}* %883, {}* %884)
          to label %normal-dest2484 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2484:                                  ; preds = %normal-dest2477
  %.elt4435 = extractvalue { {}*, i64 } %885, 0
  %.elt4437 = extractvalue { {}*, i64 } %885, 1
  %cond3843 = icmp eq i64 %.elt4437, 0
  %886 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146926.2 = select i1 %cond3843, {}* %886, {}* %.elt4435
  br label %tag33

normal-dest2496:                                  ; preds = %tag346
  %887 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %888 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %889 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %890 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 214), align 16
  %ptrtoint2497 = ptrtoint {}* %300 to i64
  %entry-point-addr-uint2498 = add i64 %ptrtoint2497, 7
  %entry-point-addr2499 = inttoptr i64 %entry-point-addr-uint2498 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2500 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2499, align 8
  %891 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2500({}* %300, i64 5, {}* %887, {}* %888, {}* %"closure->LAMBDA3590", {}* %889, {}* %890)
          to label %normal-dest2503 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2503:                                  ; preds = %normal-dest2496
  %.elt4447 = extractvalue { {}*, i64 } %891, 0
  %.elt4449 = extractvalue { {}*, i64 } %891, 1
  %cond3845 = icmp eq i64 %.elt4449, 0
  %892 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146911.2 = select i1 %cond3845, {}* %892, {}* %.elt4447
  br label %tag127

normal-dest2510:                                  ; preds = %tag350
  %893 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %894 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %895 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %896 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 197), align 8
  %ptrtoint2511 = ptrtoint {}* %302 to i64
  %entry-point-addr-uint2512 = add i64 %ptrtoint2511, 7
  %entry-point-addr2513 = inttoptr i64 %entry-point-addr-uint2512 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2514 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2513, align 8
  %897 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2514({}* %302, i64 5, {}* %893, {}* %894, {}* %"closure->LAMBDA1990", {}* %895, {}* %896)
          to label %normal-dest2517 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2517:                                  ; preds = %normal-dest2510
  %.elt4109 = extractvalue { {}*, i64 } %897, 0
  %.elt4111 = extractvalue { {}*, i64 } %897, 1
  %cond3784 = icmp eq i64 %.elt4111, 0
  %898 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147593.1 = select i1 %cond3784, {}* %898, {}* %.elt4109
  br label %tag230

header-check-br2527:                              ; preds = %header-check-br3023
  %.off4815 = add i64 %1009, -1001
  %899 = icmp ult i64 %.off4815, 5
  br i1 %899, label %maybe-more-tests2535, label %tag20

maybe-more-tests2535:                             ; preds = %header-check-br2527
  %900 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %901 = invoke {}* @cc_safe_fdefinition({}* %900)
          to label %normal-dest3123 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2537:                                  ; preds = %maybe-more-tests2821
  %ptrtoint2538 = ptrtoint {}* %964 to i64
  %entry-point-addr-uint2539 = add i64 %ptrtoint2538, 7
  %entry-point-addr2540 = inttoptr i64 %entry-point-addr-uint2539 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2541 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2540, align 8
  %902 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2541({}* %964, i64 1, {}* nonnull %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest2544 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2544:                                  ; preds = %normal-dest2537
  %.elt4515 = extractvalue { {}*, i64 } %902, 0
  %.elt4517 = extractvalue { {}*, i64 } %902, 1
  %cond3857 = icmp eq i64 %.elt4517, 0
  %903 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148206.1 = select i1 %cond3857, {}* %903, {}* %.elt4515
  br label %tag164

header-check-br2550:                              ; preds = %header-check-br1132
  %.off4907 = add i64 %613, -1001
  %904 = icmp ult i64 %.off4907, 5
  br i1 %904, label %maybe-more-tests2558, label %tag501

maybe-more-tests2558:                             ; preds = %header-check-br2550
  %905 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %906 = invoke {}* @cc_safe_fdefinition({}* %905)
          to label %normal-dest1867 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2573:                                  ; preds = %tag364
  %907 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %908 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %909 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %910 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint2574 = ptrtoint {}* %306 to i64
  %entry-point-addr-uint2575 = add i64 %ptrtoint2574, 7
  %entry-point-addr2576 = inttoptr i64 %entry-point-addr-uint2575 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2577 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2576, align 8
  %911 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2577({}* %306, i64 5, {}* %907, {}* %908, {}* %.in4287, {}* %909, {}* %910)
          to label %normal-dest2580 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2580:                                  ; preds = %normal-dest2573
  %.elt4184 = extractvalue { {}*, i64 } %911, 0
  %.elt4186 = extractvalue { {}*, i64 } %911, 1
  %cond3796 = icmp eq i64 %.elt4186, 0
  %912 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x689.1 = select i1 %cond3796, {}* %912, {}* %.elt4184
  br label %tag13

header-check-br2586:                              ; preds = %tag365
  %irc-bit-cast2590 = bitcast {}* %"closure->LAMBDA2860" to i8*
  %gep2591 = getelementptr inbounds i8, i8* %irc-bit-cast2590, i64 -9
  %irc-bit-cast2592 = bitcast i8* %gep2591 to i64*
  %913 = load i64, i64* %irc-bit-cast2592, align 8
  %.off4882 = add i64 %913, -913
  %914 = icmp ult i64 %.off4882, 85
  br i1 %914, label %tag227, label %header-check-br3136

normal-dest2602:                                  ; preds = %tag369
  %915 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %916 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %917 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %918 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 216), align 16
  %ptrtoint2603 = ptrtoint {}* %310 to i64
  %entry-point-addr-uint2604 = add i64 %ptrtoint2603, 7
  %entry-point-addr2605 = inttoptr i64 %entry-point-addr-uint2604 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2606 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2605, align 8
  %919 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2606({}* %310, i64 5, {}* %915, {}* %916, {}* %"closure->LAMBDA3590", {}* %917, {}* %918)
          to label %normal-dest2609 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2609:                                  ; preds = %normal-dest2602
  %.elt4411 = extractvalue { {}*, i64 } %919, 0
  %.elt4413 = extractvalue { {}*, i64 } %919, 1
  %cond3839 = icmp eq i64 %.elt4413, 0
  %920 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146951.1 = select i1 %cond3839, {}* %920, {}* %.elt4411
  br label %tag216

normal-dest2621:                                  ; preds = %tag371
  %921 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %922 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %923 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %924 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint2622 = ptrtoint {}* %313 to i64
  %entry-point-addr-uint2623 = add i64 %ptrtoint2622, 7
  %entry-point-addr2624 = inttoptr i64 %entry-point-addr-uint2623 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2625 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2624, align 8
  %925 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2625({}* %313, i64 5, {}* %921, {}* %922, {}* %.in4287, {}* %923, {}* %924)
          to label %normal-dest2628 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2628:                                  ; preds = %normal-dest2621
  %.elt4367 = extractvalue { {}*, i64 } %925, 0
  %.elt4369 = extractvalue { {}*, i64 } %925, 1
  %cond3831 = icmp eq i64 %.elt4369, 0
  %926 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148053.1 = select i1 %cond3831, {}* %926, {}* %.elt4367
  br label %tag509

normal-dest2635:                                  ; preds = %tag372
  %ptrtoint2636 = ptrtoint {}* %315 to i64
  %entry-point-addr-uint2637 = add i64 %ptrtoint2636, 7
  %entry-point-addr2638 = inttoptr i64 %entry-point-addr-uint2637 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2639 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2638, align 8
  %927 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2639({}* %315, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest2642 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2642:                                  ; preds = %normal-dest2635
  %.elt4427 = extractvalue { {}*, i64 } %927, 0
  %.elt4429 = extractvalue { {}*, i64 } %927, 1
  %cond3841 = icmp eq i64 %.elt4429, 0
  %928 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146943.0 = select i1 %cond3841, {}* %928, {}* %.elt4427
  %929 = icmp eq {}* %G146943.0, %928
  br i1 %929, label %tag320, label %tag160

header-check-br2649:                              ; preds = %header-check-br1194
  %.off4765 = add i64 %623, -1001
  %930 = icmp ult i64 %.off4765, 5
  br i1 %930, label %maybe-more-tests2657, label %tag136

maybe-more-tests2657:                             ; preds = %header-check-br2649
  %931 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %932 = invoke {}* @cc_safe_fdefinition({}* %931)
          to label %normal-dest3516 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2659:                                  ; preds = %tag377
  %933 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 172), align 16
  %ptrtoint2660 = ptrtoint {}* %320 to i64
  %entry-point-addr-uint2661 = add i64 %ptrtoint2660, 7
  %entry-point-addr2662 = inttoptr i64 %entry-point-addr-uint2661 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2663 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2662, align 8
  %934 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2663({}* %320, i64 2, {}* %.in4287, {}* %933, {}* null, {}* null)
          to label %normal-dest2666 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2666:                                  ; preds = %normal-dest2659
  %.elt4282 = extractvalue { {}*, i64 } %934, 0
  %.elt4284 = extractvalue { {}*, i64 } %934, 1
  %cond3814 = icmp eq i64 %.elt4284, 0
  %935 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x981.1 = select i1 %cond3814, {}* %935, {}* %.elt4282
  br label %tag414

normal-dest2673:                                  ; preds = %tag378
  %ptrtoint2674 = ptrtoint {}* %322 to i64
  %entry-point-addr-uint2675 = add i64 %ptrtoint2674, 7
  %entry-point-addr2676 = inttoptr i64 %entry-point-addr-uint2675 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2677 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2676, align 8
  %936 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2677({}* %322, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest2680 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2680:                                  ; preds = %normal-dest2673
  %.elt4015 = extractvalue { {}*, i64 } %936, 0
  %.elt4017 = extractvalue { {}*, i64 } %936, 1
  %cond3767 = icmp eq i64 %.elt4017, 0
  %937 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %OUT1467952409.0 = select i1 %cond3767, {}* %937, {}* %.elt4015
  %ptrtoint2687 = ptrtoint {}* %"closure->LAMBDA3552" to i64
  %tag-only2688 = and i64 %ptrtoint2687, 7
  %test2689 = icmp eq i64 %tag-only2688, 1
  br i1 %test2689, label %header-check-br2686, label %tag471

header-check-br2686:                              ; preds = %normal-dest2680
  %irc-bit-cast2690 = bitcast {}* %"closure->LAMBDA3552" to i8*
  %gep2691 = getelementptr inbounds i8, i8* %irc-bit-cast2690, i64 -9
  %irc-bit-cast2692 = bitcast i8* %gep2691 to i64*
  %938 = load i64, i64* %irc-bit-cast2692, align 8
  %.off4788 = add i64 %938, -913
  %939 = icmp ult i64 %.off4788, 85
  br i1 %939, label %tag329, label %header-check-br

normal-dest2707:                                  ; preds = %tag386
  %940 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %941 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %942 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %943 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint2708 = ptrtoint {}* %325 to i64
  %entry-point-addr-uint2709 = add i64 %ptrtoint2708, 7
  %entry-point-addr2710 = inttoptr i64 %entry-point-addr-uint2709 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2711 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2710, align 8
  %944 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2711({}* %325, i64 5, {}* %940, {}* %941, {}* %.in4287, {}* %942, {}* %943)
          to label %normal-dest2714 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2714:                                  ; preds = %normal-dest2707
  %.elt4214 = extractvalue { {}*, i64 } %944, 0
  %.elt4216 = extractvalue { {}*, i64 } %944, 1
  %cond3801 = icmp eq i64 %.elt4216, 0
  %945 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x864.1 = select i1 %cond3801, {}* %945, {}* %.elt4214
  br label %tag43

normal-dest2721:                                  ; preds = %maybe-more-tests1511
  %ptrtoint2722 = ptrtoint {}* %688 to i64
  %entry-point-addr-uint2723 = add i64 %ptrtoint2722, 7
  %entry-point-addr2724 = inttoptr i64 %entry-point-addr-uint2723 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2725 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2724, align 8
  %946 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2725({}* %688, i64 1, {}* nonnull %"closure->LAMBDA1861", {}* null, {}* null, {}* null)
          to label %normal-dest2728 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2728:                                  ; preds = %normal-dest2721
  %.elt3913 = extractvalue { {}*, i64 } %946, 0
  %.elt3915 = extractvalue { {}*, i64 } %946, 1
  %cond3748 = icmp eq i64 %.elt3915, 0
  %947 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147133.1 = select i1 %cond3748, {}* %947, {}* %.elt3913
  br label %tag548

normal-dest2741:                                  ; preds = %tag390
  %948 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 173), align 8
  %ptrtoint2742 = ptrtoint {}* %329 to i64
  %entry-point-addr-uint2743 = add i64 %ptrtoint2742, 7
  %entry-point-addr2744 = inttoptr i64 %entry-point-addr-uint2743 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2745 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2744, align 8
  %949 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2745({}* %329, i64 2, {}* %G2095854.0, {}* %948, {}* null, {}* null)
          to label %tag352 unwind label %cleanup-lpad.loopexit.loopexit

normal-dest2754:                                  ; preds = %tag391
  %950 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %951 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %952 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %953 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint2755 = ptrtoint {}* %331 to i64
  %entry-point-addr-uint2756 = add i64 %ptrtoint2755, 7
  %entry-point-addr2757 = inttoptr i64 %entry-point-addr-uint2756 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2758 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2757, align 8
  %954 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2758({}* %331, i64 5, {}* %950, {}* %951, {}* %.in4287, {}* %952, {}* %953)
          to label %normal-dest2761 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2761:                                  ; preds = %normal-dest2754
  %.elt4317 = extractvalue { {}*, i64 } %954, 0
  %.elt4319 = extractvalue { {}*, i64 } %954, 1
  %cond3822 = icmp eq i64 %.elt4319, 0
  %955 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148142.1 = select i1 %cond3822, {}* %955, {}* %.elt4317
  br label %tag274

normal-dest2770:                                  ; preds = %tag396
  %956 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %957 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %958 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %959 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 189), align 8
  %ptrtoint2771 = ptrtoint {}* %334 to i64
  %entry-point-addr-uint2772 = add i64 %ptrtoint2771, 7
  %entry-point-addr2773 = inttoptr i64 %entry-point-addr-uint2772 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2774 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2773, align 8
  %960 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2774({}* %334, i64 5, {}* %956, {}* %957, {}* %"closure->LAMBDA3652", {}* %958, {}* %959)
          to label %normal-dest2777 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2777:                                  ; preds = %normal-dest2770
  %.elt4196 = extractvalue { {}*, i64 } %960, 0
  %.elt4198 = extractvalue { {}*, i64 } %960, 1
  %cond3799 = icmp eq i64 %.elt4198, 0
  %961 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147272.2 = select i1 %cond3799, {}* %961, {}* %.elt4196
  br label %tag370

header-check-br2813:                              ; preds = %header-check-br3449
  %.off4925 = add i64 %1105, -1001
  %962 = icmp ult i64 %.off4925, 5
  br i1 %962, label %maybe-more-tests2821, label %tag442

maybe-more-tests2821:                             ; preds = %header-check-br2813
  %963 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %964 = invoke {}* @cc_safe_fdefinition({}* %963)
          to label %normal-dest2537 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2830:                                  ; preds = %tag408
  %965 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %966 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %967 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %968 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint2831 = ptrtoint {}* %346 to i64
  %entry-point-addr-uint2832 = add i64 %ptrtoint2831, 7
  %entry-point-addr2833 = inttoptr i64 %entry-point-addr-uint2832 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2834 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2833, align 8
  %969 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2834({}* %346, i64 5, {}* %965, {}* %966, {}* %.in4287, {}* %967, {}* %968)
          to label %normal-dest2837 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2837:                                  ; preds = %normal-dest2830
  %.elt3909 = extractvalue { {}*, i64 } %969, 0
  %.elt3911 = extractvalue { {}*, i64 } %969, 1
  %cond3747 = icmp eq i64 %.elt3911, 0
  %970 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x759.1 = select i1 %cond3747, {}* %970, {}* %.elt3909
  br label %tag605

normal-dest2844:                                  ; preds = %tag409
  %971 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %972 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %973 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %974 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint2845 = ptrtoint {}* %348 to i64
  %entry-point-addr-uint2846 = add i64 %ptrtoint2845, 7
  %entry-point-addr2847 = inttoptr i64 %entry-point-addr-uint2846 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2848 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2847, align 8
  %975 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2848({}* %348, i64 5, {}* %971, {}* %972, {}* %.in4287, {}* %973, {}* %974)
          to label %normal-dest2851 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2851:                                  ; preds = %normal-dest2844
  %.elt3973 = extractvalue { {}*, i64 } %975, 0
  %.elt3975 = extractvalue { {}*, i64 } %975, 1
  %cond3759 = icmp eq i64 %.elt3975, 0
  %976 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x1906.1 = select i1 %cond3759, {}* %976, {}* %.elt3973
  br label %tag218

normal-dest2859:                                  ; preds = %tag413
  %977 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %978 = icmp eq {}* %stream.0, %977
  %.val4740 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148176.0 = select i1 %978, {}* %977, {}* %.val4740
  %979 = icmp eq {}* %G148176.0, %.val4740
  br i1 %979, label %tag137, label %tag365

normal-dest2875:                                  ; preds = %tag422
  %ptrtoint2876 = ptrtoint {}* %358 to i64
  %entry-point-addr-uint2877 = add i64 %ptrtoint2876, 7
  %entry-point-addr2878 = inttoptr i64 %entry-point-addr-uint2877 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2879 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2878, align 8
  %980 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2879({}* %358, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest2882 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2882:                                  ; preds = %normal-dest2875
  %.elt4222 = extractvalue { {}*, i64 } %980, 0
  %.elt4224 = extractvalue { {}*, i64 } %980, 1
  %cond3803 = icmp eq i64 %.elt4224, 0
  %981 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147264.0 = select i1 %cond3803, {}* %981, {}* %.elt4222
  %982 = icmp eq {}* %G147264.0, %981
  br i1 %982, label %tag249, label %tag323

normal-dest2889:                                  ; preds = %maybe-more-tests1731
  %ptrtoint2890 = ptrtoint {}* %734 to i64
  %entry-point-addr-uint2891 = add i64 %ptrtoint2890, 7
  %entry-point-addr2892 = inttoptr i64 %entry-point-addr-uint2891 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2893 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2892, align 8
  %983 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2893({}* %734, i64 1, {}* nonnull %"closure->LAMBDA3652", {}* null, {}* null, {}* null)
          to label %normal-dest2896 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2896:                                  ; preds = %normal-dest2889
  %.elt4270 = extractvalue { {}*, i64 } %983, 0
  %.elt4272 = extractvalue { {}*, i64 } %983, 1
  %cond3812 = icmp eq i64 %.elt4272, 0
  %984 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147159.2 = select i1 %cond3812, {}* %984, {}* %.elt4270
  br label %tag581

header-check-br2902:                              ; preds = %header-check-br3375
  %.off4807 = add i64 %1093, -1001
  %985 = icmp ult i64 %.off4807, 5
  br i1 %985, label %maybe-more-tests2910, label %tag308

maybe-more-tests2910:                             ; preds = %header-check-br2902
  %986 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %987 = invoke {}* @cc_safe_fdefinition({}* %986)
          to label %normal-dest932 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

header-check-br2911:                              ; preds = %tag426
  %irc-bit-cast2915 = bitcast {}* %"closure->LAMBDA1861" to i8*
  %gep2916 = getelementptr inbounds i8, i8* %irc-bit-cast2915, i64 -9
  %irc-bit-cast2917 = bitcast i8* %gep2916 to i64*
  %988 = load i64, i64* %irc-bit-cast2917, align 8
  %.off4766 = add i64 %988, -913
  %989 = icmp ult i64 %.off4766, 85
  br i1 %989, label %tag379, label %header-check-br1365

normal-dest2927:                                  ; preds = %maybe-more-tests2225
  %ptrtoint2928 = ptrtoint {}* %822 to i64
  %entry-point-addr-uint2929 = add i64 %ptrtoint2928, 7
  %entry-point-addr2930 = inttoptr i64 %entry-point-addr-uint2929 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2931 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2930, align 8
  %990 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2931({}* %822, i64 1, {}* nonnull %"closure->LAMBDA1990", {}* null, {}* null, {}* null)
          to label %normal-dest2934 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2934:                                  ; preds = %normal-dest2927
  %.elt4117 = extractvalue { {}*, i64 } %990, 0
  %.elt4119 = extractvalue { {}*, i64 } %990, 1
  %cond3785 = icmp eq i64 %.elt4119, 0
  %991 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147593.2 = select i1 %cond3785, {}* %991, {}* %.elt4117
  br label %tag230

normal-dest2941:                                  ; preds = %maybe-more-tests1373
  %ptrtoint2942 = ptrtoint {}* %657 to i64
  %entry-point-addr-uint2943 = add i64 %ptrtoint2942, 7
  %entry-point-addr2944 = inttoptr i64 %entry-point-addr-uint2943 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2945 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2944, align 8
  %992 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2945({}* %657, i64 1, {}* nonnull %"closure->LAMBDA1861", {}* null, {}* null, {}* null)
          to label %normal-dest2948 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2948:                                  ; preds = %normal-dest2941
  %.elt3965 = extractvalue { {}*, i64 } %992, 0
  %.elt3967 = extractvalue { {}*, i64 } %992, 1
  %cond3757 = icmp eq i64 %.elt3967, 0
  %993 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147072.2 = select i1 %cond3757, {}* %993, {}* %.elt3965
  br label %tag379

normal-dest2955:                                  ; preds = %tag442
  %994 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %995 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %996 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %997 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 142), align 16
  %ptrtoint2956 = ptrtoint {}* %367 to i64
  %entry-point-addr-uint2957 = add i64 %ptrtoint2956, 7
  %entry-point-addr2958 = inttoptr i64 %entry-point-addr-uint2957 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2959 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2958, align 8
  %998 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2959({}* %367, i64 5, {}* %994, {}* %995, {}* %"closure->LAMBDA", {}* %996, {}* %997)
          to label %normal-dest2962 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2962:                                  ; preds = %normal-dest2955
  %.elt4507 = extractvalue { {}*, i64 } %998, 0
  %.elt4509 = extractvalue { {}*, i64 } %998, 1
  %cond3856 = icmp eq i64 %.elt4509, 0
  %999 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148206.2 = select i1 %cond3856, {}* %999, {}* %.elt4507
  br label %tag164

normal-dest2969:                                  ; preds = %tag446
  %1000 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %1001 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %1002 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %1003 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 210), align 16
  %ptrtoint2970 = ptrtoint {}* %369 to i64
  %entry-point-addr-uint2971 = add i64 %ptrtoint2970, 7
  %entry-point-addr2972 = inttoptr i64 %entry-point-addr-uint2971 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2973 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2972, align 8
  %1004 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2973({}* %369, i64 5, {}* %1000, {}* %1001, {}* %"closure->LAMBDA1861", {}* %1002, {}* %1003)
          to label %normal-dest2976 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest2976:                                  ; preds = %normal-dest2969
  %.elt3895 = extractvalue { {}*, i64 } %1004, 0
  %.elt3897 = extractvalue { {}*, i64 } %1004, 1
  %cond3745 = icmp eq i64 %.elt3897, 0
  %1005 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147133.2 = select i1 %cond3745, {}* %1005, {}* %.elt3895
  br label %tag548

normal-dest3005:                                  ; preds = %tag451
  %1006 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 149), align 8
  %1007 = invoke {}* @cc_safe_fdefinition({}* %1006)
          to label %normal-dest3011 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest3011:                                  ; preds = %normal-dest3005
  %ptrtoint3012 = ptrtoint {}* %1007 to i64
  %entry-point-addr-uint3013 = add i64 %ptrtoint3012, 7
  %entry-point-addr3014 = inttoptr i64 %entry-point-addr-uint3013 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3015 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3014, align 8
  %1008 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3015({}* %1007, i64 1, {}* %G146766.0, {}* null, {}* null, {}* null)
          to label %tag342 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

header-check-br3023:                              ; preds = %tag453
  %irc-bit-cast3027 = bitcast {}* %"closure->LAMBDA1990" to i8*
  %gep3028 = getelementptr inbounds i8, i8* %irc-bit-cast3027, i64 -9
  %irc-bit-cast3029 = bitcast i8* %gep3028 to i64*
  %1009 = load i64, i64* %irc-bit-cast3029, align 8
  %.off4814 = add i64 %1009, -913
  %1010 = icmp ult i64 %.off4814, 85
  br i1 %1010, label %tag399, label %header-check-br2527

normal-dest3033:                                  ; preds = %tag454
  %1011 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %1012 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %1013 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %1014 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint3034 = ptrtoint {}* %375 to i64
  %entry-point-addr-uint3035 = add i64 %ptrtoint3034, 7
  %entry-point-addr3036 = inttoptr i64 %entry-point-addr-uint3035 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3037 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3036, align 8
  %1015 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3037({}* %375, i64 5, {}* %1011, {}* %1012, {}* %.in4287, {}* %1013, {}* %1014)
          to label %normal-dest3040 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest3040:                                  ; preds = %normal-dest3033
  %.elt4459 = extractvalue { {}*, i64 } %1015, 0
  %.elt4461 = extractvalue { {}*, i64 } %1015, 1
  %cond3847 = icmp eq i64 %.elt4461, 0
  %1016 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %object.1 = select i1 %cond3847, {}* %1016, {}* %.elt4459
  br label %tag419

normal-dest3047:                                  ; preds = %tag456
  %ptrtoint3048 = ptrtoint {}* %377 to i64
  %entry-point-addr-uint3049 = add i64 %ptrtoint3048, 7
  %entry-point-addr3050 = inttoptr i64 %entry-point-addr-uint3049 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3051 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3050, align 8
  %1017 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3051({}* %377, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest3054 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest3054:                                  ; preds = %normal-dest3047
  %.elt3981 = extractvalue { {}*, i64 } %1017, 0
  %.elt3983 = extractvalue { {}*, i64 } %1017, 1
  %cond3761 = icmp eq i64 %.elt3983, 0
  %1018 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146803.0 = select i1 %cond3761, {}* %1018, {}* %.elt3981
  %ptrtoint3061 = ptrtoint {}* %"closure->LAMBDA3552" to i64
  %tag-only3062 = and i64 %ptrtoint3061, 7
  %test3063 = icmp eq i64 %tag-only3062, 1
  br i1 %test3063, label %header-check-br3060, label %tag560

header-check-br3060:                              ; preds = %normal-dest3054
  %irc-bit-cast3064 = bitcast {}* %"closure->LAMBDA3552" to i8*
  %gep3065 = getelementptr inbounds i8, i8* %irc-bit-cast3064, i64 -9
  %irc-bit-cast3066 = bitcast i8* %gep3065 to i64*
  %1019 = load i64, i64* %irc-bit-cast3066, align 8
  %.off4780 = add i64 %1019, -913
  %1020 = icmp ult i64 %.off4780, 85
  br i1 %1020, label %tag599, label %header-check-br1599

header-check-br3069:                              ; preds = %header-check-br996
  %.off4921 = add i64 %587, -1001
  %1021 = icmp ult i64 %.off4921, 5
  br i1 %1021, label %maybe-more-tests3077, label %tag110

maybe-more-tests3077:                             ; preds = %header-check-br3069
  %1022 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %1023 = invoke {}* @cc_safe_fdefinition({}* %1022)
          to label %normal-dest1022 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest3079:                                  ; preds = %tag461
  %ptrtoint3080 = ptrtoint {}* %381 to i64
  %entry-point-addr-uint3081 = add i64 %ptrtoint3080, 7
  %entry-point-addr3082 = inttoptr i64 %entry-point-addr-uint3081 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3083 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3082, align 8
  %1024 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3083({}* %381, i64 1, {}* %G147683.0, {}* null, {}* null, {}* null)
          to label %normal-dest3086 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest3086:                                  ; preds = %normal-dest3079
  %.elt4065 = extractvalue { {}*, i64 } %1024, 0
  %.elt4067 = extractvalue { {}*, i64 } %1024, 1
  %cond3776 = icmp eq i64 %.elt4067, 0
  %1025 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148330.0 = select i1 %cond3776, {}* %1025, {}* %.elt4065
  %1026 = icmp eq {}* %G148330.0, %1025
  %.val4803 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G147681.0 = select i1 %1026, {}* %1025, {}* %.val4803
  %1027 = icmp eq {}* %G147681.0, %1025
  br i1 %1027, label %tag128, label %tag239

normal-dest3093:                                  ; preds = %tag462
  %ptrtoint3094 = ptrtoint {}* %383 to i64
  %entry-point-addr-uint3095 = add i64 %ptrtoint3094, 7
  %entry-point-addr3096 = inttoptr i64 %entry-point-addr-uint3095 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3097 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3096, align 8
  %1028 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3097({}* %383, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest3100 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest3100:                                  ; preds = %normal-dest3093
  %.elt4487 = extractvalue { {}*, i64 } %1028, 0
  %.elt4489 = extractvalue { {}*, i64 } %1028, 1
  %cond3852 = icmp eq i64 %.elt4489, 0
  %1029 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148239.0 = select i1 %cond3852, {}* %1029, {}* %.elt4487
  %1030 = icmp eq {}* %G148239.0, %1029
  br i1 %1030, label %tag535, label %tag592

header-check-br3106:                              ; preds = %tag463
  %irc-bit-cast3110 = bitcast {}* %"closure->LAMBDA3652" to i8*
  %gep3111 = getelementptr inbounds i8, i8* %irc-bit-cast3110, i64 -9
  %irc-bit-cast3112 = bitcast i8* %gep3111 to i64*
  %1031 = load i64, i64* %irc-bit-cast3112, align 8
  %.off4842 = add i64 %1031, -913
  %1032 = icmp ult i64 %.off4842, 85
  br i1 %1032, label %tag65, label %header-check-br3601

normal-dest3116:                                  ; preds = %tag464
  br i1 %consp-test3213, label %tag583, label %tag407

normal-dest3123:                                  ; preds = %maybe-more-tests2535
  %ptrtoint3124 = ptrtoint {}* %901 to i64
  %entry-point-addr-uint3125 = add i64 %ptrtoint3124, 7
  %entry-point-addr3126 = inttoptr i64 %entry-point-addr-uint3125 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3127 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3126, align 8
  %1033 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3127({}* %901, i64 1, {}* nonnull %"closure->LAMBDA1990", {}* null, {}* null, {}* null)
          to label %normal-dest3130 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest3130:                                  ; preds = %normal-dest3123
  %.elt4129 = extractvalue { {}*, i64 } %1033, 0
  %.elt4131 = extractvalue { {}*, i64 } %1033, 1
  %cond3787 = icmp eq i64 %.elt4131, 0
  %1034 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147578.2 = select i1 %cond3787, {}* %1034, {}* %.elt4129
  br label %tag399

header-check-br3136:                              ; preds = %header-check-br2586
  %.off4883 = add i64 %913, -1001
  %1035 = icmp ult i64 %.off4883, 5
  br i1 %1035, label %maybe-more-tests3144, label %tag202

maybe-more-tests3144:                             ; preds = %header-check-br3136
  %1036 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %1037 = invoke {}* @cc_safe_fdefinition({}* %1036)
          to label %normal-dest3278 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest3146:                                  ; preds = %tag469
  %ptrtoint3147 = ptrtoint {}* %387 to i64
  %entry-point-addr-uint3148 = add i64 %ptrtoint3147, 7
  %entry-point-addr3149 = inttoptr i64 %entry-point-addr-uint3148 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3150 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3149, align 8
  %1038 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3150({}* %387, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest3153 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest3153:                                  ; preds = %normal-dest3146
  %.elt4105 = extractvalue { {}*, i64 } %1038, 0
  %.elt4107 = extractvalue { {}*, i64 } %1038, 1
  %cond3783 = icmp eq i64 %.elt4107, 0
  %1039 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %OUT1468121965.0 = select i1 %cond3783, {}* %1039, {}* %.elt4105
  %ptrtoint3160 = ptrtoint {}* %"closure->LAMBDA1990" to i64
  %tag-only3161 = and i64 %ptrtoint3160, 7
  %test3162 = icmp eq i64 %tag-only3161, 1
  br i1 %test3162, label %header-check-br3159, label %tag350

header-check-br3159:                              ; preds = %normal-dest3153
  %irc-bit-cast3163 = bitcast {}* %"closure->LAMBDA1990" to i8*
  %gep3164 = getelementptr inbounds i8, i8* %irc-bit-cast3163, i64 -9
  %irc-bit-cast3165 = bitcast i8* %gep3164 to i64*
  %1040 = load i64, i64* %irc-bit-cast3165, align 8
  %.off4812 = add i64 %1040, -913
  %1041 = icmp ult i64 %.off4812, 85
  br i1 %1041, label %tag230, label %header-check-br2217

normal-dest3169:                                  ; preds = %tag471
  %1042 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %1043 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %1044 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %1045 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 204), align 16
  %ptrtoint3170 = ptrtoint {}* %389 to i64
  %entry-point-addr-uint3171 = add i64 %ptrtoint3170, 7
  %entry-point-addr3172 = inttoptr i64 %entry-point-addr-uint3171 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3173 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3172, align 8
  %1046 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3173({}* %389, i64 5, {}* %1042, {}* %1043, {}* %"closure->LAMBDA3552", {}* %1044, {}* %1045)
          to label %normal-dest3176 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest3176:                                  ; preds = %normal-dest3169
  %.elt4019 = extractvalue { {}*, i64 } %1046, 0
  %.elt4021 = extractvalue { {}*, i64 } %1046, 1
  %cond3768 = icmp eq i64 %.elt4021, 0
  %1047 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147771.2 = select i1 %cond3768, {}* %1047, {}* %.elt4019
  br label %tag329

normal-dest3185:                                  ; preds = %maybe-more-tests1279
  %ptrtoint3186 = ptrtoint {}* %642 to i64
  %entry-point-addr-uint3187 = add i64 %ptrtoint3186, 7
  %entry-point-addr3188 = inttoptr i64 %entry-point-addr-uint3187 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3189 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3188, align 8
  %1048 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3189({}* %642, i64 1, {}* nonnull %"closure->LAMBDA1861", {}* null, {}* null, {}* null)
          to label %normal-dest3192 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest3192:                                  ; preds = %normal-dest3185
  %.elt3933 = extractvalue { {}*, i64 } %1048, 0
  %.elt3935 = extractvalue { {}*, i64 } %1048, 1
  %cond3751 = icmp eq i64 %.elt3935, 0
  %1049 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147111.1 = select i1 %cond3751, {}* %1049, {}* %.elt3933
  br label %tag156

normal-dest3199:                                  ; preds = %tag479
  %1050 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %1051 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %1052 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %1053 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint3200 = ptrtoint {}* %396 to i64
  %entry-point-addr-uint3201 = add i64 %ptrtoint3200, 7
  %entry-point-addr3202 = inttoptr i64 %entry-point-addr-uint3201 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3203 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3202, align 8
  %1054 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3203({}* %396, i64 5, {}* %1050, {}* %1051, {}* %.in4287, {}* %1052, {}* %1053)
          to label %normal-dest3206 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest3206:                                  ; preds = %normal-dest3199
  %.elt4305 = extractvalue { {}*, i64 } %1054, 0
  %.elt4307 = extractvalue { {}*, i64 } %1054, 1
  %cond3819 = icmp eq i64 %.elt4307, 0
  %1055 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x757.1 = select i1 %cond3819, {}* %1055, {}* %.elt4305
  br label %tag336

normal-dest3221:                                  ; preds = %tag484
  br i1 %consp-test3213, label %tag8, label %tag536

normal-dest3228:                                  ; preds = %tag487
  %1056 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %1057 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %1058 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %1059 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint3229 = ptrtoint {}* %405 to i64
  %entry-point-addr-uint3230 = add i64 %ptrtoint3229, 7
  %entry-point-addr3231 = inttoptr i64 %entry-point-addr-uint3230 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3232 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3231, align 8
  %1060 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3232({}* %405, i64 5, {}* %1056, {}* %1057, {}* %x1546.0, {}* %1058, {}* %1059)
          to label %normal-dest3235 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest3235:                                  ; preds = %normal-dest3228
  %.elt4240 = extractvalue { {}*, i64 } %1060, 0
  %.elt4242 = extractvalue { {}*, i64 } %1060, 1
  %cond3806 = icmp eq i64 %.elt4242, 0
  %1061 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147212.1 = select i1 %cond3806, {}* %1061, {}* %.elt4240
  br label %tag195

normal-dest3242:                                  ; preds = %tag489
  %1062 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %1063 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %1064 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %1065 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 188), align 16
  %ptrtoint3243 = ptrtoint {}* %407 to i64
  %entry-point-addr-uint3244 = add i64 %ptrtoint3243, 7
  %entry-point-addr3245 = inttoptr i64 %entry-point-addr-uint3244 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3246 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3245, align 8
  %1066 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3246({}* %407, i64 5, {}* %1062, {}* %1063, {}* %"closure->LAMBDA3652", {}* %1064, {}* %1065)
          to label %normal-dest3249 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest3249:                                  ; preds = %normal-dest3242
  %.elt4230 = extractvalue { {}*, i64 } %1066, 0
  %.elt4232 = extractvalue { {}*, i64 } %1066, 1
  %cond3805 = icmp eq i64 %.elt4232, 0
  %1067 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147210.2 = select i1 %cond3805, {}* %1067, {}* %.elt4230
  br label %tag141

normal-dest3258:                                  ; preds = %tag495
  %1068 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %1069 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %1070 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %1071 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 209), align 8
  %ptrtoint3259 = ptrtoint {}* %409 to i64
  %entry-point-addr-uint3260 = add i64 %ptrtoint3259, 7
  %entry-point-addr3261 = inttoptr i64 %entry-point-addr-uint3260 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3262 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3261, align 8
  %1072 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3262({}* %409, i64 5, {}* %1068, {}* %1069, {}* %"closure->LAMBDA1861", {}* %1070, {}* %1071)
          to label %normal-dest3265 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest3265:                                  ; preds = %normal-dest3258
  %.elt3921 = extractvalue { {}*, i64 } %1072, 0
  %.elt3923 = extractvalue { {}*, i64 } %1072, 1
  %cond3750 = icmp eq i64 %.elt3923, 0
  %1073 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147111.2 = select i1 %cond3750, {}* %1073, {}* %.elt3921
  br label %tag156

normal-dest3278:                                  ; preds = %maybe-more-tests3144
  %ptrtoint3279 = ptrtoint {}* %1037 to i64
  %entry-point-addr-uint3280 = add i64 %ptrtoint3279, 7
  %entry-point-addr3281 = inttoptr i64 %entry-point-addr-uint3280 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3282 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3281, align 8
  %1074 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3282({}* %1037, i64 1, {}* nonnull %"closure->LAMBDA2860", {}* null, {}* null, {}* null)
          to label %normal-dest3285 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest3285:                                  ; preds = %normal-dest3278
  %.elt4321 = extractvalue { {}*, i64 } %1074, 0
  %.elt4323 = extractvalue { {}*, i64 } %1074, 1
  %cond3823 = icmp eq i64 %.elt4323, 0
  %1075 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148140.2 = select i1 %cond3823, {}* %1075, {}* %.elt4321
  br label %tag227

normal-dest3292:                                  ; preds = %tag501
  %1076 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %1077 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %1078 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %1079 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 217), align 8
  %ptrtoint3293 = ptrtoint {}* %413 to i64
  %entry-point-addr-uint3294 = add i64 %ptrtoint3293, 7
  %entry-point-addr3295 = inttoptr i64 %entry-point-addr-uint3294 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3296 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3295, align 8
  %1080 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3296({}* %413, i64 5, {}* %1076, {}* %1077, {}* %"closure->LAMBDA3590", {}* %1078, {}* %1079)
          to label %normal-dest3299 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest3299:                                  ; preds = %normal-dest3292
  %.elt4392 = extractvalue { {}*, i64 } %1080, 0
  %.elt4394 = extractvalue { {}*, i64 } %1080, 1
  %cond3836 = icmp eq i64 %.elt4394, 0
  %1081 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146974.2 = select i1 %cond3836, {}* %1081, {}* %.elt4392
  br label %tag122

normal-dest3311:                                  ; preds = %tag502
  %1082 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 149), align 8
  %1083 = invoke {}* @cc_safe_fdefinition({}* %1082)
          to label %normal-dest3317 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest3317:                                  ; preds = %normal-dest3311
  %ptrtoint3318 = ptrtoint {}* %1083 to i64
  %entry-point-addr-uint3319 = add i64 %ptrtoint3318, 7
  %entry-point-addr3320 = inttoptr i64 %entry-point-addr-uint3319 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3321 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3320, align 8
  %1084 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3321({}* %1083, i64 1, {}* %G146786.0, {}* null, {}* null, {}* null)
          to label %tag247 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest3330:                                  ; preds = %tag505
  %1085 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %1086 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %1087 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %1088 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint3331 = ptrtoint {}* %416 to i64
  %entry-point-addr-uint3332 = add i64 %ptrtoint3331, 7
  %entry-point-addr3333 = inttoptr i64 %entry-point-addr-uint3332 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3334 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3333, align 8
  %1089 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3334({}* %416, i64 5, {}* %1085, {}* %1086, {}* %.in4287, {}* %1087, {}* %1088)
          to label %normal-dest3337 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest3337:                                  ; preds = %normal-dest3330
  %.elt4297 = extractvalue { {}*, i64 } %1089, 0
  %.elt4299 = extractvalue { {}*, i64 } %1089, 1
  %cond3817 = icmp eq i64 %.elt4299, 0
  %1090 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x858.1 = select i1 %cond3817, {}* %1090, {}* %.elt4297
  br label %tag42

normal-dest3362:                                  ; preds = %maybe-more-tests1607
  %ptrtoint3363 = ptrtoint {}* %706 to i64
  %entry-point-addr-uint3364 = add i64 %ptrtoint3363, 7
  %entry-point-addr3365 = inttoptr i64 %entry-point-addr-uint3364 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3366 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3365, align 8
  %1091 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3366({}* %706, i64 1, {}* nonnull %"closure->LAMBDA3552", {}* null, {}* null, {}* null)
          to label %normal-dest3369 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest3369:                                  ; preds = %normal-dest3362
  %.elt4007 = extractvalue { {}*, i64 } %1091, 0
  %.elt4009 = extractvalue { {}*, i64 } %1091, 1
  %cond3765 = icmp eq i64 %.elt4009, 0
  %1092 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147833.1 = select i1 %cond3765, {}* %1092, {}* %.elt4007
  br label %tag599

header-check-br3375:                              ; preds = %tag513
  %irc-bit-cast3379 = bitcast {}* %"closure->LAMBDA1990" to i8*
  %gep3380 = getelementptr inbounds i8, i8* %irc-bit-cast3379, i64 -9
  %irc-bit-cast3381 = bitcast i8* %gep3380 to i64*
  %1093 = load i64, i64* %irc-bit-cast3381, align 8
  %.off4806 = add i64 %1093, -913
  %1094 = icmp ult i64 %.off4806, 85
  br i1 %1094, label %tag92, label %header-check-br2902

normal-dest3397:                                  ; preds = %tag523
  %1095 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %1096 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %1097 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %1098 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint3398 = ptrtoint {}* %423 to i64
  %entry-point-addr-uint3399 = add i64 %ptrtoint3398, 7
  %entry-point-addr3400 = inttoptr i64 %entry-point-addr-uint3399 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3401 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3400, align 8
  %1099 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3401({}* %423, i64 5, {}* %1095, {}* %1096, {}* %.in4287, {}* %1097, {}* %1098)
          to label %normal-dest3404 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest3404:                                  ; preds = %normal-dest3397
  %.elt4244 = extractvalue { {}*, i64 } %1099, 0
  %.elt4246 = extractvalue { {}*, i64 } %1099, 1
  %cond3807 = icmp eq i64 %.elt4246, 0
  %1100 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x1546.1 = select i1 %cond3807, {}* %1100, {}* %.elt4244
  br label %tag155

normal-dest3427:                                  ; preds = %maybe-more-tests3675
  %ptrtoint3428 = ptrtoint {}* %1161 to i64
  %entry-point-addr-uint3429 = add i64 %ptrtoint3428, 7
  %entry-point-addr3430 = inttoptr i64 %entry-point-addr-uint3429 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3431 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3430, align 8
  %1101 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3431({}* %1161, i64 1, {}* nonnull %"closure->LAMBDA3590", {}* null, {}* null, {}* null)
          to label %normal-dest3434 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest3434:                                  ; preds = %normal-dest3427
  %.elt4423 = extractvalue { {}*, i64 } %1101, 0
  %.elt4425 = extractvalue { {}*, i64 } %1101, 1
  %cond3840 = icmp eq i64 %.elt4425, 0
  %1102 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146951.2 = select i1 %cond3840, {}* %1102, {}* %.elt4423
  br label %tag216

header-check-br3440:                              ; preds = %tag534
  %irc-bit-cast3444 = bitcast {}* %"closure->LAMBDA2860" to i8*
  %gep3445 = getelementptr inbounds i8, i8* %irc-bit-cast3444, i64 -9
  %irc-bit-cast3446 = bitcast i8* %gep3445 to i64*
  %1103 = load i64, i64* %irc-bit-cast3446, align 8
  %.off4902 = add i64 %1103, -913
  %1104 = icmp ult i64 %.off4902, 85
  br i1 %1104, label %tag143, label %header-check-br694

header-check-br3449:                              ; preds = %tag535
  %irc-bit-cast3453 = bitcast {}* %"closure->LAMBDA" to i8*
  %gep3454 = getelementptr inbounds i8, i8* %irc-bit-cast3453, i64 -9
  %irc-bit-cast3455 = bitcast i8* %gep3454 to i64*
  %1105 = load i64, i64* %irc-bit-cast3455, align 8
  %.off4924 = add i64 %1105, -913
  %1106 = icmp ult i64 %.off4924, 85
  br i1 %1106, label %tag164, label %header-check-br2813

normal-dest3465:                                  ; preds = %tag537
  %1107 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %1108 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %1109 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %1110 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 151), align 8
  %ptrtoint3466 = ptrtoint {}* %440 to i64
  %entry-point-addr-uint3467 = add i64 %ptrtoint3466, 7
  %entry-point-addr3468 = inttoptr i64 %entry-point-addr-uint3467 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3469 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3468, align 8
  %1111 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3469({}* %440, i64 5, {}* %1107, {}* %1108, {}* %"closure->LAMBDA", {}* %1109, {}* %1110)
          to label %normal-dest3472 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest3472:                                  ; preds = %normal-dest3465
  %.elt = extractvalue { {}*, i64 } %1111, 0
  %.elt3859 = extractvalue { {}*, i64 } %1111, 1
  %cond3740 = icmp eq i64 %.elt3859, 0
  %1112 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148270.2 = select i1 %cond3740, {}* %1112, {}* %.elt
  br label %tag129

normal-dest3479:                                  ; preds = %tag542
  %1113 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %1114 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %1115 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %1116 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint3480 = ptrtoint {}* %445 to i64
  %entry-point-addr-uint3481 = add i64 %ptrtoint3480, 7
  %entry-point-addr3482 = inttoptr i64 %entry-point-addr-uint3481 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3483 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3482, align 8
  %1117 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3483({}* %445, i64 5, {}* %1113, {}* %1114, {}* %.in4287, {}* %1115, {}* %1116)
          to label %normal-dest3486 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest3486:                                  ; preds = %normal-dest3479
  %.elt4003 = extractvalue { {}*, i64 } %1117, 0
  %.elt4005 = extractvalue { {}*, i64 } %1117, 1
  %cond3764 = icmp eq i64 %.elt4005, 0
  %1118 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x742.1 = select i1 %cond3764, {}* %1118, {}* %.elt4003
  br label %tag21

header-check-br3492:                              ; preds = %header-check-br1094
  %.off4917 = add i64 %603, -1001
  %1119 = icmp ult i64 %.off4917, 5
  br i1 %1119, label %maybe-more-tests3500, label %tag537

maybe-more-tests3500:                             ; preds = %header-check-br3492
  %1120 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %1121 = invoke {}* @cc_safe_fdefinition({}* %1120)
          to label %normal-dest1919 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest3502:                                  ; preds = %tag545
  %1122 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %1123 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %1124 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %1125 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint3503 = ptrtoint {}* %447 to i64
  %entry-point-addr-uint3504 = add i64 %ptrtoint3503, 7
  %entry-point-addr3505 = inttoptr i64 %entry-point-addr-uint3504 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3506 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3505, align 8
  %1126 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3506({}* %447, i64 5, {}* %1122, {}* %1123, {}* %x803.0, {}* %1124, {}* %1125)
          to label %normal-dest3509 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest3509:                                  ; preds = %normal-dest3502
  %.elt4309 = extractvalue { {}*, i64 } %1126, 0
  %.elt4311 = extractvalue { {}*, i64 } %1126, 1
  %cond3820 = icmp eq i64 %.elt4311, 0
  %1127 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147978.1 = select i1 %cond3820, {}* %1127, {}* %.elt4309
  br label %tag131

normal-dest3516:                                  ; preds = %maybe-more-tests2657
  %ptrtoint3517 = ptrtoint {}* %932 to i64
  %entry-point-addr-uint3518 = add i64 %ptrtoint3517, 7
  %entry-point-addr3519 = inttoptr i64 %entry-point-addr-uint3518 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3520 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3519, align 8
  %1128 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3520({}* %932, i64 1, {}* nonnull %"closure->LAMBDA1861", {}* null, {}* null, {}* null)
          to label %normal-dest3523 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest3523:                                  ; preds = %normal-dest3516
  %.elt3953 = extractvalue { {}*, i64 } %1128, 0
  %.elt3955 = extractvalue { {}*, i64 } %1128, 1
  %cond3755 = icmp eq i64 %.elt3955, 0
  %1129 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147086.2 = select i1 %cond3755, {}* %1129, {}* %.elt3953
  br label %tag449

normal-dest3530:                                  ; preds = %tag548
  %ptrtoint3531 = ptrtoint {}* %G147133.0 to i64
  %entry-point-addr-uint3532 = add i64 %ptrtoint3531, 7
  %entry-point-addr3533 = inttoptr i64 %entry-point-addr-uint3532 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3534 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3533, align 8
  %1130 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3534({}* %G147133.0, i64 1, {}* %449, {}* null, {}* null, {}* null)
          to label %tag582 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

header-check-br3542:                              ; preds = %header-check-br2354
  %.off4915 = add i64 %856, -1001
  %1131 = icmp ult i64 %.off4915, 5
  br i1 %1131, label %maybe-more-tests3550, label %tag346

maybe-more-tests3550:                             ; preds = %header-check-br3542
  %1132 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %1133 = invoke {}* @cc_safe_fdefinition({}* %1132)
          to label %normal-dest1996 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest3551:                                  ; preds = %tag555
  %1134 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %1135 = icmp eq {}* %stream.0, %1134
  %.val4748 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147944.0 = select i1 %1135, {}* %1134, {}* %.val4748
  %1136 = icmp eq {}* %G147944.0, %.val4748
  br i1 %1136, label %tag368, label %tag313

normal-dest3564:                                  ; preds = %tag560
  %1137 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %1138 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %1139 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %1140 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 205), align 8
  %ptrtoint3565 = ptrtoint {}* %454 to i64
  %entry-point-addr-uint3566 = add i64 %ptrtoint3565, 7
  %entry-point-addr3567 = inttoptr i64 %entry-point-addr-uint3566 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3568 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3567, align 8
  %1141 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3568({}* %454, i64 5, {}* %1137, {}* %1138, {}* %"closure->LAMBDA3552", {}* %1139, {}* %1140)
          to label %normal-dest3571 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest3571:                                  ; preds = %normal-dest3564
  %.elt3985 = extractvalue { {}*, i64 } %1141, 0
  %.elt3987 = extractvalue { {}*, i64 } %1141, 1
  %cond3762 = icmp eq i64 %.elt3987, 0
  %1142 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147833.2 = select i1 %cond3762, {}* %1142, {}* %.elt3985
  br label %tag599

normal-dest3583:                                  ; preds = %tag562
  %.elt4135 = extractvalue { {}*, i64 } %455, 0
  %.elt4137 = extractvalue { {}*, i64 } %455, 1
  %cond3788 = icmp eq i64 %.elt4137, 0
  %1143 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147537.0 = select i1 %cond3788, {}* %1143, {}* %.elt4135
  %1144 = icmp eq {}* %G147537.0, %1143
  br i1 %1144, label %tag579, label %tag395

normal-dest3589:                                  ; preds = %tag563
  %1145 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %1146 = icmp eq {}* %stream.0, %1145
  %.val4905 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G146989.0 = select i1 %1146, {}* %1145, {}* %.val4905
  %1147 = icmp eq {}* %G146989.0, %.val4905
  br i1 %1147, label %tag45, label %tag111

header-check-br3601:                              ; preds = %header-check-br3106
  %.off4843 = add i64 %1031, -1001
  %1148 = icmp ult i64 %.off4843, 5
  br i1 %1148, label %maybe-more-tests3609, label %tag118

maybe-more-tests3609:                             ; preds = %header-check-br3601
  %1149 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %1150 = invoke {}* @cc_safe_fdefinition({}* %1149)
          to label %normal-dest1476 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

header-check-br3616:                              ; preds = %header-check-br1238
  %.off4891 = add i64 %633, -1001
  %1151 = icmp ult i64 %.off4891, 5
  br i1 %1151, label %maybe-more-tests3624, label %tag12

maybe-more-tests3624:                             ; preds = %header-check-br3616
  %1152 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %1153 = invoke {}* @cc_safe_fdefinition({}* %1152)
          to label %normal-dest1733 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest3638:                                  ; preds = %maybe-more-tests905
  %ptrtoint3639 = ptrtoint {}* %568 to i64
  %entry-point-addr-uint3640 = add i64 %ptrtoint3639, 7
  %entry-point-addr3641 = inttoptr i64 %entry-point-addr-uint3640 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3642 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3641, align 8
  %1154 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3642({}* %568, i64 1, {}* nonnull %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest3645 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest3645:                                  ; preds = %normal-dest3638
  %.elt4503 = extractvalue { {}*, i64 } %1154, 0
  %.elt4505 = extractvalue { {}*, i64 } %1154, 1
  %cond3855 = icmp eq i64 %.elt4505, 0
  %1155 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148221.2 = select i1 %cond3855, {}* %1155, {}* %.elt4503
  br label %tag574

normal-dest3651:                                  ; preds = %tag579
  %1156 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %1157 = icmp eq {}* %stream.0, %1156
  %.val4835 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G147383.0 = select i1 %1157, {}* %1156, {}* %.val4835
  %1158 = icmp eq {}* %G147383.0, %.val4835
  br i1 %1158, label %tag397, label %tag463

header-check-br3667:                              ; preds = %header-check-br1412
  %.off4911 = add i64 %664, -1001
  %1159 = icmp ult i64 %.off4911, 5
  br i1 %1159, label %maybe-more-tests3675, label %tag369

maybe-more-tests3675:                             ; preds = %header-check-br3667
  %1160 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %1161 = invoke {}* @cc_safe_fdefinition({}* %1160)
          to label %normal-dest3427 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest3677:                                  ; preds = %tag585
  %1162 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %1163 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %1164 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %1165 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint3678 = ptrtoint {}* %469 to i64
  %entry-point-addr-uint3679 = add i64 %ptrtoint3678, 7
  %entry-point-addr3680 = inttoptr i64 %entry-point-addr-uint3679 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3681 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3680, align 8
  %1166 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3681({}* %469, i64 5, {}* %1162, {}* %1163, {}* %SEQUENCE.0.ph, {}* %1164, {}* %1165)
          to label %normal-dest3684 unwind label %cleanup-lpad.loopexit.loopexit

normal-dest3684:                                  ; preds = %normal-dest3677
  %.elt4278 = extractvalue { {}*, i64 } %1166, 0
  %.elt4280 = extractvalue { {}*, i64 } %1166, 1
  %cond3813 = icmp eq i64 %.elt4280, 0
  %1167 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G2095854.1 = select i1 %cond3813, {}* %1167, {}* %.elt4278
  br label %tag472

normal-dest3691:                                  ; preds = %tag589
  %1168 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %1169 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %1170 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %1171 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint3692 = ptrtoint {}* %471 to i64
  %entry-point-addr-uint3693 = add i64 %ptrtoint3692, 7
  %entry-point-addr3694 = inttoptr i64 %entry-point-addr-uint3693 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3695 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3694, align 8
  %1172 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3695({}* %471, i64 5, {}* %1168, {}* %1169, {}* %.in4287, {}* %1170, {}* %1171)
          to label %normal-dest3698 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest3698:                                  ; preds = %normal-dest3691
  %.elt4033 = extractvalue { {}*, i64 } %1172, 0
  %.elt4035 = extractvalue { {}*, i64 } %1172, 1
  %cond3770 = icmp eq i64 %.elt4035, 0
  %1173 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x760.1 = select i1 %cond3770, {}* %1173, {}* %.elt4033
  br label %tag28

normal-dest3705:                                  ; preds = %tag592
  %ptrtoint3706 = ptrtoint {}* %473 to i64
  %entry-point-addr-uint3707 = add i64 %ptrtoint3706, 7
  %entry-point-addr3708 = inttoptr i64 %entry-point-addr-uint3707 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3709 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3708, align 8
  %1174 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3709({}* %473, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest3712 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest3712:                                  ; preds = %normal-dest3705
  %.elt4491 = extractvalue { {}*, i64 } %1174, 0
  %.elt4493 = extractvalue { {}*, i64 } %1174, 1
  %cond3853 = icmp eq i64 %.elt4493, 0
  %1175 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %OUT1467583625.0 = select i1 %cond3853, {}* %1175, {}* %.elt4491
  %ptrtoint3719 = ptrtoint {}* %"closure->LAMBDA" to i64
  %tag-only3720 = and i64 %ptrtoint3719, 7
  %test3721 = icmp eq i64 %tag-only3720, 1
  br i1 %test3721, label %header-check-br3718, label %tag50

header-check-br3718:                              ; preds = %normal-dest3712
  %irc-bit-cast3722 = bitcast {}* %"closure->LAMBDA" to i8*
  %gep3723 = getelementptr inbounds i8, i8* %irc-bit-cast3722, i64 -9
  %irc-bit-cast3724 = bitcast i8* %gep3723 to i64*
  %1176 = load i64, i64* %irc-bit-cast3724, align 8
  %.off4922 = add i64 %1176, -913
  %1177 = icmp ult i64 %.off4922, 85
  br i1 %1177, label %tag574, label %header-check-br897
}

declare {}* @cc_safe_symbol_value({}*) local_unnamed_addr #3

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !34 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %normal-dest92, %process-rest-argument
  %format-arg-146760.0 = phi {}* [ %format-arg-146760.1, %process-rest-argument ], [ %format-arg-146760.2, %normal-dest92 ]
  %9 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 131), align 8
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest11 unwind label %cleanup-lpad

tag1:                                             ; preds = %process-rest-argument
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest85 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %normal-dest85, %tag1, %normal-dest70, %normal-dest64, %normal-dest57, %normal-dest51, %normal-dest44, %normal-dest38, %normal-dest31, %normal-dest25, %normal-dest18, %normal-dest14, %normal-dest11, %tag, %error
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %13

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-init, label %opt-arg

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-arg:                                          ; preds = %continue
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %rem-nargs6 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-17 = add i64 %rem-nargs6, -1
  store i64 %rem-nargs-17, i64* %"remaining-nargs*", align 8
  %vaarg8 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

opt-init:                                         ; preds = %continue
  %15 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-arg, %opt-init
  %format-arg-146760.1 = phi {}* [ %vaarg8, %opt-arg ], [ undef, %opt-init ]
  %G146763.0 = phi {}* [ %14, %opt-arg ], [ %15, %opt-init ]
  %16 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %18 = icmp eq {}* %G146763.0, %17
  br i1 %18, label %tag1, label %tag

normal-dest11:                                    ; preds = %tag
  %19 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 133), align 8
  %ptrtoint = ptrtoint {}* %10 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %10, i64 2, {}* %19, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest14 unwind label %cleanup-lpad

normal-dest14:                                    ; preds = %normal-dest11
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 134), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest18 unwind label %cleanup-lpad

normal-dest18:                                    ; preds = %normal-dest14
  %ptrtoint19 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint20 = add i64 %ptrtoint19, 7
  %entry-point-addr21 = inttoptr i64 %entry-point-addr-uint20 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point22 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr21, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point22({}* %22, i64 2, {}* %format-arg-146760.0, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest25 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %normal-dest18
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 131), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest31 unwind label %cleanup-lpad

normal-dest31:                                    ; preds = %normal-dest25
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 136), align 16
  %ptrtoint32 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint33 = add i64 %ptrtoint32, 7
  %entry-point-addr34 = inttoptr i64 %entry-point-addr-uint33 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point35 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr34, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point35({}* %25, i64 2, {}* %26, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest38 unwind label %cleanup-lpad

normal-dest38:                                    ; preds = %normal-dest31
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 137), align 8
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest44 unwind label %cleanup-lpad

normal-dest44:                                    ; preds = %normal-dest38
  %ptrtoint45 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint46 = add i64 %ptrtoint45, 7
  %entry-point-addr47 = inttoptr i64 %entry-point-addr-uint46 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point48 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr47, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point48({}* %29, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest51 unwind label %cleanup-lpad

normal-dest51:                                    ; preds = %normal-dest44
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 131), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest57 unwind label %cleanup-lpad

normal-dest57:                                    ; preds = %normal-dest51
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 139), align 8
  %ptrtoint58 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint59 = add i64 %ptrtoint58, 7
  %entry-point-addr60 = inttoptr i64 %entry-point-addr-uint59 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point61 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr60, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point61({}* %32, i64 2, {}* %33, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest64 unwind label %cleanup-lpad

normal-dest64:                                    ; preds = %normal-dest57
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 137), align 8
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest70 unwind label %cleanup-lpad

normal-dest70:                                    ; preds = %normal-dest64
  %ptrtoint71 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint72 = add i64 %ptrtoint71, 7
  %entry-point-addr73 = inttoptr i64 %entry-point-addr-uint72 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point74 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr73, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point74({}* %36, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest77 unwind label %cleanup-lpad

normal-dest77:                                    ; preds = %normal-dest70
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %38 = insertvalue { {}*, i64 } undef, {}* %16, 0
  %39 = insertvalue { {}*, i64 } %38, i64 1, 1
  ret { {}*, i64 } %39

normal-dest85:                                    ; preds = %tag1
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %44 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 128), align 16
  %45 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  %ptrtoint86 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint87 = add i64 %ptrtoint86, 7
  %entry-point-addr88 = inttoptr i64 %entry-point-addr-uint87 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point89 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr88, align 8
  %46 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point89({}* %12, i64 7, {}* %40, {}* %41, {}* %42, {}* %43, {}* %44, {}* %45, {}* inttoptr (i64 88 to {}*))
          to label %normal-dest92 unwind label %cleanup-lpad

normal-dest92:                                    ; preds = %normal-dest85
  %.elt123 = extractvalue { {}*, i64 } %46, 0
  %.elt125 = extractvalue { {}*, i64 } %46, 1
  %cond = icmp eq i64 %.elt125, 0
  %47 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %format-arg-146760.2 = select i1 %cond, {}* %47, {}* %.elt123
  br label %tag
}

declare void @va_notEnoughArgumentsException(i8*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @unreachableError() local_unnamed_addr #1

; Function Attrs: nounwind
declare {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }*, i64*) local_unnamed_addr #1

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.1"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !35 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

cleanup-lpad:                                     ; preds = %normal-dest5, %continue, %error
  %9 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %9

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %10 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* %"remaining-nargs*")
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 137), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

normal-dest5:                                     ; preds = %continue
  %ptrtoint = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %13 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %mvn-final unwind label %cleanup-lpad

mvn-final:                                        ; preds = %normal-dest5
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %14 = insertvalue { {}*, i64 } undef, {}* %10, 0
  %15 = insertvalue { {}*, i64 } %14, i64 1, 1
  ret { {}*, i64 } %15
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.2"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !36 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %normal-dest27, %process-rest-argument
  %format-arg-146814.0 = phi {}* [ %format-arg-146814.1, %process-rest-argument ], [ %format-arg-146814.2, %normal-dest27 ]
  %9 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 134), align 16
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest11 unwind label %cleanup-lpad

tag1:                                             ; preds = %process-rest-argument
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest20 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %normal-dest20, %tag1, %normal-dest11, %tag, %error
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %13

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-init, label %opt-arg

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-arg:                                          ; preds = %continue
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %rem-nargs6 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-17 = add i64 %rem-nargs6, -1
  store i64 %rem-nargs-17, i64* %"remaining-nargs*", align 8
  %vaarg8 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

opt-init:                                         ; preds = %continue
  %15 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-arg, %opt-init
  %format-arg-146814.1 = phi {}* [ %vaarg8, %opt-arg ], [ undef, %opt-init ]
  %G146817.0 = phi {}* [ %14, %opt-arg ], [ %15, %opt-init ]
  %16 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %18 = icmp eq {}* %G146817.0, %17
  br i1 %18, label %tag1, label %tag

normal-dest11:                                    ; preds = %tag
  %ptrtoint = ptrtoint {}* %10 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %19 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %10, i64 2, {}* %format-arg-146814.0, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest14 unwind label %cleanup-lpad

normal-dest14:                                    ; preds = %normal-dest11
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %20 = insertvalue { {}*, i64 } undef, {}* %16, 0
  %21 = insertvalue { {}*, i64 } %20, i64 1, 1
  ret { {}*, i64 } %21

normal-dest20:                                    ; preds = %tag1
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 193), align 8
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  %ptrtoint21 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint22 = add i64 %ptrtoint21, 7
  %entry-point-addr23 = inttoptr i64 %entry-point-addr-uint22 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point24 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr23, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point24({}* %12, i64 7, {}* %22, {}* %23, {}* %24, {}* %25, {}* %26, {}* %27, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest27 unwind label %cleanup-lpad

normal-dest27:                                    ; preds = %normal-dest20
  %.elt38 = extractvalue { {}*, i64 } %28, 0
  %.elt40 = extractvalue { {}*, i64 } %28, 1
  %cond = icmp eq i64 %.elt40, 0
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %format-arg-146814.2 = select i1 %cond, {}* %29, {}* %.elt38
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.3"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !37 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %normal-dest40, %process-rest-argument
  %format-arg-146780.0 = phi {}* [ %format-arg-146780.1, %process-rest-argument ], [ %format-arg-146780.2, %normal-dest40 ]
  %9 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 134), align 16
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest11 unwind label %cleanup-lpad

tag1:                                             ; preds = %process-rest-argument
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest33 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %normal-dest33, %tag1, %normal-dest18, %normal-dest14, %normal-dest11, %tag, %error
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %13

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-init, label %opt-arg

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-arg:                                          ; preds = %continue
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %rem-nargs6 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-17 = add i64 %rem-nargs6, -1
  store i64 %rem-nargs-17, i64* %"remaining-nargs*", align 8
  %vaarg8 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

opt-init:                                         ; preds = %continue
  %15 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-arg, %opt-init
  %format-arg-146780.1 = phi {}* [ %vaarg8, %opt-arg ], [ undef, %opt-init ]
  %G146783.0 = phi {}* [ %14, %opt-arg ], [ %15, %opt-init ]
  %16 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %18 = icmp eq {}* %G146783.0, %17
  br i1 %18, label %tag1, label %tag

normal-dest11:                                    ; preds = %tag
  %ptrtoint = ptrtoint {}* %10 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %19 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %10, i64 2, {}* %format-arg-146780.0, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest14 unwind label %cleanup-lpad

normal-dest14:                                    ; preds = %normal-dest11
  %20 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 131), align 8
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest18 unwind label %cleanup-lpad

normal-dest18:                                    ; preds = %normal-dest14
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 155), align 8
  %ptrtoint19 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint20 = add i64 %ptrtoint19, 7
  %entry-point-addr21 = inttoptr i64 %entry-point-addr-uint20 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point22 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr21, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point22({}* %21, i64 2, {}* %22, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest25 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %normal-dest18
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %24 = insertvalue { {}*, i64 } undef, {}* %16, 0
  %25 = insertvalue { {}*, i64 } %24, i64 1, 1
  ret { {}*, i64 } %25

normal-dest33:                                    ; preds = %tag1
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 154), align 16
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  %ptrtoint34 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint35 = add i64 %ptrtoint34, 7
  %entry-point-addr36 = inttoptr i64 %entry-point-addr-uint35 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point37 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr36, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point37({}* %12, i64 7, {}* %26, {}* %27, {}* %28, {}* %29, {}* %30, {}* %31, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest40 unwind label %cleanup-lpad

normal-dest40:                                    ; preds = %normal-dest33
  %.elt55 = extractvalue { {}*, i64 } %32, 0
  %.elt57 = extractvalue { {}*, i64 } %32, 1
  %cond = icmp eq i64 %.elt57, 0
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %format-arg-146780.2 = select i1 %cond, {}* %33, {}* %.elt55
  br label %tag
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #4

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.4"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !38 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %normal-dest53, %process-rest-argument
  %format-arg-146797.0 = phi {}* [ %format-arg-146797.1, %process-rest-argument ], [ %format-arg-146797.2, %normal-dest53 ]
  %9 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 131), align 8
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest11 unwind label %cleanup-lpad

tag1:                                             ; preds = %process-rest-argument
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest46 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %normal-dest46, %tag1, %normal-dest31, %normal-dest25, %normal-dest18, %normal-dest14, %normal-dest11, %tag, %error
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %13

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-init, label %opt-arg

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-arg:                                          ; preds = %continue
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %rem-nargs6 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-17 = add i64 %rem-nargs6, -1
  store i64 %rem-nargs-17, i64* %"remaining-nargs*", align 8
  %vaarg8 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

opt-init:                                         ; preds = %continue
  %15 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-arg, %opt-init
  %format-arg-146797.1 = phi {}* [ %vaarg8, %opt-arg ], [ undef, %opt-init ]
  %G146800.0 = phi {}* [ %14, %opt-arg ], [ %15, %opt-init ]
  %16 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %18 = icmp eq {}* %G146800.0, %17
  br i1 %18, label %tag1, label %tag

normal-dest11:                                    ; preds = %tag
  %19 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 201), align 8
  %ptrtoint = ptrtoint {}* %10 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %10, i64 2, {}* %19, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest14 unwind label %cleanup-lpad

normal-dest14:                                    ; preds = %normal-dest11
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 134), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest18 unwind label %cleanup-lpad

normal-dest18:                                    ; preds = %normal-dest14
  %ptrtoint19 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint20 = add i64 %ptrtoint19, 7
  %entry-point-addr21 = inttoptr i64 %entry-point-addr-uint20 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point22 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr21, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point22({}* %22, i64 2, {}* %format-arg-146797.0, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest25 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %normal-dest18
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 131), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest31 unwind label %cleanup-lpad

normal-dest31:                                    ; preds = %normal-dest25
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 202), align 16
  %ptrtoint32 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint33 = add i64 %ptrtoint32, 7
  %entry-point-addr34 = inttoptr i64 %entry-point-addr-uint33 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point35 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr34, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point35({}* %25, i64 2, {}* %26, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest38 unwind label %cleanup-lpad

normal-dest38:                                    ; preds = %normal-dest31
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %28 = insertvalue { {}*, i64 } undef, {}* %16, 0
  %29 = insertvalue { {}*, i64 } %28, i64 1, 1
  ret { {}*, i64 } %29

normal-dest46:                                    ; preds = %tag1
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 200), align 16
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  %ptrtoint47 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint48 = add i64 %ptrtoint47, 7
  %entry-point-addr49 = inttoptr i64 %entry-point-addr-uint48 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point50 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr49, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point50({}* %12, i64 7, {}* %30, {}* %31, {}* %32, {}* %33, {}* %34, {}* %35, {}* inttoptr (i64 12 to {}*))
          to label %normal-dest53 unwind label %cleanup-lpad

normal-dest53:                                    ; preds = %normal-dest46
  %.elt72 = extractvalue { {}*, i64 } %36, 0
  %.elt74 = extractvalue { {}*, i64 } %36, 1
  %cond = icmp eq i64 %.elt74, 0
  %37 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %format-arg-146797.2 = select i1 %cond, {}* %37, {}* %.elt72
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.5"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !39 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

cleanup-lpad:                                     ; preds = %normal-dest64, %mvn-final62, %normal-dest51, %mvn-final49, %normal-dest38, %mvn-final36, %normal-dest25, %mvn-final23, %normal-dest12, %mvn-final, %normal-dest5, %continue, %error
  %9 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %9

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %10 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* %"remaining-nargs*")
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 131), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

normal-dest5:                                     ; preds = %continue
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 211), align 8
  %ptrtoint = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 2, {}* %13, {}* %vaarg, {}* null, {}* null)
          to label %mvn-final unwind label %cleanup-lpad

mvn-final:                                        ; preds = %normal-dest5
  %15 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 137), align 8
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %mvn-final
  %ptrtoint13 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint14 = add i64 %ptrtoint13, 7
  %entry-point-addr15 = inttoptr i64 %entry-point-addr-uint14 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point16 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr15, align 8
  %17 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point16({}* %16, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %mvn-final23 unwind label %cleanup-lpad

mvn-final23:                                      ; preds = %normal-dest12
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 131), align 8
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest25 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %mvn-final23
  %20 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 212), align 16
  %ptrtoint26 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint27 = add i64 %ptrtoint26, 7
  %entry-point-addr28 = inttoptr i64 %entry-point-addr-uint27 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point29 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr28, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point29({}* %19, i64 2, {}* %20, {}* %vaarg, {}* null, {}* null)
          to label %mvn-final36 unwind label %cleanup-lpad

mvn-final36:                                      ; preds = %normal-dest25
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 137), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest38 unwind label %cleanup-lpad

normal-dest38:                                    ; preds = %mvn-final36
  %ptrtoint39 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint40 = add i64 %ptrtoint39, 7
  %entry-point-addr41 = inttoptr i64 %entry-point-addr-uint40 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point42 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr41, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point42({}* %23, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %mvn-final49 unwind label %cleanup-lpad

mvn-final49:                                      ; preds = %normal-dest38
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 131), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest51 unwind label %cleanup-lpad

normal-dest51:                                    ; preds = %mvn-final49
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 213), align 8
  %ptrtoint52 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint53 = add i64 %ptrtoint52, 7
  %entry-point-addr54 = inttoptr i64 %entry-point-addr-uint53 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point55 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr54, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point55({}* %26, i64 2, {}* %27, {}* %vaarg, {}* null, {}* null)
          to label %mvn-final62 unwind label %cleanup-lpad

mvn-final62:                                      ; preds = %normal-dest51
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 137), align 8
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest64 unwind label %cleanup-lpad

normal-dest64:                                    ; preds = %mvn-final62
  %ptrtoint65 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint66 = add i64 %ptrtoint65, 7
  %entry-point-addr67 = inttoptr i64 %entry-point-addr-uint66 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point68 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr67, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point68({}* %30, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %mvn-final75 unwind label %cleanup-lpad

mvn-final75:                                      ; preds = %normal-dest64
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %32 = insertvalue { {}*, i64 } undef, {}* %10, 0
  %33 = insertvalue { {}*, i64 } %32, i64 1, 1
  ret { {}*, i64 } %33
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.6"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !40 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %process-rest-argument
  %9 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest11 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest14, %process-rest-argument
  %format-arg-146831.0 = phi {}* [ %format-arg-146831.1, %process-rest-argument ], [ %format-arg-146831.2, %normal-dest14 ]
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 134), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest18 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %normal-dest18, %tag1, %normal-dest11, %tag, %error
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %13

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-init, label %opt-arg

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-arg:                                          ; preds = %continue
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %rem-nargs6 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-17 = add i64 %rem-nargs6, -1
  store i64 %rem-nargs-17, i64* %"remaining-nargs*", align 8
  %vaarg8 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

opt-init:                                         ; preds = %continue
  %15 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-arg, %opt-init
  %format-arg-146831.1 = phi {}* [ %vaarg8, %opt-arg ], [ undef, %opt-init ]
  %G146834.0 = phi {}* [ %14, %opt-arg ], [ %15, %opt-init ]
  %16 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %18 = icmp eq {}* %G146834.0, %17
  br i1 %18, label %tag, label %tag1

normal-dest11:                                    ; preds = %tag
  %19 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  %20 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 186), align 16
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  %ptrtoint = ptrtoint {}* %10 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %10, i64 7, {}* %19, {}* %20, {}* %21, {}* %22, {}* %23, {}* %24, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest14 unwind label %cleanup-lpad

normal-dest14:                                    ; preds = %normal-dest11
  %.elt38 = extractvalue { {}*, i64 } %25, 0
  %.elt40 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt40, 0
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %format-arg-146831.2 = select i1 %cond, {}* %26, {}* %.elt38
  br label %tag1

normal-dest18:                                    ; preds = %tag1
  %ptrtoint19 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint20 = add i64 %ptrtoint19, 7
  %entry-point-addr21 = inttoptr i64 %entry-point-addr-uint20 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point22 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr21, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point22({}* %12, i64 2, {}* %format-arg-146831.0, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest25 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %normal-dest18
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %28 = insertvalue { {}*, i64 } undef, {}* %16, 0
  %29 = insertvalue { {}*, i64 } %28, i64 1, 1
  ret { {}*, i64 } %29
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^144^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !41 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^144^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br34
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G148369.0 = phi {}* [ %18, %header-check-br ], [ %G148369.1, %normal-dest17 ], [ %G148369.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 286), align 16
  %ptrtoint43 = ptrtoint {}* %G148369.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G148369.0, i64 2, {}* %"closure->YAS-SPEICHER_NACH_UNTEN", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest21, %maybe-more-tests42, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 286), align 16
  %"closure->YAS-SPEICHER_NACH_UNTEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS-SPEICHER_NACH_UNTEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-SPEICHER_NACH_UNTEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 4506, i64 144, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br34

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 292), align 16
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148369.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag4

normal-dest21:                                    ; preds = %maybe-more-tests42
  %ptrtoint22 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %31, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt101 = extractvalue { {}*, i64 } %27, 0
  %.elt103 = extractvalue { {}*, i64 } %27, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148369.2 = select i1 %cond82, {}* %28, {}* %.elt101
  br label %tag4

header-check-br34:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %29 = icmp ult i64 %.off106, 5
  br i1 %29, label %maybe-more-tests42, label %tag

maybe-more-tests42:                               ; preds = %header-check-br34
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest21 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 293), align 8
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->YAS-SPEICHER_NACH_UNTEN", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 301), align 8
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->YAS-SPEICHER_NACH_UNTEN", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 748 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 286), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS-SPEICHER_NACH_UNTEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !42 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %tag41
  %9 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 277), align 8
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest75 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag5:                                             ; preds = %tag46
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest84 unwind label %cleanup-lpad.loopexit

tag7:                                             ; preds = %tag46, %tag14.backedge, %normal-dest130, %normal-dest227, %tag27
  %13 = phi {}* [ %111, %normal-dest227 ], [ %24, %tag27 ], [ %92, %normal-dest130 ], [ %77, %tag14.backedge ], [ %42, %tag46 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %14 = insertvalue { {}*, i64 } undef, {}* %13, 0
  %15 = insertvalue { {}*, i64 } %14, i64 1, 1
  ret { {}*, i64 } %15

tag9:                                             ; preds = %tag21, %header-check-br113
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest100 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag17:                                            ; preds = %normal-dest75, %tag41
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 281), align 8
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest123 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag18:                                            ; preds = %normal-dest213, %header-check-br148, %normal-dest107
  %G148443.0 = phi {}* [ %G148443.1, %normal-dest107 ], [ %ausnahmebedingung.0, %header-check-br148 ], [ %G148443.2, %normal-dest213 ]
  %ptrtoint136 = ptrtoint {}* %G148443.0 to i64
  %entry-point-addr-uint137 = add i64 %ptrtoint136, 7
  %entry-point-addr138 = inttoptr i64 %entry-point-addr-uint137 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point139 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr138, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point139({}* %G148443.0, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest142 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag21:                                            ; preds = %tag31
  %ptrtoint149 = ptrtoint {}* %ausnahmebedingung.0 to i64
  %tag-only150 = and i64 %ptrtoint149, 7
  %test151 = icmp eq i64 %tag-only150, 1
  br i1 %test151, label %header-check-br148, label %tag9

tag23:                                            ; preds = %tag35
  %21 = add i64 %35, -3
  %22 = inttoptr i64 %21 to {}**
  %23 = load {}*, {}** %22, align 8
  br label %tag33

tag27:                                            ; preds = %normal-dest142, %tag31
  %24 = phi {}* [ %92, %tag31 ], [ %94, %normal-dest142 ]
  %G148441.0 = phi {}* [ %G148346.0, %tag31 ], [ %G148441.1, %normal-dest142 ]
  %25 = icmp eq {}* %G148441.0, %24
  br i1 %25, label %tag7, label %tag44

tag29:                                            ; preds = %tag55, %header-check-br
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest162 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag31:                                            ; preds = %normal-dest130
  %28 = icmp eq {}* %ausnahmebedingung.0, %92
  %.val363 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G148346.0 = select i1 %28, {}* %.val363, {}* %92
  %29 = icmp eq {}* %G148346.0, %92
  br i1 %29, label %tag21, label %tag27

tag33:                                            ; preds = %normal-dest273, %tag23
  %K.0 = phi {}* [ %23, %tag23 ], [ %K.1, %normal-dest273 ]
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 286), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest182 unwind label %cleanup-lpad.loopexit

tag34:                                            ; preds = %normal-dest189
  %32 = add i64 %35, 5
  %33 = inttoptr i64 %32 to {}**
  %34 = load {}*, {}** %33, align 8
  %.pre380 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %tag14.backedge

tag35:                                            ; preds = %tag35.preheader, %tag14.backedge
  %.val366 = phi {}* [ %77, %tag14.backedge ], [ %111, %tag35.preheader ]
  %"%DOLIST-VAR.0376" = phi {}* [ %"%DOLIST-VAR.0.be", %tag14.backedge ], [ %"%DOLIST-VAR.2", %tag35.preheader ]
  %35 = ptrtoint {}* %"%DOLIST-VAR.0376" to i64
  %tag-only201315 = and i64 %35, 7
  %consp-test202 = icmp eq i64 %tag-only201315, 3
  %.val365 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G148433.0 = select i1 %consp-test202, {}* %.val365, {}* %.val366
  %36 = icmp eq {}* %G148433.0, %.val366
  br i1 %36, label %tag51, label %tag23

tag41:                                            ; preds = %kw-exit-block, %normal-dest259
  %.val = phi {}* [ %.val.pre, %normal-dest259 ], [ %52, %kw-exit-block ]
  %37 = phi {}* [ %115, %normal-dest259 ], [ %53, %kw-exit-block ]
  %object.0 = phi {}* [ %object.1, %normal-dest259 ], [ %53, %kw-exit-block ]
  %38 = icmp eq {}* %object.0, %37
  %G148473.0 = select i1 %38, {}* %.val, {}* %37
  %39 = icmp eq {}* %G148473.0, %37
  br i1 %39, label %tag17, label %tag

tag44:                                            ; preds = %tag27
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest220 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag46:                                            ; preds = %normal-dest189
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %43 = icmp eq {}* %"%DOLIST-VAR.0376", %42
  %.val367 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G148401.0 = select i1 %43, {}* %.val367, {}* %42
  %44 = icmp eq {}* %G148401.0, %42
  br i1 %44, label %tag5, label %tag7

tag50:                                            ; preds = %header-check-br279, %normal-dest247, %normal-dest169
  %G148478.0 = phi {}* [ %G148478.1, %normal-dest169 ], [ %G148478.2, %normal-dest247 ], [ %f-nicht_speichern.0, %header-check-br279 ]
  %ptrtoint253 = ptrtoint {}* %G148478.0 to i64
  %entry-point-addr-uint254 = add i64 %ptrtoint253, 7
  %entry-point-addr255 = inttoptr i64 %entry-point-addr-uint254 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point256 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr255, align 8
  %45 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point256({}* %G148478.0, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest259 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag51:                                            ; preds = %tag35
  %46 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %47 = invoke {}* @cc_safe_fdefinition({}* %46)
          to label %normal-dest266 unwind label %cleanup-lpad.loopexit

tag55:                                            ; preds = %kw-exit-block
  %ptrtoint280 = ptrtoint {}* %f-nicht_speichern.0 to i64
  %tag-only281 = and i64 %ptrtoint280, 7
  %test282 = icmp eq i64 %tag-only281, 1
  br i1 %test282, label %header-check-br279, label %tag29

cleanup-lpad.loopexit:                            ; preds = %tag5, %normal-dest84, %tag33, %normal-dest182, %tag51, %normal-dest266
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit:          ; preds = %loop-kw-args
  %lpad.loopexit372 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %tag50, %normal-dest240, %maybe-more-tests, %normal-dest220, %tag44, %normal-dest206, %maybe-more-tests121, %normal-dest162, %tag29, %tag18, %normal-dest123, %tag17, %normal-dest100, %tag9, %normal-dest75, %tag, %loop-cont, %error
  %lpad.loopexit.split-lp373 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit372, %cleanup-lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp373, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @":::global-str-YAS-SPEICHER_NACH_UNTEN^COMMON-LISP-USER^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %48 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %49 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %50 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 304), align 16
  %51 = icmp eq i64 %nargs, 1
  br i1 %51, label %kw-exit-block, label %loop-kw-args.preheader

loop-kw-args.preheader:                           ; preds = %continue
  br label %loop-kw-args

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

loop-kw-args:                                     ; preds = %loop-kw-args.preheader, %advance-arg-idx-block
  %G148351.0 = phi {}* [ %G148351.2, %advance-arg-idx-block ], [ %49, %loop-kw-args.preheader ]
  %f-nicht_speichern.1 = phi {}* [ %f-nicht_speichern.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %G148352.0 = phi {}* [ %G148352.2, %advance-arg-idx-block ], [ %49, %loop-kw-args.preheader ]
  %ausnahmebedingung.1 = phi {}* [ %ausnahmebedingung.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %G148353.0 = phi {}* [ %G148353.2, %advance-arg-idx-block ], [ %49, %loop-kw-args.preheader ]
  %stream.1 = phi {}* [ %stream.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %phi-saw-aok = phi i64 [ %phi-this-was-aok, %advance-arg-idx-block ], [ 0, %loop-kw-args.preheader ]
  %phi-reg-arg-idx = phi i64 [ %60, %advance-arg-idx-block ], [ 1, %loop-kw-args.preheader ]
  %phi-bad-kw-idx = phi i64 [ %phi.aok-bad-good.bad-kw-idx, %advance-arg-idx-block ], [ 65536, %loop-kw-args.preheader ]
  %rem-nargs61 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-162 = add i64 %rem-nargs61, -1
  store i64 %rem-nargs-162, i64* %"remaining-nargs*", align 8
  %vaarg63 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs64 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-165 = add i64 %rem-nargs64, -1
  store i64 %rem-nargs-165, i64* %"remaining-nargs*", align 8
  %vaarg66 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  invoke void @cc_ifNotKeywordException({}* %vaarg63, i64 %phi-reg-arg-idx, { i32, i32, i8*, i8* }* nonnull %"va-list*", { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"YAS-SPEICHER_NACH_UNTEN^COMMON-LISP-USER^FN^^^DESC")
          to label %normal-dest67 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

kw-exit-block:                                    ; preds = %loop-cont.kw-exit-block_crit_edge, %continue
  %52 = phi {}* [ %48, %continue ], [ %.pre378, %loop-cont.kw-exit-block_crit_edge ]
  %53 = phi {}* [ %49, %continue ], [ %.pre, %loop-cont.kw-exit-block_crit_edge ]
  %G148351.1 = phi {}* [ %49, %continue ], [ %G148351.2, %loop-cont.kw-exit-block_crit_edge ]
  %f-nicht_speichern.2 = phi {}* [ undef, %continue ], [ %f-nicht_speichern.3, %loop-cont.kw-exit-block_crit_edge ]
  %G148352.1 = phi {}* [ %49, %continue ], [ %G148352.2, %loop-cont.kw-exit-block_crit_edge ]
  %ausnahmebedingung.2 = phi {}* [ undef, %continue ], [ %ausnahmebedingung.3, %loop-cont.kw-exit-block_crit_edge ]
  %G148353.1 = phi {}* [ %49, %continue ], [ %G148353.2, %loop-cont.kw-exit-block_crit_edge ]
  %stream.2 = phi {}* [ undef, %continue ], [ %stream.3, %loop-cont.kw-exit-block_crit_edge ]
  %54 = icmp eq {}* %G148353.1, %53
  %stream.0 = select i1 %54, {}* %52, {}* %stream.2
  %55 = icmp eq {}* %G148352.1, %53
  %ausnahmebedingung.0 = select i1 %55, {}* %53, {}* %ausnahmebedingung.2
  %56 = icmp eq {}* %G148351.1, %53
  %f-nicht_speichern.0 = select i1 %56, {}* %53, {}* %f-nicht_speichern.2
  %57 = icmp eq {}* %f-nicht_speichern.0, %53
  br i1 %57, label %tag41, label %tag55

loop-cont:                                        ; preds = %advance-arg-idx-block
  invoke void @cc_ifBadKeywordArgumentException(i64 %phi-this-was-aok, i64 %phi.aok-bad-good.bad-kw-idx, {}* %vaarg63, { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"YAS-SPEICHER_NACH_UNTEN^COMMON-LISP-USER^FN^^^DESC")
          to label %loop-cont.kw-exit-block_crit_edge unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

loop-cont.kw-exit-block_crit_edge:                ; preds = %loop-cont
  %.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %.pre378 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  br label %kw-exit-block

normal-dest67:                                    ; preds = %loop-kw-args
  %58 = icmp eq {}* %50, %vaarg63
  br i1 %58, label %aok-block, label %"kw-:STREAM-test"

aok-block:                                        ; preds = %normal-dest67
  %59 = call i64 @cc_allowOtherKeywords(i64 %phi-saw-aok, {}* %vaarg66)
  br label %advance-arg-idx-block

advance-arg-idx-block:                            ; preds = %"kw-:F-NICHT_SPEICHERN-test", %"kw-:AUSNAHMEBEDINGUNG-test", %"kw-:STREAM-test", %not-seen-before-kw-block, %not-seen-before-kw-block69, %not-seen-before-kw-block72, %next-kw-block73, %aok-block
  %G148351.2 = phi {}* [ %G148351.0, %aok-block ], [ %G148351.0, %next-kw-block73 ], [ %48, %not-seen-before-kw-block72 ], [ %G148351.0, %not-seen-before-kw-block69 ], [ %G148351.0, %not-seen-before-kw-block ], [ %G148351.0, %"kw-:STREAM-test" ], [ %G148351.0, %"kw-:AUSNAHMEBEDINGUNG-test" ], [ %G148351.0, %"kw-:F-NICHT_SPEICHERN-test" ]
  %f-nicht_speichern.3 = phi {}* [ %f-nicht_speichern.1, %aok-block ], [ %f-nicht_speichern.1, %next-kw-block73 ], [ %vaarg66, %not-seen-before-kw-block72 ], [ %f-nicht_speichern.1, %not-seen-before-kw-block69 ], [ %f-nicht_speichern.1, %not-seen-before-kw-block ], [ %f-nicht_speichern.1, %"kw-:STREAM-test" ], [ %f-nicht_speichern.1, %"kw-:AUSNAHMEBEDINGUNG-test" ], [ %f-nicht_speichern.1, %"kw-:F-NICHT_SPEICHERN-test" ]
  %G148352.2 = phi {}* [ %G148352.0, %aok-block ], [ %G148352.0, %next-kw-block73 ], [ %G148352.0, %not-seen-before-kw-block72 ], [ %48, %not-seen-before-kw-block69 ], [ %G148352.0, %not-seen-before-kw-block ], [ %G148352.0, %"kw-:STREAM-test" ], [ %G148352.0, %"kw-:AUSNAHMEBEDINGUNG-test" ], [ %G148352.0, %"kw-:F-NICHT_SPEICHERN-test" ]
  %ausnahmebedingung.3 = phi {}* [ %ausnahmebedingung.1, %aok-block ], [ %ausnahmebedingung.1, %next-kw-block73 ], [ %ausnahmebedingung.1, %not-seen-before-kw-block72 ], [ %vaarg66, %not-seen-before-kw-block69 ], [ %ausnahmebedingung.1, %not-seen-before-kw-block ], [ %ausnahmebedingung.1, %"kw-:STREAM-test" ], [ %ausnahmebedingung.1, %"kw-:AUSNAHMEBEDINGUNG-test" ], [ %ausnahmebedingung.1, %"kw-:F-NICHT_SPEICHERN-test" ]
  %G148353.2 = phi {}* [ %G148353.0, %aok-block ], [ %G148353.0, %next-kw-block73 ], [ %G148353.0, %not-seen-before-kw-block72 ], [ %G148353.0, %not-seen-before-kw-block69 ], [ %48, %not-seen-before-kw-block ], [ %G148353.0, %"kw-:STREAM-test" ], [ %G148353.0, %"kw-:AUSNAHMEBEDINGUNG-test" ], [ %G148353.0, %"kw-:F-NICHT_SPEICHERN-test" ]
  %stream.3 = phi {}* [ %stream.1, %aok-block ], [ %stream.1, %next-kw-block73 ], [ %stream.1, %not-seen-before-kw-block72 ], [ %stream.1, %not-seen-before-kw-block69 ], [ %vaarg66, %not-seen-before-kw-block ], [ %stream.1, %"kw-:STREAM-test" ], [ %stream.1, %"kw-:AUSNAHMEBEDINGUNG-test" ], [ %stream.1, %"kw-:F-NICHT_SPEICHERN-test" ]
  %phi-this-was-aok = phi i64 [ %59, %aok-block ], [ %phi-saw-aok, %next-kw-block73 ], [ %phi-saw-aok, %not-seen-before-kw-block72 ], [ %phi-saw-aok, %not-seen-before-kw-block69 ], [ %phi-saw-aok, %not-seen-before-kw-block ], [ %phi-saw-aok, %"kw-:STREAM-test" ], [ %phi-saw-aok, %"kw-:AUSNAHMEBEDINGUNG-test" ], [ %phi-saw-aok, %"kw-:F-NICHT_SPEICHERN-test" ]
  %phi.aok-bad-good.bad-kw-idx = phi i64 [ %phi-bad-kw-idx, %aok-block ], [ %68, %next-kw-block73 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block72 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block69 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block ], [ %phi-bad-kw-idx, %"kw-:STREAM-test" ], [ %phi-bad-kw-idx, %"kw-:AUSNAHMEBEDINGUNG-test" ], [ %phi-bad-kw-idx, %"kw-:F-NICHT_SPEICHERN-test" ]
  %60 = add i64 %phi-reg-arg-idx, 2
  %61 = icmp slt i64 %60, %nargs
  br i1 %61, label %loop-kw-args, label %loop-cont

"kw-:STREAM-test":                                ; preds = %normal-dest67
  %62 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 279), align 8
  %63 = call i64 @cc_matchKeywordOnce({}* %62, {}* %vaarg63, {}* %G148353.0)
  switch i64 %63, label %not-seen-before-kw-block [
    i64 0, label %"kw-:AUSNAHMEBEDINGUNG-test"
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block:                         ; preds = %"kw-:STREAM-test"
  br label %advance-arg-idx-block

"kw-:AUSNAHMEBEDINGUNG-test":                     ; preds = %"kw-:STREAM-test"
  %64 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 288), align 16
  %65 = call i64 @cc_matchKeywordOnce({}* %64, {}* %vaarg63, {}* %G148352.0)
  switch i64 %65, label %not-seen-before-kw-block69 [
    i64 0, label %"kw-:F-NICHT_SPEICHERN-test"
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block69:                       ; preds = %"kw-:AUSNAHMEBEDINGUNG-test"
  br label %advance-arg-idx-block

"kw-:F-NICHT_SPEICHERN-test":                     ; preds = %"kw-:AUSNAHMEBEDINGUNG-test"
  %66 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 290), align 16
  %67 = call i64 @cc_matchKeywordOnce({}* %66, {}* %vaarg63, {}* %G148351.0)
  switch i64 %67, label %not-seen-before-kw-block72 [
    i64 0, label %next-kw-block73
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block72:                       ; preds = %"kw-:F-NICHT_SPEICHERN-test"
  br label %advance-arg-idx-block

next-kw-block73:                                  ; preds = %"kw-:F-NICHT_SPEICHERN-test"
  %68 = call i64 @cc_trackFirstUnexpectedKeyword(i64 %phi-bad-kw-idx, i64 %phi-reg-arg-idx)
  br label %advance-arg-idx-block

normal-dest75:                                    ; preds = %tag
  %69 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 279), align 8
  %ptrtoint = ptrtoint {}* %10 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %70 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %10, i64 3, {}* %vaarg, {}* %69, {}* %stream.0, {}* null)
          to label %tag17 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest84:                                    ; preds = %tag5
  %71 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %72 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %73 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %74 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint85 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint86 = add i64 %ptrtoint85, 7
  %entry-point-addr87 = inttoptr i64 %entry-point-addr-uint86 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point88 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr87, align 8
  %75 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point88({}* %12, i64 5, {}* %71, {}* %72, {}* %"%DOLIST-VAR.0376", {}* %73, {}* %74)
          to label %normal-dest91 unwind label %cleanup-lpad.loopexit

normal-dest91:                                    ; preds = %normal-dest84
  %.elt322 = extractvalue { {}*, i64 } %75, 0
  %.elt324 = extractvalue { {}*, i64 } %75, 1
  %cond291 = icmp eq i64 %.elt324, 0
  %76 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %"%DOLIST-VAR.1" = select i1 %cond291, {}* %76, {}* %.elt322
  br label %tag14.backedge

tag14.backedge:                                   ; preds = %normal-dest91, %tag34
  %77 = phi {}* [ %.pre380, %tag34 ], [ %76, %normal-dest91 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %34, %tag34 ], [ %"%DOLIST-VAR.1", %normal-dest91 ]
  %78 = icmp eq {}* %"%DOLIST-VAR.0.be", %77
  br i1 %78, label %tag7, label %tag35

header-check-br:                                  ; preds = %header-check-br279
  %.off371 = add i64 %122, -1001
  %79 = icmp ult i64 %.off371, 5
  br i1 %79, label %maybe-more-tests, label %tag29

maybe-more-tests:                                 ; preds = %header-check-br
  %80 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %81 = invoke {}* @cc_safe_fdefinition({}* %80)
          to label %normal-dest240 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest100:                                   ; preds = %tag9
  %82 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %83 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %84 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %85 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 283), align 8
  %ptrtoint101 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint102 = add i64 %ptrtoint101, 7
  %entry-point-addr103 = inttoptr i64 %entry-point-addr-uint102 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point104 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr103, align 8
  %86 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point104({}* %17, i64 5, {}* %82, {}* %83, {}* %ausnahmebedingung.0, {}* %84, {}* %85)
          to label %normal-dest107 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest107:                                   ; preds = %normal-dest100
  %.elt333 = extractvalue { {}*, i64 } %86, 0
  %.elt335 = extractvalue { {}*, i64 } %86, 1
  %cond293 = icmp eq i64 %.elt335, 0
  %87 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148443.1 = select i1 %cond293, {}* %87, {}* %.elt333
  br label %tag18

header-check-br113:                               ; preds = %header-check-br148
  %.off369 = add i64 %95, -1001
  %88 = icmp ult i64 %.off369, 5
  br i1 %88, label %maybe-more-tests121, label %tag9

maybe-more-tests121:                              ; preds = %header-check-br113
  %89 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %90 = invoke {}* @cc_safe_fdefinition({}* %89)
          to label %normal-dest206 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest123:                                   ; preds = %tag17
  %ptrtoint124 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint125 = add i64 %ptrtoint124, 7
  %entry-point-addr126 = inttoptr i64 %entry-point-addr-uint125 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point127 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr126, align 8
  %91 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point127({}* %19, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest130 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest130:                                   ; preds = %normal-dest123
  %.elt308 = extractvalue { {}*, i64 } %91, 0
  %.elt310 = extractvalue { {}*, i64 } %91, 1
  %cond289 = icmp eq i64 %.elt310, 0
  %92 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148463.0 = select i1 %cond289, {}* %92, {}* %.elt308
  %93 = icmp eq {}* %G148463.0, %92
  br i1 %93, label %tag7, label %tag31

normal-dest142:                                   ; preds = %tag18
  %.elt337 = extractvalue { {}*, i64 } %20, 0
  %.elt339 = extractvalue { {}*, i64 } %20, 1
  %cond294 = icmp eq i64 %.elt339, 0
  %94 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148441.1 = select i1 %cond294, {}* %94, {}* %.elt337
  br label %tag27

header-check-br148:                               ; preds = %tag21
  %irc-bit-cast152 = bitcast {}* %ausnahmebedingung.0 to i8*
  %gep153 = getelementptr inbounds i8, i8* %irc-bit-cast152, i64 -9
  %irc-bit-cast154 = bitcast i8* %gep153 to i64*
  %95 = load i64, i64* %irc-bit-cast154, align 8
  %.off = add i64 %95, -913
  %96 = icmp ult i64 %.off, 85
  br i1 %96, label %tag18, label %header-check-br113

normal-dest162:                                   ; preds = %tag29
  %97 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %98 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %99 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %100 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 276), align 16
  %ptrtoint163 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint164 = add i64 %ptrtoint163, 7
  %entry-point-addr165 = inttoptr i64 %entry-point-addr-uint164 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point166 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr165, align 8
  %101 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point166({}* %27, i64 5, {}* %97, {}* %98, {}* %f-nicht_speichern.0, {}* %99, {}* %100)
          to label %normal-dest169 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest169:                                   ; preds = %normal-dest162
  %.elt = extractvalue { {}*, i64 } %101, 0
  %.elt298 = extractvalue { {}*, i64 } %101, 1
  %cond = icmp eq i64 %.elt298, 0
  %102 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148478.1 = select i1 %cond, {}* %102, {}* %.elt
  br label %tag50

normal-dest182:                                   ; preds = %tag33
  %103 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 279), align 8
  %104 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 288), align 16
  %105 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 290), align 16
  %ptrtoint183 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint184 = add i64 %ptrtoint183, 7
  %entry-point-addr185 = inttoptr i64 %entry-point-addr-uint184 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point186 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr185, align 8
  %106 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point186({}* %31, i64 7, {}* %K.0, {}* %103, {}* %stream.0, {}* %104, {}* %ausnahmebedingung.0, {}* %105, {}* %f-nicht_speichern.0)
          to label %normal-dest189 unwind label %cleanup-lpad.loopexit

normal-dest189:                                   ; preds = %normal-dest182
  br i1 %consp-test202, label %tag34, label %tag46

normal-dest206:                                   ; preds = %maybe-more-tests121
  %ptrtoint207 = ptrtoint {}* %90 to i64
  %entry-point-addr-uint208 = add i64 %ptrtoint207, 7
  %entry-point-addr209 = inttoptr i64 %entry-point-addr-uint208 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point210 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr209, align 8
  %107 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point210({}* %90, i64 1, {}* nonnull %ausnahmebedingung.0, {}* null, {}* null, {}* null)
          to label %normal-dest213 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest213:                                   ; preds = %normal-dest206
  %.elt341 = extractvalue { {}*, i64 } %107, 0
  %.elt343 = extractvalue { {}*, i64 } %107, 1
  %cond295 = icmp eq i64 %.elt343, 0
  %108 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148443.2 = select i1 %cond295, {}* %108, {}* %.elt341
  br label %tag18

normal-dest220:                                   ; preds = %tag44
  %109 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 39), align 8
  %ptrtoint221 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint222 = add i64 %ptrtoint221, 7
  %entry-point-addr223 = inttoptr i64 %entry-point-addr-uint222 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point224 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr223, align 8
  %110 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point224({}* %41, i64 2, {}* %vaarg, {}* %109, {}* null, {}* null)
          to label %normal-dest227 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest227:                                   ; preds = %normal-dest220
  %.elt312 = extractvalue { {}*, i64 } %110, 0
  %.elt314 = extractvalue { {}*, i64 } %110, 1
  %cond290 = icmp eq i64 %.elt314, 0
  %111 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %"%DOLIST-VAR.2" = select i1 %cond290, {}* %111, {}* %.elt312
  %112 = icmp eq {}* %"%DOLIST-VAR.2", %111
  br i1 %112, label %tag7, label %tag35.preheader

tag35.preheader:                                  ; preds = %normal-dest227
  br label %tag35

normal-dest240:                                   ; preds = %maybe-more-tests
  %ptrtoint241 = ptrtoint {}* %81 to i64
  %entry-point-addr-uint242 = add i64 %ptrtoint241, 7
  %entry-point-addr243 = inttoptr i64 %entry-point-addr-uint242 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point244 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr243, align 8
  %113 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point244({}* %81, i64 1, {}* nonnull %f-nicht_speichern.0, {}* null, {}* null, {}* null)
          to label %normal-dest247 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest247:                                   ; preds = %normal-dest240
  %.elt345 = extractvalue { {}*, i64 } %113, 0
  %.elt347 = extractvalue { {}*, i64 } %113, 1
  %cond296 = icmp eq i64 %.elt347, 0
  %114 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148478.2 = select i1 %cond296, {}* %114, {}* %.elt345
  br label %tag50

normal-dest259:                                   ; preds = %tag50
  %.elt300 = extractvalue { {}*, i64 } %45, 0
  %.elt302 = extractvalue { {}*, i64 } %45, 1
  %cond288 = icmp eq i64 %.elt302, 0
  %115 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %object.1 = select i1 %cond288, {}* %115, {}* %.elt300
  %.val.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  br label %tag41

normal-dest266:                                   ; preds = %tag51
  %116 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %117 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %118 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %119 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint267 = ptrtoint {}* %47 to i64
  %entry-point-addr-uint268 = add i64 %ptrtoint267, 7
  %entry-point-addr269 = inttoptr i64 %entry-point-addr-uint268 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point270 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr269, align 8
  %120 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point270({}* %47, i64 5, {}* %116, {}* %117, {}* %"%DOLIST-VAR.0376", {}* %118, {}* %119)
          to label %normal-dest273 unwind label %cleanup-lpad.loopexit

normal-dest273:                                   ; preds = %normal-dest266
  %.elt326 = extractvalue { {}*, i64 } %120, 0
  %.elt328 = extractvalue { {}*, i64 } %120, 1
  %cond292 = icmp eq i64 %.elt328, 0
  %121 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %K.1 = select i1 %cond292, {}* %121, {}* %.elt326
  br label %tag33

header-check-br279:                               ; preds = %tag55
  %irc-bit-cast283 = bitcast {}* %f-nicht_speichern.0 to i8*
  %gep284 = getelementptr inbounds i8, i8* %irc-bit-cast283, i64 -9
  %irc-bit-cast285 = bitcast i8* %gep284 to i64*
  %122 = load i64, i64* %irc-bit-cast285, align 8
  %.off370 = add i64 %122, -913
  %123 = icmp ult i64 %.off370, 85
  br i1 %123, label %tag50, label %header-check-br
}

declare void @cc_ifNotKeywordException({}*, i64, { i32, i32, i8*, i8* }*, { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i64 @cc_allowOtherKeywords(i64, {}*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i64 @cc_matchKeywordOnce({}*, {}*, {}*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i64 @cc_trackFirstUnexpectedKeyword(i64, i64) local_unnamed_addr #1

declare void @cc_ifBadKeywordArgumentException(i64, i64, {}*, { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }*) local_unnamed_addr #3

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^201^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !43 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^201^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest10, %header-check-br34
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest21 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G148666.0 = phi {}* [ %18, %header-check-br ], [ %G148666.1, %normal-dest17 ], [ %G148666.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 277), align 8
  %ptrtoint43 = ptrtoint {}* %G148666.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G148666.0, i64 2, {}* %"closure->YAS-SPEICHER_EIN_OBJEKT", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest21, %tag2, %normal-dest13, %maybe-more-tests42, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 277), align 8
  %"closure->YAS-SPEICHER_EIN_OBJEKT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS-SPEICHER_EIN_OBJEKT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-SPEICHER_EIN_OBJEKT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 6885, i64 201, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br34

normal-dest13:                                    ; preds = %maybe-more-tests42
  %ptrtoint14 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %31, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148666.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag4

normal-dest21:                                    ; preds = %tag2
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 375), align 8
  %ptrtoint22 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %12, i64 5, {}* %23, {}* %24, {}* %18, {}* %25, {}* %26)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt = extractvalue { {}*, i64 } %27, 0
  %.elt84 = extractvalue { {}*, i64 } %27, 1
  %cond = icmp eq i64 %.elt84, 0
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148666.2 = select i1 %cond, {}* %28, {}* %.elt
  br label %tag4

header-check-br34:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %29 = icmp ult i64 %.off106, 5
  br i1 %29, label %maybe-more-tests42, label %tag2

maybe-more-tests42:                               ; preds = %header-check-br34
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 376), align 16
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->YAS-SPEICHER_EIN_OBJEKT", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 378), align 16
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->YAS-SPEICHER_EIN_OBJEKT", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 804 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 277), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS-SPEICHER_EIN_OBJEKT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !44 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %normal-dest1190
  %ptrtoint = ptrtoint {}* %"closure->LAMBDA1613" to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag265

tag3:                                             ; preds = %tag211
  %9 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 140), align 16
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest336 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag6:                                             ; preds = %tag288
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 146), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest364 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag10:                                            ; preds = %normal-dest1649, %header-check-br2084
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest401 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag14:                                            ; preds = %normal-dest2208, %normal-dest1979, %header-check-br680
  %G149767.0 = phi {}* [ %"closure->LAMBDA1305", %header-check-br680 ], [ %G149767.1, %normal-dest1979 ], [ %G149767.2, %normal-dest2208 ]
  %ptrtoint423 = ptrtoint {}* %G149767.0 to i64
  %entry-point-addr-uint424 = add i64 %ptrtoint423, 7
  %entry-point-addr425 = inttoptr i64 %entry-point-addr-uint424 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point426 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr425, align 8
  %15 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point426({}* %G149767.0, i64 2, {}* %G148511.0, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest429 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag22:                                            ; preds = %header-check-br1655, %normal-dest921, %normal-dest408
  %G149474.0 = phi {}* [ %G149474.1, %normal-dest408 ], [ %G149474.2, %normal-dest921 ], [ %"closure->LAMBDA", %header-check-br1655 ]
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 35), align 8
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest493 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag25:                                            ; preds = %tag231, %header-check-br414
  %19 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest540 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag26:                                            ; preds = %normal-dest1427
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %532, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.7", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.7^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 6885, i64 201, i64 0, i64 0)
          to label %normal-dest553 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag27:                                            ; preds = %tag59, %header-check-br2185
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest555 unwind label %cleanup-lpad.loopexit

tag35:                                            ; preds = %normal-dest1470
  %ptrtoint625 = ptrtoint {}* %"closure->LAMBDA1471" to i64
  %tag-only626 = and i64 %ptrtoint625, 7
  %test627 = icmp eq i64 %tag-only626, 1
  br i1 %test627, label %header-check-br624, label %tag252

tag37:                                            ; preds = %tag255, %tag287.backedge, %normal-dest866
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 236), align 16
  %"closure->LAMBDA648" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %23, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.8", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.8^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 6885, i64 201, i64 0, i64 0)
          to label %normal-dest647 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag38:                                            ; preds = %normal-dest2736, %normal-dest1163, %header-check-br749
  %G148701.0 = phi {}* [ %"closure->LAMBDA648", %header-check-br749 ], [ %G148701.1, %normal-dest1163 ], [ %G148701.2, %normal-dest2736 ]
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 370), align 16
  %ptrtoint653 = ptrtoint {}* %G148701.0 to i64
  %entry-point-addr-uint654 = add i64 %ptrtoint653, 7
  %entry-point-addr655 = inttoptr i64 %entry-point-addr-uint654 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point656 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr655, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point656({}* %G148701.0, i64 2, {}* %OUT148634.0, {}* %24, {}* null, {}* null)
          to label %normal-dest659 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag39:                                            ; preds = %tag211
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 146), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest667 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag40:                                            ; preds = %tag200
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 146), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest690 unwind label %cleanup-lpad.loopexit

tag41:                                            ; preds = %normal-dest1318
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 143), align 8
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest713 unwind label %cleanup-lpad.loopexit

tag43:                                            ; preds = %normal-dest2840
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 143), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest736 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag48:                                            ; preds = %normal-dest935
  %ptrtoint768 = ptrtoint {}* %"closure->LAMBDA2909" to i64
  %tag-only769 = and i64 %ptrtoint768, 7
  %test770 = icmp eq i64 %tag-only769, 1
  br i1 %test770, label %header-check-br767, label %tag135

tag51:                                            ; preds = %normal-dest343
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 143), align 8
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest777 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag52:                                            ; preds = %normal-dest2798, %header-check-br2602, %normal-dest1407
  %G149790.0 = phi {}* [ %G149790.1, %normal-dest1407 ], [ %"closure->LAMBDA1305", %header-check-br2602 ], [ %G149790.2, %normal-dest2798 ]
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 152), align 16
  %37 = invoke {}* @cc_safe_symbol_value({}* %36)
          to label %normal-dest800 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag53:                                            ; preds = %tag119
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 140), align 16
  %39 = invoke {}* @cc_safe_fdefinition({}* %38)
          to label %normal-dest813 unwind label %cleanup-lpad.loopexit

tag54:                                            ; preds = %normal-dest2840
  %ptrtoint827 = ptrtoint {}* %"closure->LAMBDA648" to i64
  %tag-only828 = and i64 %ptrtoint827, 7
  %test829 = icmp eq i64 %tag-only828, 1
  br i1 %test829, label %header-check-br826, label %tag79

tag56:                                            ; preds = %normal-dest720, %header-check-br1809
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest845 unwind label %cleanup-lpad.loopexit

tag58:                                            ; preds = %normal-dest518, %normal-dest3074, %normal-dest2946, %normal-dest2381, %normal-dest2356, %normal-dest2247, %normal-dest1931, %normal-dest1736
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 328), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest859 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag59:                                            ; preds = %normal-dest1612
  %ptrtoint873 = ptrtoint {}* %"closure->LAMBDA1613" to i64
  %tag-only874 = and i64 %ptrtoint873, 7
  %test875 = icmp eq i64 %tag-only874, 1
  br i1 %test875, label %header-check-br872, label %tag27

tag60:                                            ; preds = %normal-dest3105
  %ptrtoint882 = ptrtoint {}* %"closure->LAMBDA3106" to i64
  %tag-only883 = and i64 %ptrtoint882, 7
  %test884 = icmp eq i64 %tag-only883, 1
  br i1 %test884, label %header-check-br881, label %tag75

tag66:                                            ; preds = %normal-dest1956, %header-check-br2929
  %44 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %45 = invoke {}* @cc_safe_fdefinition({}* %44)
          to label %normal-dest900 unwind label %cleanup-lpad.loopexit

tag68:                                            ; preds = %tag288
  %46 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 140), align 16
  %47 = invoke {}* @cc_safe_fdefinition({}* %46)
          to label %normal-dest928 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag73:                                            ; preds = %normal-dest1318
  %ptrtoint970 = ptrtoint {}* %"closure->LAMBDA2195" to i64
  %tag-only971 = and i64 %ptrtoint970, 7
  %test972 = icmp eq i64 %tag-only971, 1
  br i1 %test972, label %header-check-br969, label %tag295

tag74:                                            ; preds = %normal-dest2430, %header-check-br1390, %normal-dest394
  %G148727.0 = phi {}* [ %G148727.1, %normal-dest394 ], [ %"closure->LAMBDA648", %header-check-br1390 ], [ %G148727.2, %normal-dest2430 ]
  %48 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 370), align 16
  %ptrtoint979 = ptrtoint {}* %G148727.0 to i64
  %entry-point-addr-uint980 = add i64 %ptrtoint979, 7
  %entry-point-addr981 = inttoptr i64 %entry-point-addr-uint980 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point982 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr981, align 8
  %49 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point982({}* %G148727.0, i64 2, {}* %G148642.0, {}* %48, {}* null, {}* null)
          to label %normal-dest985 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag75:                                            ; preds = %tag60, %header-check-br1565
  %50 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %51 = invoke {}* @cc_safe_fdefinition({}* %50)
          to label %normal-dest1000 unwind label %cleanup-lpad.loopexit

tag76:                                            ; preds = %header-check-br2134, %normal-dest1341, %normal-dest618
  %G149726.0 = phi {}* [ %G149726.1, %normal-dest618 ], [ %G149726.2, %normal-dest1341 ], [ %"closure->LAMBDA1305", %header-check-br2134 ]
  %ptrtoint1013 = ptrtoint {}* %G149726.0 to i64
  %entry-point-addr-uint1014 = add i64 %ptrtoint1013, 7
  %entry-point-addr1015 = inttoptr i64 %entry-point-addr-uint1014 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1016 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1015, align 8
  %52 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1016({}* %G149726.0, i64 2, {}* %stream.0, {}* %vaarg, {}* null, {}* null)
          to label %tag120 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag77:                                            ; preds = %normal-dest1597, %header-check-br703, %normal-dest641
  %G149015.0 = phi {}* [ %G149015.1, %normal-dest641 ], [ %"closure->LAMBDA1613", %header-check-br703 ], [ %G149015.2, %normal-dest1597 ]
  %53 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 350), align 16
  %ptrtoint1024 = ptrtoint {}* %G149015.0 to i64
  %entry-point-addr-uint1025 = add i64 %ptrtoint1024, 7
  %entry-point-addr1026 = inttoptr i64 %entry-point-addr-uint1025 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1027 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1026, align 8
  %54 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1027({}* %G149015.0, i64 3, {}* %G148606.0, {}* %A.0, {}* %53, {}* null)
          to label %normal-dest1030 unwind label %cleanup-lpad.loopexit

tag79:                                            ; preds = %tag54, %header-check-br1324
  %55 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %56 = invoke {}* @cc_safe_fdefinition({}* %55)
          to label %normal-dest1049 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag80:                                            ; preds = %normal-dest371, %header-check-br1818
  %57 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %58 = invoke {}* @cc_safe_fdefinition({}* %57)
          to label %normal-dest1063 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag81:                                            ; preds = %normal-dest2486, %header-check-br2689
  %59 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %60 = invoke {}* @cc_safe_fdefinition({}* %59)
          to label %normal-dest1077 unwind label %cleanup-lpad.loopexit

tag87:                                            ; preds = %tag296, %header-check-br474
  %61 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %62 = invoke {}* @cc_safe_fdefinition({}* %61)
          to label %normal-dest1105 unwind label %cleanup-lpad.loopexit

tag95:                                            ; preds = %normal-dest2114, %header-check-br1701, %normal-dest1098
  %G149325.0 = phi {}* [ %G149325.1, %normal-dest1098 ], [ %"closure->LAMBDA2195", %header-check-br1701 ], [ %G149325.2, %normal-dest2114 ]
  %63 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 152), align 16
  %64 = invoke {}* @cc_safe_symbol_value({}* %63)
          to label %normal-dest1170 unwind label %cleanup-lpad.loopexit

tag96:                                            ; preds = %tag200
  %65 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 140), align 16
  %66 = invoke {}* @cc_safe_fdefinition({}* %65)
          to label %normal-dest1183 unwind label %cleanup-lpad.loopexit

tag98:                                            ; preds = %tag255
  %67 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %68 = invoke {}* @cc_safe_fdefinition({}* %67)
          to label %normal-dest1197 unwind label %cleanup-lpad.loopexit

tag100:                                           ; preds = %normal-dest3052
  %69 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %70 = invoke {}* @cc_safe_fdefinition({}* %69)
          to label %normal-dest1212 unwind label %cleanup-lpad.loopexit

tag103:                                           ; preds = %normal-dest647
  %ptrtoint1268 = ptrtoint {}* %"closure->LAMBDA648" to i64
  %tag-only1269 = and i64 %ptrtoint1268, 7
  %test1270 = icmp eq i64 %tag-only1269, 1
  br i1 %test1270, label %header-check-br1267, label %tag221

tag106:                                           ; preds = %normal-dest2770, %normal-dest2315, %header-check-br1267
  %G148751.0 = phi {}* [ %"closure->LAMBDA648", %header-check-br1267 ], [ %G148751.1, %normal-dest2315 ], [ %G148751.2, %normal-dest2770 ]
  %71 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 152), align 16
  %72 = invoke {}* @cc_safe_symbol_value({}* %71)
          to label %normal-dest1277 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag108:                                           ; preds = %normal-dest2128, %normal-dest1056, %header-check-br826
  %G148685.0 = phi {}* [ %"closure->LAMBDA648", %header-check-br826 ], [ %G148685.1, %normal-dest1056 ], [ %G148685.2, %normal-dest2128 ]
  %73 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 370), align 16
  %ptrtoint1291 = ptrtoint {}* %G148685.0 to i64
  %entry-point-addr-uint1292 = add i64 %ptrtoint1291, 7
  %entry-point-addr1293 = inttoptr i64 %entry-point-addr-uint1292 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1294 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1293, align 8
  %74 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1294({}* %G148685.0, i64 2, {}* %stream.0, {}* %73, {}* null, {}* null)
          to label %normal-dest1297 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag110:                                           ; preds = %tag114
  %75 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 140), align 16
  %76 = invoke {}* @cc_safe_fdefinition({}* %75)
          to label %normal-dest1311 unwind label %cleanup-lpad.loopexit

tag112:                                           ; preds = %tag196, %header-check-br758
  %77 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %78 = invoke {}* @cc_safe_fdefinition({}* %77)
          to label %normal-dest1334 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag114:                                           ; preds = %normal-dest2194
  %79 = icmp eq {}* %stream.0, %.val4089
  %G149319.0 = select i1 %79, {}* %712, {}* %.val4089
  %80 = icmp eq {}* %G149319.0, %.val4089
  br i1 %80, label %tag110, label %tag133

tag115:                                           ; preds = %normal-dest1879, %header-check-br2899
  %81 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %82 = invoke {}* @cc_safe_fdefinition({}* %81)
          to label %normal-dest1354 unwind label %cleanup-lpad.loopexit

tag116:                                           ; preds = %normal-dest2893
  %ptrtoint1368 = ptrtoint {}* %"closure->LAMBDA" to i64
  %tag-only1369 = and i64 %ptrtoint1368, 7
  %test1370 = icmp eq i64 %tag-only1369, 1
  br i1 %test1370, label %header-check-br1367, label %tag167

tag117:                                           ; preds = %tag301
  %83 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 146), align 16
  %84 = invoke {}* @cc_safe_fdefinition({}* %83)
          to label %normal-dest1377 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag118:                                           ; preds = %tag244, %header-check-br2846
  %85 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %86 = invoke {}* @cc_safe_fdefinition({}* %85)
          to label %normal-dest1400 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag119:                                           ; preds = %normal-dest3105
  %87 = icmp eq {}* %stream.0, %.val4106
  %G149169.0 = select i1 %87, {}* %909, {}* %.val4106
  %88 = icmp eq {}* %G149169.0, %.val4106
  br i1 %88, label %tag53, label %tag165

tag120:                                           ; preds = %normal-dest435, %tag121, %tag76, %normal-dest800
  %89 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 312), align 16
  %90 = invoke {}* @cc_safe_fdefinition({}* %89)
          to label %normal-dest1420 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag121:                                           ; preds = %normal-dest2053, %normal-dest1803, %header-check-br791
  %G149741.0 = phi {}* [ %"closure->LAMBDA1305", %header-check-br791 ], [ %G149741.1, %normal-dest1803 ], [ %G149741.2, %normal-dest2053 ]
  %ptrtoint1433 = ptrtoint {}* %G149741.0 to i64
  %entry-point-addr-uint1434 = add i64 %ptrtoint1433, 7
  %entry-point-addr1435 = inttoptr i64 %entry-point-addr-uint1434 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1436 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1435, align 8
  %91 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1436({}* %G149741.0, i64 2, {}* %OUT148503785.0, {}* %vaarg, {}* null, {}* null)
          to label %tag120 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag125:                                           ; preds = %normal-dest2784, %header-check-br1962, %normal-dest907
  %G148988.0 = phi {}* [ %G148988.1, %normal-dest907 ], [ %"closure->LAMBDA1613", %header-check-br1962 ], [ %G148988.2, %normal-dest2784 ]
  %92 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 350), align 16
  %ptrtoint1445 = ptrtoint {}* %G148988.0 to i64
  %entry-point-addr-uint1446 = add i64 %ptrtoint1445, 7
  %entry-point-addr1447 = inttoptr i64 %entry-point-addr-uint1446 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1448 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1447, align 8
  %93 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1448({}* %G148988.0, i64 3, {}* %OUT1485961444.0, {}* %A.0, {}* %92, {}* null)
          to label %tag161 unwind label %cleanup-lpad.loopexit

tag129:                                           ; preds = %normal-dest1261
  %"closure->LAMBDA1471" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %489, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.10", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.10^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 6885, i64 201, i64 0, i64 0)
          to label %normal-dest1470 unwind label %cleanup-lpad.loopexit

tag130:                                           ; preds = %normal-dest2639, %header-check-br1759
  %94 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %95 = invoke {}* @cc_safe_fdefinition({}* %94)
          to label %normal-dest1477 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag131:                                           ; preds = %normal-dest1583, %tag220
  %A.0 = phi {}* [ %171, %tag220 ], [ %A.1, %normal-dest1583 ]
  %96 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 330), align 16
  %97 = invoke {}* @cc_safe_fdefinition({}* %96)
          to label %normal-dest1491 unwind label %cleanup-lpad.loopexit

tag133:                                           ; preds = %tag114
  %98 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 146), align 16
  %99 = invoke {}* @cc_safe_fdefinition({}* %98)
          to label %normal-dest1519 unwind label %cleanup-lpad.loopexit

tag135:                                           ; preds = %tag48, %header-check-br2156
  %100 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %101 = invoke {}* @cc_safe_fdefinition({}* %100)
          to label %normal-dest1543 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag139:                                           ; preds = %tag250
  %102 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %103 = invoke {}* @cc_safe_fdefinition({}* %102)
          to label %normal-dest1575 unwind label %cleanup-lpad.loopexit

tag140:                                           ; preds = %normal-dest697, %header-check-br447
  %104 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %105 = invoke {}* @cc_safe_fdefinition({}* %104)
          to label %normal-dest1590 unwind label %cleanup-lpad.loopexit

tag142:                                           ; preds = %normal-dest1261
  %"closure->LAMBDA1613" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %489, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.11", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.11^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 6885, i64 201, i64 0, i64 0)
          to label %normal-dest1612 unwind label %cleanup-lpad.loopexit

tag143:                                           ; preds = %normal-dest820
  %ptrtoint1619 = ptrtoint {}* %"closure->LAMBDA3106" to i64
  %tag-only1620 = and i64 %ptrtoint1619, 7
  %test1621 = icmp eq i64 %tag-only1620, 1
  br i1 %test1621, label %header-check-br1618, label %tag266

tag145:                                           ; preds = %tag293
  %106 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 146), align 16
  %107 = invoke {}* @cc_safe_fdefinition({}* %106)
          to label %normal-dest1642 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag146:                                           ; preds = %normal-dest1526, %header-check-br2568
  %108 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %109 = invoke {}* @cc_safe_fdefinition({}* %108)
          to label %normal-dest1665 unwind label %cleanup-lpad.loopexit

tag148:                                           ; preds = %tag307
  %110 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 146), align 16
  %111 = invoke {}* @cc_safe_fdefinition({}* %110)
          to label %normal-dest1679 unwind label %cleanup-lpad.loopexit

tag150:                                           ; preds = %normal-dest2194
  %ptrtoint1702 = ptrtoint {}* %"closure->LAMBDA2195" to i64
  %tag-only1703 = and i64 %ptrtoint1702, 7
  %test1704 = icmp eq i64 %tag-only1703, 1
  br i1 %test1704, label %header-check-br1701, label %tag194

tag151:                                           ; preds = %normal-dest1851, %normal-dest1070, %header-check-br377
  %G149623.0 = phi {}* [ %"closure->LAMBDA2909", %header-check-br377 ], [ %G149623.1, %normal-dest1070 ], [ %G149623.2, %normal-dest1851 ]
  %112 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 37), align 8
  %113 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %114 = invoke {}* @cc_safe_fdefinition({}* %113)
          to label %normal-dest1711 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag152:                                           ; preds = %normal-dest2272, %normal-dest852, %header-check-br726
  %G149276.0 = phi {}* [ %"closure->LAMBDA2195", %header-check-br726 ], [ %G149276.1, %normal-dest852 ], [ %G149276.2, %normal-dest2272 ]
  %ptrtoint1748 = ptrtoint {}* %G149276.0 to i64
  %entry-point-addr-uint1749 = add i64 %ptrtoint1748, 7
  %entry-point-addr1750 = inttoptr i64 %entry-point-addr-uint1749 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1751 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1750, align 8
  %115 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1751({}* %G149276.0, i64 2, {}* %OUT148560.0, {}* %A.0, {}* null, {}* null)
          to label %tag237 unwind label %cleanup-lpad.loopexit

tag154:                                           ; preds = %normal-dest2683, %header-check-br624, %normal-dest590
  %G148902.0 = phi {}* [ %G148902.1, %normal-dest590 ], [ %"closure->LAMBDA1471", %header-check-br624 ], [ %G148902.2, %normal-dest2683 ]
  %116 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 152), align 16
  %117 = invoke {}* @cc_safe_symbol_value({}* %116)
          to label %normal-dest1769 unwind label %cleanup-lpad.loopexit

tag155:                                           ; preds = %normal-dest784, %header-check-br2278
  %118 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %119 = invoke {}* @cc_safe_fdefinition({}* %118)
          to label %normal-dest1796 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag156:                                           ; preds = %normal-dest2026
  %.elt3304 = extractvalue { {}*, i64 } %674, 0
  %.elt3306 = extractvalue { {}*, i64 } %674, 1
  %cond3153 = icmp eq i64 %.elt3306, 0
  %120 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x2034.0 = select i1 %cond3153, {}* %120, {}* %.elt3304
  %121 = icmp eq {}* %x2034.0, %120
  %.val4086 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %object.0 = select i1 %121, {}* %.val4086, {}* %120
  %122 = icmp eq {}* %object.0, %120
  %G149368.0.pre = select i1 %122, {}* %.val4086, {}* %120
  %123 = icmp eq {}* %G149368.0.pre, %120
  br i1 %123, label %tag300, label %tag204

tag159:                                           ; preds = %normal-dest2553, %header-check-br483
  %124 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %125 = invoke {}* @cc_safe_fdefinition({}* %124)
          to label %normal-dest1828 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag161:                                           ; preds = %tag125, %normal-dest1778, %tag180, %normal-dest2094, %normal-dest2144, %tag219, %normal-dest2329, %normal-dest2457, %normal-dest2585, %tag246, %normal-dest2710, %normal-dest3018, %normal-dest1036, %normal-dest1512
  br i1 %consp-test2674, label %tag214, label %tag255

tag165:                                           ; preds = %tag119
  %126 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 146), align 16
  %127 = invoke {}* @cc_safe_fdefinition({}* %126)
          to label %normal-dest1872 unwind label %cleanup-lpad.loopexit

tag167:                                           ; preds = %tag116, %header-check-br835
  %128 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %129 = invoke {}* @cc_safe_fdefinition({}* %128)
          to label %normal-dest1895 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag169:                                           ; preds = %tag208, %header-check-br2920
  %130 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %131 = invoke {}* @cc_safe_fdefinition({}* %130)
          to label %normal-dest1909 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag171:                                           ; preds = %normal-dest2879, %header-check-br2559, %normal-dest1835
  %G149592.0 = phi {}* [ %G149592.1, %normal-dest1835 ], [ %"closure->LAMBDA2909", %header-check-br2559 ], [ %G149592.2, %normal-dest2879 ]
  %132 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 37), align 8
  %133 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %134 = invoke {}* @cc_safe_fdefinition({}* %133)
          to label %normal-dest1924 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag174:                                           ; preds = %normal-dest1190
  %135 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 143), align 8
  %136 = invoke {}* @cc_safe_fdefinition({}* %135)
          to label %normal-dest1949 unwind label %cleanup-lpad.loopexit

tag180:                                           ; preds = %header-check-br2492, %normal-dest1993, %normal-dest1084
  %G149124.0 = phi {}* [ %G149124.1, %normal-dest1084 ], [ %G149124.2, %normal-dest1993 ], [ %"closure->LAMBDA3106", %header-check-br2492 ]
  %137 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 195), align 8
  %ptrtoint2000 = ptrtoint {}* %G149124.0 to i64
  %entry-point-addr-uint2001 = add i64 %ptrtoint2000, 7
  %entry-point-addr2002 = inttoptr i64 %entry-point-addr-uint2001 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2003 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2002, align 8
  %138 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2003({}* %G149124.0, i64 3, {}* %OUT1485771999.0, {}* %A.0, {}* %137, {}* null)
          to label %tag161 unwind label %cleanup-lpad.loopexit

tag182:                                           ; preds = %tag307
  %139 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 140), align 16
  %140 = invoke {}* @cc_safe_fdefinition({}* %139)
          to label %normal-dest2012 unwind label %cleanup-lpad.loopexit

tag183:                                           ; preds = %normal-dest3139
  %141 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %142 = invoke {}* @cc_safe_fdefinition({}* %141)
          to label %normal-dest2026 unwind label %cleanup-lpad.loopexit

tag187:                                           ; preds = %normal-dest1686, %header-check-br1556
  %143 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %144 = invoke {}* @cc_safe_fdefinition({}* %143)
          to label %normal-dest2060 unwind label %cleanup-lpad.loopexit

tag190:                                           ; preds = %normal-dest3099, %normal-dest2977, %header-check-br969
  %G149261.0 = phi {}* [ %"closure->LAMBDA2195", %header-check-br969 ], [ %G149261.1, %normal-dest2977 ], [ %G149261.2, %normal-dest3099 ]
  %ptrtoint2073 = ptrtoint {}* %G149261.0 to i64
  %entry-point-addr-uint2074 = add i64 %ptrtoint2073, 7
  %entry-point-addr2075 = inttoptr i64 %entry-point-addr-uint2074 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2076 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2075, align 8
  %145 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2076({}* %G149261.0, i64 2, {}* %stream.0, {}* %A.0, {}* null, {}* null)
          to label %tag237 unwind label %cleanup-lpad.loopexit

tag192:                                           ; preds = %header-check-br872, %normal-dest562, %normal-dest357
  %G149039.0 = phi {}* [ %G149039.1, %normal-dest357 ], [ %G149039.2, %normal-dest562 ], [ %"closure->LAMBDA1613", %header-check-br872 ]
  %146 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 152), align 16
  %147 = invoke {}* @cc_safe_symbol_value({}* %146)
          to label %normal-dest2094 unwind label %cleanup-lpad.loopexit

tag194:                                           ; preds = %tag150, %header-check-br890
  %148 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %149 = invoke {}* @cc_safe_fdefinition({}* %148)
          to label %normal-dest2107 unwind label %cleanup-lpad.loopexit

tag196:                                           ; preds = %normal-dest343
  %ptrtoint2135 = ptrtoint {}* %"closure->LAMBDA1305" to i64
  %tag-only2136 = and i64 %ptrtoint2135, 7
  %test2137 = icmp eq i64 %tag-only2136, 1
  br i1 %test2137, label %header-check-br2134, label %tag112

tag197:                                           ; preds = %normal-dest1007, %header-check-br881, %normal-dest576
  %G149175.0 = phi {}* [ %G149175.1, %normal-dest576 ], [ %"closure->LAMBDA3106", %header-check-br881 ], [ %G149175.2, %normal-dest1007 ]
  %150 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 152), align 16
  %151 = invoke {}* @cc_safe_symbol_value({}* %150)
          to label %normal-dest2144 unwind label %cleanup-lpad.loopexit

tag200:                                           ; preds = %normal-dest1612
  %152 = icmp eq {}* %stream.0, %.val4120
  %G149033.0 = select i1 %152, {}* %583, {}* %.val4120
  %153 = icmp eq {}* %G149033.0, %.val4120
  br i1 %153, label %tag96, label %tag40

tag201:                                           ; preds = %normal-dest2406, %header-check-br465
  %154 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %155 = invoke {}* @cc_safe_fdefinition({}* %154)
          to label %normal-dest2172 unwind label %cleanup-lpad.loopexit

tag204:                                           ; preds = %tag156
  %156 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 236), align 16
  %"closure->LAMBDA2195" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %156, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.12", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.12^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 6885, i64 201, i64 0, i64 0)
          to label %normal-dest2194 unwind label %cleanup-lpad.loopexit

tag206:                                           ; preds = %normal-dest674, %header-check-br1118
  %157 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %158 = invoke {}* @cc_safe_fdefinition({}* %157)
          to label %normal-dest2201 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag208:                                           ; preds = %normal-dest2908
  %ptrtoint2215 = ptrtoint {}* %"closure->LAMBDA2909" to i64
  %tag-only2216 = and i64 %ptrtoint2215, 7
  %test2217 = icmp eq i64 %tag-only2216, 1
  br i1 %test2217, label %header-check-br2214, label %tag169

tag211:                                           ; preds = %normal-dest1304
  %159 = icmp eq {}* %stream.0, %.val4083
  %G149784.0 = select i1 %159, {}* %496, {}* %.val4083
  %160 = icmp eq {}* %G149784.0, %.val4083
  br i1 %160, label %tag3, label %tag39

tag214:                                           ; preds = %tag161
  %161 = add i64 %203, 5
  %162 = inttoptr i64 %161 to {}**
  %163 = load {}*, {}** %162, align 8
  %.pre4195 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %tag287.backedge

tag215:                                           ; preds = %header-check-br2645, %normal-dest1484, %normal-dest963
  %G149443.0 = phi {}* [ %G149443.1, %normal-dest963 ], [ %G149443.2, %normal-dest1484 ], [ %"closure->LAMBDA", %header-check-br2645 ]
  %164 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 35), align 8
  %165 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %166 = invoke {}* @cc_safe_fdefinition({}* %165)
          to label %normal-dest2240 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag219:                                           ; preds = %normal-dest2812, %normal-dest1149, %header-check-br
  %G148972.0 = phi {}* [ %"closure->LAMBDA1613", %header-check-br ], [ %G148972.1, %normal-dest1149 ], [ %G148972.2, %normal-dest2812 ]
  %167 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 350), align 16
  %ptrtoint2296 = ptrtoint {}* %G148972.0 to i64
  %entry-point-addr-uint2297 = add i64 %ptrtoint2296, 7
  %entry-point-addr2298 = inttoptr i64 %entry-point-addr-uint2297 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2299 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2298, align 8
  %168 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2299({}* %G148972.0, i64 3, {}* %stream.0, {}* %A.0, {}* %167, {}* null)
          to label %tag161 unwind label %cleanup-lpad.loopexit

tag220:                                           ; preds = %tag250
  %169 = add i64 %203, -3
  %170 = inttoptr i64 %169 to {}**
  %171 = load {}*, {}** %170, align 8
  br label %tag131

tag221:                                           ; preds = %tag103, %header-check-br2469
  %172 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %173 = invoke {}* @cc_safe_fdefinition({}* %172)
          to label %normal-dest2308 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag223:                                           ; preds = %header-check-br2983, %normal-dest2756, %normal-dest1112
  %G148823.0 = phi {}* [ %G148823.1, %normal-dest1112 ], [ %G148823.2, %normal-dest2756 ], [ %"closure->LAMBDA1471", %header-check-br2983 ]
  %174 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %175 = invoke {}* @cc_safe_fdefinition({}* %174)
          to label %normal-dest2322 unwind label %cleanup-lpad.loopexit

tag224:                                           ; preds = %header-check-br2436, %normal-dest949, %normal-dest547
  %G149502.0 = phi {}* [ %G149502.1, %normal-dest547 ], [ %G149502.2, %normal-dest949 ], [ %"closure->LAMBDA", %header-check-br2436 ]
  %176 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 152), align 16
  %177 = invoke {}* @cc_safe_symbol_value({}* %176)
          to label %normal-dest2347 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag225:                                           ; preds = %normal-dest1902, %normal-dest1635, %header-check-br1367
  %G149423.0 = phi {}* [ %"closure->LAMBDA", %header-check-br1367 ], [ %G149423.1, %normal-dest1635 ], [ %G149423.2, %normal-dest1902 ]
  %178 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 35), align 8
  %179 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %180 = invoke {}* @cc_safe_fdefinition({}* %179)
          to label %normal-dest2374 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag226:                                           ; preds = %normal-dest2019
  %181 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 143), align 8
  %182 = invoke {}* @cc_safe_fdefinition({}* %181)
          to label %normal-dest2399 unwind label %cleanup-lpad.loopexit

tag227:                                           ; preds = %normal-dest1384, %header-check-br2622
  %183 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %184 = invoke {}* @cc_safe_fdefinition({}* %183)
          to label %normal-dest2423 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag231:                                           ; preds = %normal-dest553
  %ptrtoint2437 = ptrtoint {}* %"closure->LAMBDA" to i64
  %tag-only2438 = and i64 %ptrtoint2437, 7
  %test2439 = icmp eq i64 %tag-only2438, 1
  br i1 %test2439, label %header-check-br2436, label %tag25

tag232:                                           ; preds = %normal-dest2662, %header-check-br1885, %normal-dest1361
  %G149151.0 = phi {}* [ %G149151.1, %normal-dest1361 ], [ %"closure->LAMBDA3106", %header-check-br1885 ], [ %G149151.2, %normal-dest2662 ]
  %185 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 195), align 8
  %ptrtoint2445 = ptrtoint {}* %G149151.0 to i64
  %entry-point-addr-uint2446 = add i64 %ptrtoint2445, 7
  %entry-point-addr2447 = inttoptr i64 %entry-point-addr-uint2446 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2448 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2447, align 8
  %186 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2448({}* %G149151.0, i64 3, {}* %G148587.0, {}* %A.0, {}* %185, {}* null)
          to label %normal-dest2451 unwind label %cleanup-lpad.loopexit

tag234:                                           ; preds = %normal-dest820
  %187 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 143), align 8
  %188 = invoke {}* @cc_safe_fdefinition({}* %187)
          to label %normal-dest2479 unwind label %cleanup-lpad.loopexit

tag236:                                           ; preds = %normal-dest1672, %header-check-br1533, %normal-dest332
  %G149302.0 = phi {}* [ %G149302.1, %normal-dest332 ], [ %"closure->LAMBDA2195", %header-check-br1533 ], [ %G149302.2, %normal-dest1672 ]
  %ptrtoint2501 = ptrtoint {}* %G149302.0 to i64
  %entry-point-addr-uint2502 = add i64 %ptrtoint2501, 7
  %entry-point-addr2503 = inttoptr i64 %entry-point-addr-uint2502 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2504 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2503, align 8
  %189 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2504({}* %G149302.0, i64 2, {}* %G148568.0, {}* %A.0, {}* null, {}* null)
          to label %normal-dest2507 unwind label %cleanup-lpad.loopexit

tag237:                                           ; preds = %normal-dest1170, %normal-dest2513, %tag190, %tag152
  %190 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 191), align 8
  %191 = invoke {}* @cc_safe_fdefinition({}* %190)
          to label %normal-dest2526 unwind label %cleanup-lpad.loopexit

tag239:                                           ; preds = %normal-dest935
  %192 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 143), align 8
  %193 = invoke {}* @cc_safe_fdefinition({}* %192)
          to label %normal-dest2546 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag242:                                           ; preds = %header-check-br2413, %normal-dest2179, %normal-dest1865
  %G148843.0 = phi {}* [ %G148843.1, %normal-dest1865 ], [ %G148843.2, %normal-dest2179 ], [ %"closure->LAMBDA1471", %header-check-br2413 ]
  %194 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %195 = invoke {}* @cc_safe_fdefinition({}* %194)
          to label %normal-dest2578 unwind label %cleanup-lpad.loopexit

tag243:                                           ; preds = %normal-dest1297, %normal-dest1284, %normal-dest998, %normal-dest659
  %return-value.sroa.253.0 = phi i64 [ 1, %normal-dest1297 ], [ 1, %normal-dest659 ], [ %.elt3654, %normal-dest998 ], [ 1, %normal-dest1284 ]
  %return-value.sroa.0.0 = phi i64 [ %495, %normal-dest1297 ], [ %344, %normal-dest659 ], [ %415, %normal-dest998 ], [ %494, %normal-dest1284 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %196 = inttoptr i64 %return-value.sroa.0.0 to {}*
  %197 = insertvalue { {}*, i64 } undef, {}* %196, 0
  %198 = insertvalue { {}*, i64 } %197, i64 %return-value.sroa.253.0, 1
  ret { {}*, i64 } %198

tag244:                                           ; preds = %normal-dest1304
  %ptrtoint2603 = ptrtoint {}* %"closure->LAMBDA1305" to i64
  %tag-only2604 = and i64 %ptrtoint2603, 7
  %test2605 = icmp eq i64 %tag-only2604, 1
  br i1 %test2605, label %header-check-br2602, label %tag118

tag246:                                           ; preds = %normal-dest2826, %header-check-br1618, %normal-dest1464
  %G149108.0 = phi {}* [ %G149108.1, %normal-dest1464 ], [ %"closure->LAMBDA3106", %header-check-br1618 ], [ %G149108.2, %normal-dest2826 ]
  %199 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 195), align 8
  %ptrtoint2611 = ptrtoint {}* %G149108.0 to i64
  %entry-point-addr-uint2612 = add i64 %ptrtoint2611, 7
  %entry-point-addr2613 = inttoptr i64 %entry-point-addr-uint2612 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2614 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2613, align 8
  %200 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2614({}* %G149108.0, i64 3, {}* %stream.0, {}* %A.0, {}* %199, {}* null)
          to label %tag161 unwind label %cleanup-lpad.loopexit

tag248:                                           ; preds = %normal-dest2893
  %201 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 143), align 8
  %202 = invoke {}* @cc_safe_fdefinition({}* %201)
          to label %normal-dest2632 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag250:                                           ; preds = %tag250.preheader, %tag287.backedge
  %.val4085 = phi {}* [ %470, %tag287.backedge ], [ %386, %tag250.preheader ]
  %"%DOLIST-VAR.04191" = phi {}* [ %"%DOLIST-VAR.0.be", %tag287.backedge ], [ %"%DOLIST-VAR.1", %tag250.preheader ]
  %203 = ptrtoint {}* %"%DOLIST-VAR.04191" to i64
  %tag-only26733286 = and i64 %203, 7
  %consp-test2674 = icmp eq i64 %tag-only26733286, 3
  %.val = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G149416.0 = select i1 %consp-test2674, {}* %.val, {}* %.val4085
  %204 = icmp eq {}* %G149416.0, %.val4085
  br i1 %204, label %tag139, label %tag220

tag252:                                           ; preds = %tag35, %header-check-br456
  %205 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %206 = invoke {}* @cc_safe_fdefinition({}* %205)
          to label %normal-dest2676 unwind label %cleanup-lpad.loopexit

tag254:                                           ; preds = %tag274, %normal-dest2535
  %G149249.0 = phi {}* [ %stream.0, %normal-dest2535 ], [ %220, %tag274 ]
  %ptrtoint2698 = ptrtoint {}* %191 to i64
  %entry-point-addr-uint2699 = add i64 %ptrtoint2698, 7
  %entry-point-addr2700 = inttoptr i64 %entry-point-addr-uint2699 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2701 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2700, align 8
  %207 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2701({}* %191, i64 2, {}* %G149248.0, {}* %G149249.0, {}* null, {}* null)
          to label %normal-dest2704 unwind label %cleanup-lpad.loopexit

tag255:                                           ; preds = %tag161
  %208 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %209 = icmp eq {}* %"%DOLIST-VAR.04191", %208
  %.val4092 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G148816.0 = select i1 %209, {}* %.val4092, {}* %208
  %210 = icmp eq {}* %G148816.0, %208
  br i1 %210, label %tag98, label %tag37

tag256:                                           ; preds = %normal-dest743, %header-check-br2223
  %211 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %212 = invoke {}* @cc_safe_fdefinition({}* %211)
          to label %normal-dest2729 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag265:                                           ; preds = %tag, %header-check-br530
  %213 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %214 = invoke {}* @cc_safe_fdefinition({}* %213)
          to label %normal-dest2805 unwind label %cleanup-lpad.loopexit

tag266:                                           ; preds = %tag143, %header-check-br1603
  %215 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %216 = invoke {}* @cc_safe_fdefinition({}* %215)
          to label %normal-dest2819 unwind label %cleanup-lpad.loopexit

tag267:                                           ; preds = %tag301
  %217 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 140), align 16
  %218 = invoke {}* @cc_safe_fdefinition({}* %217)
          to label %normal-dest2833 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag274:                                           ; preds = %normal-dest2535
  %219 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 152), align 16
  %220 = invoke {}* @cc_safe_symbol_value({}* %219)
          to label %tag254 unwind label %cleanup-lpad.loopexit

tag276:                                           ; preds = %tag293
  %221 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 140), align 16
  %222 = invoke {}* @cc_safe_fdefinition({}* %221)
          to label %normal-dest2886 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag284:                                           ; preds = %normal-dest1427
  %"closure->LAMBDA2909" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %532, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.13", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.13^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 6885, i64 201, i64 0, i64 0)
          to label %normal-dest2908 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag288:                                           ; preds = %normal-dest2908
  %223 = icmp eq {}* %stream.0, %.val4084
  %G149645.0 = select i1 %223, {}* %865, {}* %.val4084
  %224 = icmp eq {}* %G149645.0, %.val4084
  br i1 %224, label %tag68, label %tag6

tag292:                                           ; preds = %normal-dest1550, %normal-dest1135, %header-check-br767
  %G149572.0 = phi {}* [ %"closure->LAMBDA2909", %header-check-br767 ], [ %G149572.1, %normal-dest1135 ], [ %G149572.2, %normal-dest1550 ]
  %225 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 37), align 8
  %226 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %227 = invoke {}* @cc_safe_fdefinition({}* %226)
          to label %normal-dest2939 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag293:                                           ; preds = %normal-dest553
  %228 = icmp eq {}* %stream.0, %.val4166
  %G149496.0 = select i1 %228, {}* %320, {}* %.val4166
  %229 = icmp eq {}* %G149496.0, %.val4166
  br i1 %229, label %tag276, label %tag145

tag295:                                           ; preds = %tag73, %header-check-br2287
  %230 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %231 = invoke {}* @cc_safe_fdefinition({}* %230)
          to label %normal-dest2970 unwind label %cleanup-lpad.loopexit

tag296:                                           ; preds = %normal-dest2019
  %ptrtoint2984 = ptrtoint {}* %"closure->LAMBDA1471" to i64
  %tag-only2985 = and i64 %ptrtoint2984, 7
  %test2986 = icmp eq i64 %tag-only2985, 1
  br i1 %test2986, label %header-check-br2983, label %tag87

tag299:                                           ; preds = %normal-dest2067, %header-check-br1692, %normal-dest604
  %G148874.0 = phi {}* [ %G148874.1, %normal-dest604 ], [ %"closure->LAMBDA1471", %header-check-br1692 ], [ %G148874.2, %normal-dest2067 ]
  %232 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %233 = invoke {}* @cc_safe_fdefinition({}* %232)
          to label %normal-dest2993 unwind label %cleanup-lpad.loopexit

tag300:                                           ; preds = %normal-dest3139, %tag156
  %234 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %235 = invoke {}* @cc_safe_fdefinition({}* %234)
          to label %normal-dest3031 unwind label %cleanup-lpad.loopexit

tag301:                                           ; preds = %normal-dest647
  %236 = icmp eq {}* %stream.0, %.val4144
  %G148744.0 = select i1 %236, {}* %341, {}* %.val4144
  %237 = icmp eq {}* %G148744.0, %.val4144
  br i1 %237, label %tag267, label %tag117

tag303:                                           ; preds = %normal-dest2863, %header-check-br2214, %normal-dest1916
  %G149651.0 = phi {}* [ %G149651.1, %normal-dest1916 ], [ %"closure->LAMBDA2909", %header-check-br2214 ], [ %G149651.2, %normal-dest2863 ]
  %238 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 152), align 16
  %239 = invoke {}* @cc_safe_symbol_value({}* %238)
          to label %normal-dest3065 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag306:                                           ; preds = %normal-dest3052
  %240 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 236), align 16
  %"closure->LAMBDA3106" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %240, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.14", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.14^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 6885, i64 201, i64 0, i64 0)
          to label %normal-dest3105 unwind label %cleanup-lpad.loopexit

tag307:                                           ; preds = %normal-dest1470
  %241 = icmp eq {}* %stream.0, %.val4132
  %G148896.0 = select i1 %241, {}* %535, {}* %.val4132
  %242 = icmp eq {}* %G148896.0, %.val4132
  br i1 %242, label %tag182, label %tag148

tag310:                                           ; preds = %normal-dest1512
  %243 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 164), align 16
  %244 = invoke {}* @cc_safe_fdefinition({}* %243)
          to label %normal-dest3118 unwind label %cleanup-lpad.loopexit

cleanup-lpad.loopexit:                            ; preds = %maybe-more-tests2576, %normal-dest328, %maybe-more-tests2193, %normal-dest350, %tag27, %normal-dest555, %maybe-more-tests1573, %normal-dest569, %maybe-more-tests464, %normal-dest583, %maybe-more-tests1564, %normal-dest597, %maybe-more-tests455, %normal-dest634, %tag40, %normal-dest690, %tag41, %normal-dest713, %tag53, %normal-dest813, %tag56, %normal-dest845, %tag66, %normal-dest900, %tag75, %normal-dest1000, %tag77, %normal-dest1030, %normal-dest1036, %tag81, %normal-dest1077, %maybe-more-tests898, %normal-dest1091, %tag87, %normal-dest1105, %maybe-more-tests538, %normal-dest1142, %tag95, %normal-dest1170, %tag96, %normal-dest1183, %tag98, %normal-dest1197, %tag100, %normal-dest1212, %normal-dest1219, %normal-dest1226, %normal-dest1233, %normal-dest1240, %normal-dest1247, %normal-dest1254, %tag110, %normal-dest1311, %tag115, %normal-dest1354, %tag125, %maybe-more-tests1611, %normal-dest1457, %tag129, %tag131, %normal-dest1491, %normal-dest1493, %normal-dest1500, %tag133, %normal-dest1519, %tag139, %normal-dest1575, %tag140, %normal-dest1590, %tag142, %tag146, %normal-dest1665, %tag148, %normal-dest1679, %tag152, %tag154, %normal-dest1769, %normal-dest1771, %normal-dest1778, %maybe-more-tests473, %normal-dest1858, %tag165, %normal-dest1872, %tag174, %normal-dest1949, %maybe-more-tests2697, %normal-dest1986, %tag180, %tag182, %normal-dest2012, %tag183, %normal-dest2026, %tag187, %normal-dest2060, %tag190, %tag192, %normal-dest2094, %tag194, %normal-dest2107, %tag197, %normal-dest2144, %tag201, %normal-dest2172, %tag204, %maybe-more-tests1817, %normal-dest2265, %tag219, %tag223, %normal-dest2322, %normal-dest2329, %tag226, %normal-dest2399, %tag232, %normal-dest2451, %normal-dest2457, %tag234, %normal-dest2479, %tag236, %normal-dest2507, %normal-dest2513, %tag237, %normal-dest2526, %normal-dest2528, %tag242, %normal-dest2578, %normal-dest2585, %tag246, %maybe-more-tests2907, %normal-dest2655, %tag252, %normal-dest2676, %tag254, %normal-dest2704, %normal-dest2710, %maybe-more-tests482, %normal-dest2749, %maybe-more-tests2937, %normal-dest2777, %tag265, %normal-dest2805, %tag266, %normal-dest2819, %tag274, %tag295, %normal-dest2970, %tag299, %normal-dest2993, %normal-dest3000, %normal-dest3012, %normal-dest3018, %tag300, %normal-dest3031, %normal-dest3038, %normal-dest3045, %maybe-more-tests2295, %normal-dest3092, %tag306, %tag310, %normal-dest3118, %normal-dest3120, %normal-dest3127
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit:          ; preds = %loop-kw-args
  %lpad.loopexit4187 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %normal-dest3074, %normal-dest3067, %normal-dest3065, %tag303, %normal-dest2946, %normal-dest2939, %tag292, %tag284, %normal-dest2886, %tag276, %normal-dest2872, %maybe-more-tests491, %normal-dest2856, %maybe-more-tests2928, %normal-dest2833, %tag267, %normal-dest2791, %maybe-more-tests2854, %normal-dest2763, %maybe-more-tests2477, %normal-dest2729, %tag256, %normal-dest2632, %tag248, %normal-dest2546, %tag239, %normal-dest2423, %tag227, %normal-dest2381, %normal-dest2374, %tag225, %normal-dest2356, %normal-dest2349, %normal-dest2347, %tag224, %normal-dest2308, %tag221, %normal-dest2247, %normal-dest2240, %tag215, %normal-dest2201, %tag206, %normal-dest2121, %maybe-more-tests1332, %normal-dest2046, %maybe-more-tests2286, %normal-dest1972, %maybe-more-tests1126, %normal-dest1931, %normal-dest1924, %tag171, %normal-dest1909, %tag169, %normal-dest1895, %tag167, %normal-dest1844, %maybe-more-tests1826, %normal-dest1828, %tag159, %normal-dest1796, %tag155, %normal-dest1736, %normal-dest1730, %normal-dest1718, %normal-dest1711, %tag151, %normal-dest1642, %tag145, %normal-dest1628, %maybe-more-tests843, %normal-dest1543, %tag135, %normal-dest1477, %tag130, %tag121, %normal-dest1420, %tag120, %normal-dest1400, %tag118, %normal-dest1377, %tag117, %normal-dest1334, %tag112, %kw-exit-block, %tag108, %normal-dest1277, %tag106, %normal-dest1156, %maybe-more-tests2231, %normal-dest1128, %maybe-more-tests2164, %normal-dest1063, %tag80, %normal-dest1049, %tag79, %tag76, %normal-dest991, %normal-dest985, %tag74, %normal-dest956, %maybe-more-tests1767, %normal-dest942, %maybe-more-tests422, %normal-dest928, %tag68, %normal-dest914, %maybe-more-tests2092, %normal-dest859, %tag58, %normal-dest800, %tag52, %normal-dest777, %tag51, %normal-dest736, %tag43, %normal-dest667, %tag39, %tag38, %tag37, %normal-dest611, %maybe-more-tests766, %tag26, %normal-dest540, %tag25, %normal-dest518, %normal-dest512, %normal-dest500, %normal-dest493, %tag22, %normal-dest435, %normal-dest429, %tag14, %normal-dest401, %tag10, %normal-dest387, %maybe-more-tests2630, %normal-dest364, %tag6, %normal-dest336, %tag3, %loop-cont, %error
  %lpad.loopexit.split-lp4188 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit4187, %cleanup-lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp4188, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @":::global-str-YAS-SPEICHER_EIN_OBJEKT^COMMON-LISP-USER^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %245 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %246 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %247 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 304), align 16
  %248 = icmp eq i64 %nargs, 1
  br i1 %248, label %kw-exit-block, label %loop-kw-args.preheader

loop-kw-args.preheader:                           ; preds = %continue
  br label %loop-kw-args

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

loop-kw-args:                                     ; preds = %loop-kw-args.preheader, %advance-arg-idx-block
  %G148650.0 = phi {}* [ %G148650.2, %advance-arg-idx-block ], [ %246, %loop-kw-args.preheader ]
  %stream.1 = phi {}* [ %stream.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %phi-saw-aok = phi i64 [ %phi-this-was-aok, %advance-arg-idx-block ], [ 0, %loop-kw-args.preheader ]
  %phi-reg-arg-idx = phi i64 [ %255, %advance-arg-idx-block ], [ 1, %loop-kw-args.preheader ]
  %phi-bad-kw-idx = phi i64 [ %phi.aok-bad-good.bad-kw-idx, %advance-arg-idx-block ], [ 65536, %loop-kw-args.preheader ]
  %rem-nargs318 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1319 = add i64 %rem-nargs318, -1
  store i64 %rem-nargs-1319, i64* %"remaining-nargs*", align 8
  %vaarg320 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs321 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1322 = add i64 %rem-nargs321, -1
  store i64 %rem-nargs-1322, i64* %"remaining-nargs*", align 8
  %vaarg323 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  invoke void @cc_ifNotKeywordException({}* %vaarg320, i64 %phi-reg-arg-idx, { i32, i32, i8*, i8* }* nonnull %"va-list*", { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"YAS-SPEICHER_EIN_OBJEKT^COMMON-LISP-USER^FN^^^DESC")
          to label %normal-dest324 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

kw-exit-block:                                    ; preds = %loop-cont.kw-exit-block_crit_edge, %continue
  %249 = phi {}* [ %245, %continue ], [ %.pre4193, %loop-cont.kw-exit-block_crit_edge ]
  %250 = phi {}* [ %246, %continue ], [ %.pre, %loop-cont.kw-exit-block_crit_edge ]
  %G148650.1 = phi {}* [ %246, %continue ], [ %G148650.2, %loop-cont.kw-exit-block_crit_edge ]
  %stream.2 = phi {}* [ undef, %continue ], [ %stream.3, %loop-cont.kw-exit-block_crit_edge ]
  %251 = icmp eq {}* %G148650.1, %250
  %stream.0 = select i1 %251, {}* %249, {}* %stream.2
  %252 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 236), align 16
  %"closure->LAMBDA1305" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %252, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.9", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.9^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 6885, i64 201, i64 0, i64 0)
          to label %normal-dest1304 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

loop-cont:                                        ; preds = %advance-arg-idx-block
  invoke void @cc_ifBadKeywordArgumentException(i64 %phi-this-was-aok, i64 %phi.aok-bad-good.bad-kw-idx, {}* %vaarg320, { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"YAS-SPEICHER_EIN_OBJEKT^COMMON-LISP-USER^FN^^^DESC")
          to label %loop-cont.kw-exit-block_crit_edge unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

loop-cont.kw-exit-block_crit_edge:                ; preds = %loop-cont
  %.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %.pre4193 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  br label %kw-exit-block

normal-dest324:                                   ; preds = %loop-kw-args
  %253 = icmp eq {}* %247, %vaarg320
  br i1 %253, label %aok-block, label %"kw-:STREAM-test"

aok-block:                                        ; preds = %normal-dest324
  %254 = call i64 @cc_allowOtherKeywords(i64 %phi-saw-aok, {}* %vaarg323)
  br label %advance-arg-idx-block

advance-arg-idx-block:                            ; preds = %matched-kw-block, %next-kw-block, %aok-block
  %G148650.2 = phi {}* [ %G148650.0, %aok-block ], [ %G148650.0, %next-kw-block ], [ %G148650.3, %matched-kw-block ]
  %stream.3 = phi {}* [ %stream.1, %aok-block ], [ %stream.1, %next-kw-block ], [ %stream.4, %matched-kw-block ]
  %phi-this-was-aok = phi i64 [ %254, %aok-block ], [ %phi-saw-aok, %next-kw-block ], [ %phi-saw-aok, %matched-kw-block ]
  %phi.aok-bad-good.bad-kw-idx = phi i64 [ %phi-bad-kw-idx, %aok-block ], [ %261, %next-kw-block ], [ %phi-bad-kw-idx, %matched-kw-block ]
  %255 = add i64 %phi-reg-arg-idx, 2
  %256 = icmp slt i64 %255, %nargs
  br i1 %256, label %loop-kw-args, label %loop-cont

"kw-:STREAM-test":                                ; preds = %normal-dest324
  %257 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 279), align 8
  %258 = call i64 @cc_matchKeywordOnce({}* %257, {}* %vaarg320, {}* %G148650.0)
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %next-kw-block, label %matched-kw-block

matched-kw-block:                                 ; preds = %"kw-:STREAM-test"
  %260 = icmp eq i64 %258, 2
  %G148650.3 = select i1 %260, {}* %G148650.0, {}* %245
  %stream.4 = select i1 %260, {}* %stream.1, {}* %vaarg323
  br label %advance-arg-idx-block

next-kw-block:                                    ; preds = %"kw-:STREAM-test"
  %261 = call i64 @cc_trackFirstUnexpectedKeyword(i64 %phi-bad-kw-idx, i64 %phi-reg-arg-idx)
  br label %advance-arg-idx-block

header-check-br:                                  ; preds = %tag
  %irc-bit-cast326 = bitcast {}* %"closure->LAMBDA1613" to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast326, i64 -9
  %irc-bit-cast327 = bitcast i8* %gep to i64*
  %262 = load i64, i64* %irc-bit-cast327, align 8
  %.off4129 = add i64 %262, -913
  %263 = icmp ult i64 %.off4129, 85
  br i1 %263, label %tag219, label %header-check-br530

normal-dest328:                                   ; preds = %maybe-more-tests2576
  %ptrtoint329 = ptrtoint {}* %796 to i64
  %entry-point-addr-uint = add i64 %ptrtoint329, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %264 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %796, i64 1, {}* nonnull %"closure->LAMBDA2195", {}* null, {}* null, {}* null)
          to label %normal-dest332 unwind label %cleanup-lpad.loopexit

normal-dest332:                                   ; preds = %normal-dest328
  %.elt3353 = extractvalue { {}*, i64 } %264, 0
  %.elt3355 = extractvalue { {}*, i64 } %264, 1
  %cond3159 = icmp eq i64 %.elt3355, 0
  %265 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149302.1 = select i1 %cond3159, {}* %265, {}* %.elt3353
  br label %tag236

normal-dest336:                                   ; preds = %tag3
  %ptrtoint337 = ptrtoint {}* %10 to i64
  %entry-point-addr-uint338 = add i64 %ptrtoint337, 7
  %entry-point-addr339 = inttoptr i64 %entry-point-addr-uint338 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point340 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr339, align 8
  %266 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point340({}* %10, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest343 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest343:                                   ; preds = %normal-dest336
  %.elt3864 = extractvalue { {}*, i64 } %266, 0
  %.elt3866 = extractvalue { {}*, i64 } %266, 1
  %cond3254 = icmp eq i64 %.elt3866, 0
  %267 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149759.0 = select i1 %cond3254, {}* %267, {}* %.elt3864
  %268 = icmp eq {}* %G149759.0, %267
  br i1 %268, label %tag196, label %tag51

normal-dest350:                                   ; preds = %maybe-more-tests2193
  %ptrtoint351 = ptrtoint {}* %711 to i64
  %entry-point-addr-uint352 = add i64 %ptrtoint351, 7
  %entry-point-addr353 = inttoptr i64 %entry-point-addr-uint352 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point354 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr353, align 8
  %269 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point354({}* %711, i64 1, {}* nonnull %"closure->LAMBDA1613", {}* null, {}* null, {}* null)
          to label %normal-dest357 unwind label %cleanup-lpad.loopexit

normal-dest357:                                   ; preds = %normal-dest350
  %.elt3485 = extractvalue { {}*, i64 } %269, 0
  %.elt3487 = extractvalue { {}*, i64 } %269, 1
  %cond3184 = icmp eq i64 %.elt3487, 0
  %270 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149039.1 = select i1 %cond3184, {}* %270, {}* %.elt3485
  br label %tag192

normal-dest364:                                   ; preds = %tag6
  %ptrtoint365 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint366 = add i64 %ptrtoint365, 7
  %entry-point-addr367 = inttoptr i64 %entry-point-addr-uint366 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point368 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr367, align 8
  %271 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point368({}* %12, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest371 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest371:                                   ; preds = %normal-dest364
  %.elt3696 = extractvalue { {}*, i64 } %271, 0
  %.elt3698 = extractvalue { {}*, i64 } %271, 1
  %cond3223 = icmp eq i64 %.elt3698, 0
  %272 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148530.0 = select i1 %cond3223, {}* %272, {}* %.elt3696
  %ptrtoint378 = ptrtoint {}* %"closure->LAMBDA2909" to i64
  %tag-only379 = and i64 %ptrtoint378, 7
  %test380 = icmp eq i64 %tag-only379, 1
  br i1 %test380, label %header-check-br377, label %tag80

header-check-br377:                               ; preds = %normal-dest371
  %irc-bit-cast381 = bitcast {}* %"closure->LAMBDA2909" to i8*
  %gep382 = getelementptr inbounds i8, i8* %irc-bit-cast381, i64 -9
  %irc-bit-cast383 = bitcast i8* %gep382 to i64*
  %273 = load i64, i64* %irc-bit-cast383, align 8
  %.off4159 = add i64 %273, -913
  %274 = icmp ult i64 %.off4159, 85
  br i1 %274, label %tag151, label %header-check-br1818

normal-dest387:                                   ; preds = %maybe-more-tests2630
  %ptrtoint388 = ptrtoint {}* %804 to i64
  %entry-point-addr-uint389 = add i64 %ptrtoint388, 7
  %entry-point-addr390 = inttoptr i64 %entry-point-addr-uint389 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point391 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr390, align 8
  %275 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point391({}* %804, i64 1, {}* nonnull %"closure->LAMBDA648", {}* null, {}* null, {}* null)
          to label %normal-dest394 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest394:                                   ; preds = %normal-dest387
  %.elt3656 = extractvalue { {}*, i64 } %275, 0
  %.elt3658 = extractvalue { {}*, i64 } %275, 1
  %cond3215 = icmp eq i64 %.elt3658, 0
  %276 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148727.1 = select i1 %cond3215, {}* %276, {}* %.elt3656
  br label %tag74

normal-dest401:                                   ; preds = %tag10
  %277 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %278 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %279 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %280 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 319), align 8
  %ptrtoint402 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint403 = add i64 %ptrtoint402, 7
  %entry-point-addr404 = inttoptr i64 %entry-point-addr-uint403 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point405 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr404, align 8
  %281 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point405({}* %14, i64 5, {}* %277, {}* %278, {}* %"closure->LAMBDA", {}* %279, {}* %280)
          to label %normal-dest408 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest408:                                   ; preds = %normal-dest401
  %.elt3780 = extractvalue { {}*, i64 } %281, 0
  %.elt3782 = extractvalue { {}*, i64 } %281, 1
  %cond3239 = icmp eq i64 %.elt3782, 0
  %282 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149474.1 = select i1 %cond3239, {}* %282, {}* %.elt3780
  br label %tag22

header-check-br414:                               ; preds = %header-check-br2436
  %.off4168 = add i64 %768, -1001
  %283 = icmp ult i64 %.off4168, 5
  br i1 %283, label %maybe-more-tests422, label %tag25

maybe-more-tests422:                              ; preds = %header-check-br414
  %284 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %285 = invoke {}* @cc_safe_fdefinition({}* %284)
          to label %normal-dest942 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest429:                                   ; preds = %tag14
  %286 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 149), align 8
  %287 = invoke {}* @cc_safe_fdefinition({}* %286)
          to label %normal-dest435 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest435:                                   ; preds = %normal-dest429
  %ptrtoint436 = ptrtoint {}* %287 to i64
  %entry-point-addr-uint437 = add i64 %ptrtoint436, 7
  %entry-point-addr438 = inttoptr i64 %entry-point-addr-uint437 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point439 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr438, align 8
  %288 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point439({}* %287, i64 1, {}* %G148511.0, {}* null, {}* null, {}* null)
          to label %tag120 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

header-check-br447:                               ; preds = %header-check-br703
  %.off4126 = add i64 %351, -1001
  %289 = icmp ult i64 %.off4126, 5
  br i1 %289, label %maybe-more-tests455, label %tag140

maybe-more-tests455:                              ; preds = %header-check-br447
  %290 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %291 = invoke {}* @cc_safe_fdefinition({}* %290)
          to label %normal-dest634 unwind label %cleanup-lpad.loopexit

header-check-br456:                               ; preds = %header-check-br624
  %.off4134 = add i64 %337, -1001
  %292 = icmp ult i64 %.off4134, 5
  br i1 %292, label %maybe-more-tests464, label %tag252

maybe-more-tests464:                              ; preds = %header-check-br456
  %293 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %294 = invoke {}* @cc_safe_fdefinition({}* %293)
          to label %normal-dest583 unwind label %cleanup-lpad.loopexit

header-check-br465:                               ; preds = %header-check-br2413
  %.off4140 = add i64 %760, -1001
  %295 = icmp ult i64 %.off4140, 5
  br i1 %295, label %maybe-more-tests473, label %tag201

maybe-more-tests473:                              ; preds = %header-check-br465
  %296 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %297 = invoke {}* @cc_safe_fdefinition({}* %296)
          to label %normal-dest1858 unwind label %cleanup-lpad.loopexit

header-check-br474:                               ; preds = %header-check-br2983
  %.off4142 = add i64 %884, -1001
  %298 = icmp ult i64 %.off4142, 5
  br i1 %298, label %maybe-more-tests482, label %tag87

maybe-more-tests482:                              ; preds = %header-check-br474
  %299 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %300 = invoke {}* @cc_safe_fdefinition({}* %299)
          to label %normal-dest2749 unwind label %cleanup-lpad.loopexit

header-check-br483:                               ; preds = %header-check-br2559
  %.off4162 = add i64 %792, -1001
  %301 = icmp ult i64 %.off4162, 5
  br i1 %301, label %maybe-more-tests491, label %tag159

maybe-more-tests491:                              ; preds = %header-check-br483
  %302 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %303 = invoke {}* @cc_safe_fdefinition({}* %302)
          to label %normal-dest2872 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest493:                                   ; preds = %tag22
  %304 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 35), align 8
  %ptrtoint494 = ptrtoint {}* %18 to i64
  %entry-point-addr-uint495 = add i64 %ptrtoint494, 7
  %entry-point-addr496 = inttoptr i64 %entry-point-addr-uint495 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point497 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr496, align 8
  %305 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point497({}* %18, i64 2, {}* %vaarg, {}* %304, {}* null, {}* null)
          to label %normal-dest500 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest500:                                   ; preds = %normal-dest493
  %.elt3784 = extractvalue { {}*, i64 } %305, 0
  %.elt3786 = extractvalue { {}*, i64 } %305, 1
  %cond3240 = icmp eq i64 %.elt3786, 0
  %306 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149477.0 = select i1 %cond3240, {}* %306, {}* %.elt3784
  %ptrtoint506 = ptrtoint {}* %G149474.0 to i64
  %entry-point-addr-uint507 = add i64 %ptrtoint506, 7
  %entry-point-addr508 = inttoptr i64 %entry-point-addr-uint507 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point509 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr508, align 8
  %307 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point509({}* %G149474.0, i64 3, {}* %G148549.0, {}* %16, {}* %G149477.0, {}* null)
          to label %normal-dest512 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest512:                                   ; preds = %normal-dest500
  %308 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 149), align 8
  %309 = invoke {}* @cc_safe_fdefinition({}* %308)
          to label %normal-dest518 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest518:                                   ; preds = %normal-dest512
  %ptrtoint519 = ptrtoint {}* %309 to i64
  %entry-point-addr-uint520 = add i64 %ptrtoint519, 7
  %entry-point-addr521 = inttoptr i64 %entry-point-addr-uint520 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point522 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr521, align 8
  %310 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point522({}* %309, i64 1, {}* %G148549.0, {}* null, {}* null, {}* null)
          to label %tag58 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

header-check-br530:                               ; preds = %header-check-br
  %.off4130 = add i64 %262, -1001
  %311 = icmp ult i64 %.off4130, 5
  br i1 %311, label %maybe-more-tests538, label %tag265

maybe-more-tests538:                              ; preds = %header-check-br530
  %312 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %313 = invoke {}* @cc_safe_fdefinition({}* %312)
          to label %normal-dest1142 unwind label %cleanup-lpad.loopexit

normal-dest540:                                   ; preds = %tag25
  %314 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %315 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %316 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %317 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 320), align 16
  %ptrtoint541 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint542 = add i64 %ptrtoint541, 7
  %entry-point-addr543 = inttoptr i64 %entry-point-addr-uint542 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point544 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr543, align 8
  %318 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point544({}* %20, i64 5, {}* %314, {}* %315, {}* %"closure->LAMBDA", {}* %316, {}* %317)
          to label %normal-dest547 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest547:                                   ; preds = %normal-dest540
  %.elt3760 = extractvalue { {}*, i64 } %318, 0
  %.elt3762 = extractvalue { {}*, i64 } %318, 1
  %cond3235 = icmp eq i64 %.elt3762, 0
  %319 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149502.1 = select i1 %cond3235, {}* %319, {}* %.elt3760
  br label %tag224

normal-dest553:                                   ; preds = %tag26
  %320 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %321 = icmp eq {}* %stream.0, %320
  %.val4166 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149523.0 = select i1 %321, {}* %320, {}* %.val4166
  %322 = icmp eq {}* %G149523.0, %.val4166
  br i1 %322, label %tag293, label %tag231

normal-dest555:                                   ; preds = %tag27
  %323 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %324 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %325 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %326 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 353), align 8
  %ptrtoint556 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint557 = add i64 %ptrtoint556, 7
  %entry-point-addr558 = inttoptr i64 %entry-point-addr-uint557 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point559 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr558, align 8
  %327 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point559({}* %22, i64 5, {}* %323, {}* %324, {}* %"closure->LAMBDA1613", {}* %325, {}* %326)
          to label %normal-dest562 unwind label %cleanup-lpad.loopexit

normal-dest562:                                   ; preds = %normal-dest555
  %.elt3477 = extractvalue { {}*, i64 } %327, 0
  %.elt3479 = extractvalue { {}*, i64 } %327, 1
  %cond3183 = icmp eq i64 %.elt3479, 0
  %328 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149039.2 = select i1 %cond3183, {}* %328, {}* %.elt3477
  br label %tag192

normal-dest569:                                   ; preds = %maybe-more-tests1573
  %ptrtoint570 = ptrtoint {}* %567 to i64
  %entry-point-addr-uint571 = add i64 %ptrtoint570, 7
  %entry-point-addr572 = inttoptr i64 %entry-point-addr-uint571 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point573 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr572, align 8
  %329 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point573({}* %567, i64 1, {}* nonnull %"closure->LAMBDA3106", {}* null, {}* null, {}* null)
          to label %normal-dest576 unwind label %cleanup-lpad.loopexit

normal-dest576:                                   ; preds = %normal-dest569
  %.elt3405 = extractvalue { {}*, i64 } %329, 0
  %.elt3407 = extractvalue { {}*, i64 } %329, 1
  %cond3169 = icmp eq i64 %.elt3407, 0
  %330 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149175.1 = select i1 %cond3169, {}* %330, {}* %.elt3405
  br label %tag197

normal-dest583:                                   ; preds = %maybe-more-tests464
  %ptrtoint584 = ptrtoint {}* %294 to i64
  %entry-point-addr-uint585 = add i64 %ptrtoint584, 7
  %entry-point-addr586 = inttoptr i64 %entry-point-addr-uint585 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point587 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr586, align 8
  %331 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point587({}* %294, i64 1, {}* nonnull %"closure->LAMBDA1471", {}* null, {}* null, {}* null)
          to label %normal-dest590 unwind label %cleanup-lpad.loopexit

normal-dest590:                                   ; preds = %normal-dest583
  %.elt3553 = extractvalue { {}*, i64 } %331, 0
  %.elt3555 = extractvalue { {}*, i64 } %331, 1
  %cond3196 = icmp eq i64 %.elt3555, 0
  %332 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148902.1 = select i1 %cond3196, {}* %332, {}* %.elt3553
  br label %tag154

normal-dest597:                                   ; preds = %maybe-more-tests1564
  %ptrtoint598 = ptrtoint {}* %564 to i64
  %entry-point-addr-uint599 = add i64 %ptrtoint598, 7
  %entry-point-addr600 = inttoptr i64 %entry-point-addr-uint599 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point601 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr600, align 8
  %333 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point601({}* %564, i64 1, {}* nonnull %"closure->LAMBDA1471", {}* null, {}* null, {}* null)
          to label %normal-dest604 unwind label %cleanup-lpad.loopexit

normal-dest604:                                   ; preds = %normal-dest597
  %.elt3577 = extractvalue { {}*, i64 } %333, 0
  %.elt3579 = extractvalue { {}*, i64 } %333, 1
  %cond3200 = icmp eq i64 %.elt3579, 0
  %334 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148874.1 = select i1 %cond3200, {}* %334, {}* %.elt3577
  br label %tag299

normal-dest611:                                   ; preds = %maybe-more-tests766
  %ptrtoint612 = ptrtoint {}* %363 to i64
  %entry-point-addr-uint613 = add i64 %ptrtoint612, 7
  %entry-point-addr614 = inttoptr i64 %entry-point-addr-uint613 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point615 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr614, align 8
  %335 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point615({}* %363, i64 1, {}* nonnull %"closure->LAMBDA1305", {}* null, {}* null, {}* null)
          to label %normal-dest618 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest618:                                   ; preds = %normal-dest611
  %.elt3892 = extractvalue { {}*, i64 } %335, 0
  %.elt3894 = extractvalue { {}*, i64 } %335, 1
  %cond3259 = icmp eq i64 %.elt3894, 0
  %336 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149726.1 = select i1 %cond3259, {}* %336, {}* %.elt3892
  br label %tag76

header-check-br624:                               ; preds = %tag35
  %irc-bit-cast628 = bitcast {}* %"closure->LAMBDA1471" to i8*
  %gep629 = getelementptr inbounds i8, i8* %irc-bit-cast628, i64 -9
  %irc-bit-cast630 = bitcast i8* %gep629 to i64*
  %337 = load i64, i64* %irc-bit-cast630, align 8
  %.off4133 = add i64 %337, -913
  %338 = icmp ult i64 %.off4133, 85
  br i1 %338, label %tag154, label %header-check-br456

normal-dest634:                                   ; preds = %maybe-more-tests455
  %ptrtoint635 = ptrtoint {}* %291 to i64
  %entry-point-addr-uint636 = add i64 %ptrtoint635, 7
  %entry-point-addr637 = inttoptr i64 %entry-point-addr-uint636 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point638 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr637, align 8
  %339 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point638({}* %291, i64 1, {}* nonnull %"closure->LAMBDA1613", {}* null, {}* null, {}* null)
          to label %normal-dest641 unwind label %cleanup-lpad.loopexit

normal-dest641:                                   ; preds = %normal-dest634
  %.elt3505 = extractvalue { {}*, i64 } %339, 0
  %.elt3507 = extractvalue { {}*, i64 } %339, 1
  %cond3187 = icmp eq i64 %.elt3507, 0
  %340 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149015.1 = select i1 %cond3187, {}* %340, {}* %.elt3505
  br label %tag77

normal-dest647:                                   ; preds = %tag37
  %341 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %342 = icmp eq {}* %stream.0, %341
  %.val4144 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148767.0 = select i1 %342, {}* %341, {}* %.val4144
  %343 = icmp eq {}* %G148767.0, %.val4144
  br i1 %343, label %tag301, label %tag103

normal-dest659:                                   ; preds = %tag38
  %344 = load i64, i64* bitcast ({}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12) to i64*), align 16
  br label %tag243

normal-dest667:                                   ; preds = %tag39
  %ptrtoint668 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint669 = add i64 %ptrtoint668, 7
  %entry-point-addr670 = inttoptr i64 %entry-point-addr-uint669 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point671 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr670, align 8
  %345 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point671({}* %27, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest674 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest674:                                   ; preds = %normal-dest667
  %.elt3844 = extractvalue { {}*, i64 } %345, 0
  %.elt3846 = extractvalue { {}*, i64 } %345, 1
  %cond3251 = icmp eq i64 %.elt3846, 0
  %346 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148511.0 = select i1 %cond3251, {}* %346, {}* %.elt3844
  %ptrtoint681 = ptrtoint {}* %"closure->LAMBDA1305" to i64
  %tag-only682 = and i64 %ptrtoint681, 7
  %test683 = icmp eq i64 %tag-only682, 1
  br i1 %test683, label %header-check-br680, label %tag206

header-check-br680:                               ; preds = %normal-dest674
  %irc-bit-cast684 = bitcast {}* %"closure->LAMBDA1305" to i8*
  %gep685 = getelementptr inbounds i8, i8* %irc-bit-cast684, i64 -9
  %irc-bit-cast686 = bitcast i8* %gep685 to i64*
  %347 = load i64, i64* %irc-bit-cast686, align 8
  %.off4181 = add i64 %347, -913
  %348 = icmp ult i64 %.off4181, 85
  br i1 %348, label %tag14, label %header-check-br1118

normal-dest690:                                   ; preds = %tag40
  %ptrtoint691 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint692 = add i64 %ptrtoint691, 7
  %entry-point-addr693 = inttoptr i64 %entry-point-addr-uint692 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point694 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr693, align 8
  %349 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point694({}* %29, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest697 unwind label %cleanup-lpad.loopexit

normal-dest697:                                   ; preds = %normal-dest690
  %.elt3489 = extractvalue { {}*, i64 } %349, 0
  %.elt3491 = extractvalue { {}*, i64 } %349, 1
  %cond3185 = icmp eq i64 %.elt3491, 0
  %350 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148606.0 = select i1 %cond3185, {}* %350, {}* %.elt3489
  %ptrtoint704 = ptrtoint {}* %"closure->LAMBDA1613" to i64
  %tag-only705 = and i64 %ptrtoint704, 7
  %test706 = icmp eq i64 %tag-only705, 1
  br i1 %test706, label %header-check-br703, label %tag140

header-check-br703:                               ; preds = %normal-dest697
  %irc-bit-cast707 = bitcast {}* %"closure->LAMBDA1613" to i8*
  %gep708 = getelementptr inbounds i8, i8* %irc-bit-cast707, i64 -9
  %irc-bit-cast709 = bitcast i8* %gep708 to i64*
  %351 = load i64, i64* %irc-bit-cast709, align 8
  %.off4125 = add i64 %351, -913
  %352 = icmp ult i64 %.off4125, 85
  br i1 %352, label %tag77, label %header-check-br447

normal-dest713:                                   ; preds = %tag41
  %ptrtoint714 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint715 = add i64 %ptrtoint714, 7
  %entry-point-addr716 = inttoptr i64 %entry-point-addr-uint715 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point717 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr716, align 8
  %353 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point717({}* %31, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest720 unwind label %cleanup-lpad.loopexit

normal-dest720:                                   ; preds = %normal-dest713
  %.elt3361 = extractvalue { {}*, i64 } %353, 0
  %.elt3363 = extractvalue { {}*, i64 } %353, 1
  %cond3161 = icmp eq i64 %.elt3363, 0
  %354 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %OUT148560.0 = select i1 %cond3161, {}* %354, {}* %.elt3361
  %ptrtoint727 = ptrtoint {}* %"closure->LAMBDA2195" to i64
  %tag-only728 = and i64 %ptrtoint727, 7
  %test729 = icmp eq i64 %tag-only728, 1
  br i1 %test729, label %header-check-br726, label %tag56

header-check-br726:                               ; preds = %normal-dest720
  %irc-bit-cast730 = bitcast {}* %"closure->LAMBDA2195" to i8*
  %gep731 = getelementptr inbounds i8, i8* %irc-bit-cast730, i64 -9
  %irc-bit-cast732 = bitcast i8* %gep731 to i64*
  %355 = load i64, i64* %irc-bit-cast732, align 8
  %.off4099 = add i64 %355, -913
  %356 = icmp ult i64 %.off4099, 85
  br i1 %356, label %tag152, label %header-check-br1809

normal-dest736:                                   ; preds = %tag43
  %ptrtoint737 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint738 = add i64 %ptrtoint737, 7
  %entry-point-addr739 = inttoptr i64 %entry-point-addr-uint738 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point740 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr739, align 8
  %357 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point740({}* %33, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest743 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest743:                                   ; preds = %normal-dest736
  %.elt3664 = extractvalue { {}*, i64 } %357, 0
  %.elt3666 = extractvalue { {}*, i64 } %357, 1
  %cond3217 = icmp eq i64 %.elt3666, 0
  %358 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %OUT148634.0 = select i1 %cond3217, {}* %358, {}* %.elt3664
  %ptrtoint750 = ptrtoint {}* %"closure->LAMBDA648" to i64
  %tag-only751 = and i64 %ptrtoint750, 7
  %test752 = icmp eq i64 %tag-only751, 1
  br i1 %test752, label %header-check-br749, label %tag256

header-check-br749:                               ; preds = %normal-dest743
  %irc-bit-cast753 = bitcast {}* %"closure->LAMBDA648" to i8*
  %gep754 = getelementptr inbounds i8, i8* %irc-bit-cast753, i64 -9
  %irc-bit-cast755 = bitcast i8* %gep754 to i64*
  %359 = load i64, i64* %irc-bit-cast755, align 8
  %.off4151 = add i64 %359, -913
  %360 = icmp ult i64 %.off4151, 85
  br i1 %360, label %tag38, label %header-check-br2223

header-check-br758:                               ; preds = %header-check-br2134
  %.off4186 = add i64 %696, -1001
  %361 = icmp ult i64 %.off4186, 5
  br i1 %361, label %maybe-more-tests766, label %tag112

maybe-more-tests766:                              ; preds = %header-check-br758
  %362 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %363 = invoke {}* @cc_safe_fdefinition({}* %362)
          to label %normal-dest611 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

header-check-br767:                               ; preds = %tag48
  %irc-bit-cast771 = bitcast {}* %"closure->LAMBDA2909" to i8*
  %gep772 = getelementptr inbounds i8, i8* %irc-bit-cast771, i64 -9
  %irc-bit-cast773 = bitcast i8* %gep772 to i64*
  %364 = load i64, i64* %irc-bit-cast773, align 8
  %.off4163 = add i64 %364, -913
  %365 = icmp ult i64 %.off4163, 85
  br i1 %365, label %tag292, label %header-check-br2156

normal-dest777:                                   ; preds = %tag51
  %ptrtoint778 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint779 = add i64 %ptrtoint778, 7
  %entry-point-addr780 = inttoptr i64 %entry-point-addr-uint779 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point781 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr780, align 8
  %366 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point781({}* %35, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest784 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest784:                                   ; preds = %normal-dest777
  %.elt3868 = extractvalue { {}*, i64 } %366, 0
  %.elt3870 = extractvalue { {}*, i64 } %366, 1
  %cond3255 = icmp eq i64 %.elt3870, 0
  %367 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %OUT148503785.0 = select i1 %cond3255, {}* %367, {}* %.elt3868
  %ptrtoint792 = ptrtoint {}* %"closure->LAMBDA1305" to i64
  %tag-only793 = and i64 %ptrtoint792, 7
  %test794 = icmp eq i64 %tag-only793, 1
  br i1 %test794, label %header-check-br791, label %tag155

header-check-br791:                               ; preds = %normal-dest784
  %irc-bit-cast795 = bitcast {}* %"closure->LAMBDA1305" to i8*
  %gep796 = getelementptr inbounds i8, i8* %irc-bit-cast795, i64 -9
  %irc-bit-cast797 = bitcast i8* %gep796 to i64*
  %368 = load i64, i64* %irc-bit-cast797, align 8
  %.off4183 = add i64 %368, -913
  %369 = icmp ult i64 %.off4183, 85
  br i1 %369, label %tag121, label %header-check-br2278

normal-dest800:                                   ; preds = %tag52
  %ptrtoint801 = ptrtoint {}* %G149790.0 to i64
  %entry-point-addr-uint802 = add i64 %ptrtoint801, 7
  %entry-point-addr803 = inttoptr i64 %entry-point-addr-uint802 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point804 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr803, align 8
  %370 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point804({}* %G149790.0, i64 2, {}* %37, {}* %vaarg, {}* null, {}* null)
          to label %tag120 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest813:                                   ; preds = %tag53
  %ptrtoint814 = ptrtoint {}* %39 to i64
  %entry-point-addr-uint815 = add i64 %ptrtoint814, 7
  %entry-point-addr816 = inttoptr i64 %entry-point-addr-uint815 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point817 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr816, align 8
  %371 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point817({}* %39, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest820 unwind label %cleanup-lpad.loopexit

normal-dest820:                                   ; preds = %normal-dest813
  %.elt3429 = extractvalue { {}*, i64 } %371, 0
  %.elt3431 = extractvalue { {}*, i64 } %371, 1
  %cond3173 = icmp eq i64 %.elt3431, 0
  %372 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149143.0 = select i1 %cond3173, {}* %372, {}* %.elt3429
  %373 = icmp eq {}* %G149143.0, %372
  br i1 %373, label %tag143, label %tag234

header-check-br826:                               ; preds = %tag54
  %irc-bit-cast830 = bitcast {}* %"closure->LAMBDA648" to i8*
  %gep831 = getelementptr inbounds i8, i8* %irc-bit-cast830, i64 -9
  %irc-bit-cast832 = bitcast i8* %gep831 to i64*
  %374 = load i64, i64* %irc-bit-cast832, align 8
  %.off4153 = add i64 %374, -913
  %375 = icmp ult i64 %.off4153, 85
  br i1 %375, label %tag108, label %header-check-br1324

header-check-br835:                               ; preds = %header-check-br1367
  %.off4176 = add i64 %517, -1001
  %376 = icmp ult i64 %.off4176, 5
  br i1 %376, label %maybe-more-tests843, label %tag167

maybe-more-tests843:                              ; preds = %header-check-br835
  %377 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %378 = invoke {}* @cc_safe_fdefinition({}* %377)
          to label %normal-dest1628 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest845:                                   ; preds = %tag56
  %379 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %380 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %381 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %382 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 363), align 8
  %ptrtoint846 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint847 = add i64 %ptrtoint846, 7
  %entry-point-addr848 = inttoptr i64 %entry-point-addr-uint847 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point849 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr848, align 8
  %383 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point849({}* %41, i64 5, {}* %379, {}* %380, {}* %"closure->LAMBDA2195", {}* %381, {}* %382)
          to label %normal-dest852 unwind label %cleanup-lpad.loopexit

normal-dest852:                                   ; preds = %normal-dest845
  %.elt3365 = extractvalue { {}*, i64 } %383, 0
  %.elt3367 = extractvalue { {}*, i64 } %383, 1
  %cond3162 = icmp eq i64 %.elt3367, 0
  %384 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149276.1 = select i1 %cond3162, {}* %384, {}* %.elt3365
  br label %tag152

normal-dest859:                                   ; preds = %tag58
  %ptrtoint860 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint861 = add i64 %ptrtoint860, 7
  %entry-point-addr862 = inttoptr i64 %entry-point-addr-uint861 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point863 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr862, align 8
  %385 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point863({}* %43, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest866 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest866:                                   ; preds = %normal-dest859
  %.elt3283 = extractvalue { {}*, i64 } %385, 0
  %.elt3285 = extractvalue { {}*, i64 } %385, 1
  %cond3148 = icmp eq i64 %.elt3285, 0
  %386 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %"%DOLIST-VAR.1" = select i1 %cond3148, {}* %386, {}* %.elt3283
  %387 = icmp eq {}* %"%DOLIST-VAR.1", %386
  br i1 %387, label %tag37, label %tag250.preheader

tag250.preheader:                                 ; preds = %normal-dest866
  br label %tag250

header-check-br872:                               ; preds = %tag59
  %irc-bit-cast876 = bitcast {}* %"closure->LAMBDA1613" to i8*
  %gep877 = getelementptr inbounds i8, i8* %irc-bit-cast876, i64 -9
  %irc-bit-cast878 = bitcast i8* %gep877 to i64*
  %388 = load i64, i64* %irc-bit-cast878, align 8
  %.off4121 = add i64 %388, -913
  %389 = icmp ult i64 %.off4121, 85
  br i1 %389, label %tag192, label %header-check-br2185

header-check-br881:                               ; preds = %tag60
  %irc-bit-cast885 = bitcast {}* %"closure->LAMBDA3106" to i8*
  %gep886 = getelementptr inbounds i8, i8* %irc-bit-cast885, i64 -9
  %irc-bit-cast887 = bitcast i8* %gep886 to i64*
  %390 = load i64, i64* %irc-bit-cast887, align 8
  %.off4107 = add i64 %390, -913
  %391 = icmp ult i64 %.off4107, 85
  br i1 %391, label %tag197, label %header-check-br1565

header-check-br890:                               ; preds = %header-check-br1701
  %.off4094 = add i64 %604, -1001
  %392 = icmp ult i64 %.off4094, 5
  br i1 %392, label %maybe-more-tests898, label %tag194

maybe-more-tests898:                              ; preds = %header-check-br890
  %393 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %394 = invoke {}* @cc_safe_fdefinition({}* %393)
          to label %normal-dest1091 unwind label %cleanup-lpad.loopexit

normal-dest900:                                   ; preds = %tag66
  %395 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %396 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %397 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %398 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 351), align 8
  %ptrtoint901 = ptrtoint {}* %45 to i64
  %entry-point-addr-uint902 = add i64 %ptrtoint901, 7
  %entry-point-addr903 = inttoptr i64 %entry-point-addr-uint902 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point904 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr903, align 8
  %399 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point904({}* %45, i64 5, {}* %395, {}* %396, {}* %"closure->LAMBDA1613", {}* %397, {}* %398)
          to label %normal-dest907 unwind label %cleanup-lpad.loopexit

normal-dest907:                                   ; preds = %normal-dest900
  %.elt3517 = extractvalue { {}*, i64 } %399, 0
  %.elt3519 = extractvalue { {}*, i64 } %399, 1
  %cond3190 = icmp eq i64 %.elt3519, 0
  %400 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148988.1 = select i1 %cond3190, {}* %400, {}* %.elt3517
  br label %tag125

normal-dest914:                                   ; preds = %maybe-more-tests2092
  %ptrtoint915 = ptrtoint {}* %685 to i64
  %entry-point-addr-uint916 = add i64 %ptrtoint915, 7
  %entry-point-addr917 = inttoptr i64 %entry-point-addr-uint916 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point918 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr917, align 8
  %401 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point918({}* %685, i64 1, {}* nonnull %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest921 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest921:                                   ; preds = %normal-dest914
  %.elt3796 = extractvalue { {}*, i64 } %401, 0
  %.elt3798 = extractvalue { {}*, i64 } %401, 1
  %cond3241 = icmp eq i64 %.elt3798, 0
  %402 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149474.2 = select i1 %cond3241, {}* %402, {}* %.elt3796
  br label %tag22

normal-dest928:                                   ; preds = %tag68
  %ptrtoint929 = ptrtoint {}* %47 to i64
  %entry-point-addr-uint930 = add i64 %ptrtoint929, 7
  %entry-point-addr931 = inttoptr i64 %entry-point-addr-uint930 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point932 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr931, align 8
  %403 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point932({}* %47, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest935 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest935:                                   ; preds = %normal-dest928
  %.elt3720 = extractvalue { {}*, i64 } %403, 0
  %.elt3722 = extractvalue { {}*, i64 } %403, 1
  %cond3227 = icmp eq i64 %.elt3722, 0
  %404 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149615.0 = select i1 %cond3227, {}* %404, {}* %.elt3720
  %405 = icmp eq {}* %G149615.0, %404
  br i1 %405, label %tag48, label %tag239

normal-dest942:                                   ; preds = %maybe-more-tests422
  %ptrtoint943 = ptrtoint {}* %285 to i64
  %entry-point-addr-uint944 = add i64 %ptrtoint943, 7
  %entry-point-addr945 = inttoptr i64 %entry-point-addr-uint944 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point946 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr945, align 8
  %406 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point946({}* %285, i64 1, {}* nonnull %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest949 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest949:                                   ; preds = %normal-dest942
  %.elt3772 = extractvalue { {}*, i64 } %406, 0
  %.elt3774 = extractvalue { {}*, i64 } %406, 1
  %cond3237 = icmp eq i64 %.elt3774, 0
  %407 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149502.2 = select i1 %cond3237, {}* %407, {}* %.elt3772
  br label %tag224

normal-dest956:                                   ; preds = %maybe-more-tests1767
  %ptrtoint957 = ptrtoint {}* %615 to i64
  %entry-point-addr-uint958 = add i64 %ptrtoint957, 7
  %entry-point-addr959 = inttoptr i64 %entry-point-addr-uint958 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point960 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr959, align 8
  %408 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point960({}* %615, i64 1, {}* nonnull %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest963 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest963:                                   ; preds = %normal-dest956
  %.elt3820 = extractvalue { {}*, i64 } %408, 0
  %.elt3822 = extractvalue { {}*, i64 } %408, 1
  %cond3246 = icmp eq i64 %.elt3822, 0
  %409 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149443.1 = select i1 %cond3246, {}* %409, {}* %.elt3820
  br label %tag215

header-check-br969:                               ; preds = %tag73
  %irc-bit-cast973 = bitcast {}* %"closure->LAMBDA2195" to i8*
  %gep974 = getelementptr inbounds i8, i8* %irc-bit-cast973, i64 -9
  %irc-bit-cast975 = bitcast i8* %gep974 to i64*
  %410 = load i64, i64* %irc-bit-cast975, align 8
  %.off4101 = add i64 %410, -913
  %411 = icmp ult i64 %.off4101, 85
  br i1 %411, label %tag190, label %header-check-br2287

normal-dest985:                                   ; preds = %tag74
  %412 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 149), align 8
  %413 = invoke {}* @cc_safe_fdefinition({}* %412)
          to label %normal-dest991 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest991:                                   ; preds = %normal-dest985
  %ptrtoint992 = ptrtoint {}* %413 to i64
  %entry-point-addr-uint993 = add i64 %ptrtoint992, 7
  %entry-point-addr994 = inttoptr i64 %entry-point-addr-uint993 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point995 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr994, align 8
  %414 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point995({}* %413, i64 1, {}* %G148642.0, {}* null, {}* null, {}* null)
          to label %normal-dest998 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest998:                                   ; preds = %normal-dest991
  %.elt3652 = extractvalue { {}*, i64 } %414, 0
  %415 = ptrtoint {}* %.elt3652 to i64
  %.elt3654 = extractvalue { {}*, i64 } %414, 1
  br label %tag243

normal-dest1000:                                  ; preds = %tag75
  %416 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %417 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %418 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %419 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 359), align 8
  %ptrtoint1001 = ptrtoint {}* %51 to i64
  %entry-point-addr-uint1002 = add i64 %ptrtoint1001, 7
  %entry-point-addr1003 = inttoptr i64 %entry-point-addr-uint1002 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1004 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1003, align 8
  %420 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1004({}* %51, i64 5, {}* %416, {}* %417, {}* %"closure->LAMBDA3106", {}* %418, {}* %419)
          to label %normal-dest1007 unwind label %cleanup-lpad.loopexit

normal-dest1007:                                  ; preds = %normal-dest1000
  %.elt3397 = extractvalue { {}*, i64 } %420, 0
  %.elt3399 = extractvalue { {}*, i64 } %420, 1
  %cond3168 = icmp eq i64 %.elt3399, 0
  %421 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149175.2 = select i1 %cond3168, {}* %421, {}* %.elt3397
  br label %tag197

normal-dest1030:                                  ; preds = %tag77
  %422 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 149), align 8
  %423 = invoke {}* @cc_safe_fdefinition({}* %422)
          to label %normal-dest1036 unwind label %cleanup-lpad.loopexit

normal-dest1036:                                  ; preds = %normal-dest1030
  %ptrtoint1037 = ptrtoint {}* %423 to i64
  %entry-point-addr-uint1038 = add i64 %ptrtoint1037, 7
  %entry-point-addr1039 = inttoptr i64 %entry-point-addr-uint1038 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1040 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1039, align 8
  %424 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1040({}* %423, i64 1, {}* %G148606.0, {}* null, {}* null, {}* null)
          to label %tag161 unwind label %cleanup-lpad.loopexit

normal-dest1049:                                  ; preds = %tag79
  %425 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %426 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %427 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %428 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 369), align 8
  %ptrtoint1050 = ptrtoint {}* %56 to i64
  %entry-point-addr-uint1051 = add i64 %ptrtoint1050, 7
  %entry-point-addr1052 = inttoptr i64 %entry-point-addr-uint1051 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1053 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1052, align 8
  %429 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1053({}* %56, i64 5, {}* %425, {}* %426, {}* %"closure->LAMBDA648", {}* %427, {}* %428)
          to label %normal-dest1056 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1056:                                  ; preds = %normal-dest1049
  %.elt3680 = extractvalue { {}*, i64 } %429, 0
  %.elt3682 = extractvalue { {}*, i64 } %429, 1
  %cond3220 = icmp eq i64 %.elt3682, 0
  %430 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148685.1 = select i1 %cond3220, {}* %430, {}* %.elt3680
  br label %tag108

normal-dest1063:                                  ; preds = %tag80
  %431 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %432 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %433 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %434 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 326), align 16
  %ptrtoint1064 = ptrtoint {}* %58 to i64
  %entry-point-addr-uint1065 = add i64 %ptrtoint1064, 7
  %entry-point-addr1066 = inttoptr i64 %entry-point-addr-uint1065 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1067 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1066, align 8
  %435 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1067({}* %58, i64 5, {}* %431, {}* %432, {}* %"closure->LAMBDA2909", {}* %433, {}* %434)
          to label %normal-dest1070 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1070:                                  ; preds = %normal-dest1063
  %.elt3700 = extractvalue { {}*, i64 } %435, 0
  %.elt3702 = extractvalue { {}*, i64 } %435, 1
  %cond3224 = icmp eq i64 %.elt3702, 0
  %436 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149623.1 = select i1 %cond3224, {}* %436, {}* %.elt3700
  br label %tag151

normal-dest1077:                                  ; preds = %tag81
  %437 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %438 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %439 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %440 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 357), align 8
  %ptrtoint1078 = ptrtoint {}* %60 to i64
  %entry-point-addr-uint1079 = add i64 %ptrtoint1078, 7
  %entry-point-addr1080 = inttoptr i64 %entry-point-addr-uint1079 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1081 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1080, align 8
  %441 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1081({}* %60, i64 5, {}* %437, {}* %438, {}* %"closure->LAMBDA3106", {}* %439, {}* %440)
          to label %normal-dest1084 unwind label %cleanup-lpad.loopexit

normal-dest1084:                                  ; preds = %normal-dest1077
  %.elt3437 = extractvalue { {}*, i64 } %441, 0
  %.elt3439 = extractvalue { {}*, i64 } %441, 1
  %cond3175 = icmp eq i64 %.elt3439, 0
  %442 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149124.1 = select i1 %cond3175, {}* %442, {}* %.elt3437
  br label %tag180

normal-dest1091:                                  ; preds = %maybe-more-tests898
  %ptrtoint1092 = ptrtoint {}* %394 to i64
  %entry-point-addr-uint1093 = add i64 %ptrtoint1092, 7
  %entry-point-addr1094 = inttoptr i64 %entry-point-addr-uint1093 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1095 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1094, align 8
  %443 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1095({}* %394, i64 1, {}* nonnull %"closure->LAMBDA2195", {}* null, {}* null, {}* null)
          to label %normal-dest1098 unwind label %cleanup-lpad.loopexit

normal-dest1098:                                  ; preds = %normal-dest1091
  %.elt3333 = extractvalue { {}*, i64 } %443, 0
  %.elt3335 = extractvalue { {}*, i64 } %443, 1
  %cond3156 = icmp eq i64 %.elt3335, 0
  %444 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149325.1 = select i1 %cond3156, {}* %444, {}* %.elt3333
  br label %tag95

normal-dest1105:                                  ; preds = %tag87
  %445 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %446 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %447 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %448 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 343), align 8
  %ptrtoint1106 = ptrtoint {}* %62 to i64
  %entry-point-addr-uint1107 = add i64 %ptrtoint1106, 7
  %entry-point-addr1108 = inttoptr i64 %entry-point-addr-uint1107 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1109 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1108, align 8
  %449 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1109({}* %62, i64 5, {}* %445, {}* %446, {}* %"closure->LAMBDA1471", {}* %447, {}* %448)
          to label %normal-dest1112 unwind label %cleanup-lpad.loopexit

normal-dest1112:                                  ; preds = %normal-dest1105
  %.elt3605 = extractvalue { {}*, i64 } %449, 0
  %.elt3607 = extractvalue { {}*, i64 } %449, 1
  %cond3206 = icmp eq i64 %.elt3607, 0
  %450 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148823.1 = select i1 %cond3206, {}* %450, {}* %.elt3605
  br label %tag223

header-check-br1118:                              ; preds = %header-check-br680
  %.off4182 = add i64 %347, -1001
  %451 = icmp ult i64 %.off4182, 5
  br i1 %451, label %maybe-more-tests1126, label %tag206

maybe-more-tests1126:                             ; preds = %header-check-br1118
  %452 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %453 = invoke {}* @cc_safe_fdefinition({}* %452)
          to label %normal-dest1972 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1128:                                  ; preds = %maybe-more-tests2164
  %ptrtoint1129 = ptrtoint {}* %702 to i64
  %entry-point-addr-uint1130 = add i64 %ptrtoint1129, 7
  %entry-point-addr1131 = inttoptr i64 %entry-point-addr-uint1130 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1132 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1131, align 8
  %454 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1132({}* %702, i64 1, {}* nonnull %"closure->LAMBDA2909", {}* null, {}* null, {}* null)
          to label %normal-dest1135 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1135:                                  ; preds = %normal-dest1128
  %.elt3756 = extractvalue { {}*, i64 } %454, 0
  %.elt3758 = extractvalue { {}*, i64 } %454, 1
  %cond3234 = icmp eq i64 %.elt3758, 0
  %455 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149572.1 = select i1 %cond3234, {}* %455, {}* %.elt3756
  br label %tag292

normal-dest1142:                                  ; preds = %maybe-more-tests538
  %ptrtoint1143 = ptrtoint {}* %313 to i64
  %entry-point-addr-uint1144 = add i64 %ptrtoint1143, 7
  %entry-point-addr1145 = inttoptr i64 %entry-point-addr-uint1144 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1146 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1145, align 8
  %456 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1146({}* %313, i64 1, {}* nonnull %"closure->LAMBDA1613", {}* null, {}* null, {}* null)
          to label %normal-dest1149 unwind label %cleanup-lpad.loopexit

normal-dest1149:                                  ; preds = %normal-dest1142
  %.elt3537 = extractvalue { {}*, i64 } %456, 0
  %.elt3539 = extractvalue { {}*, i64 } %456, 1
  %cond3193 = icmp eq i64 %.elt3539, 0
  %457 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148972.1 = select i1 %cond3193, {}* %457, {}* %.elt3537
  br label %tag219

normal-dest1156:                                  ; preds = %maybe-more-tests2231
  %ptrtoint1157 = ptrtoint {}* %725 to i64
  %entry-point-addr-uint1158 = add i64 %ptrtoint1157, 7
  %entry-point-addr1159 = inttoptr i64 %entry-point-addr-uint1158 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1160 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1159, align 8
  %458 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1160({}* %725, i64 1, {}* nonnull %"closure->LAMBDA648", {}* null, {}* null, {}* null)
          to label %normal-dest1163 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1163:                                  ; preds = %normal-dest1156
  %.elt3676 = extractvalue { {}*, i64 } %458, 0
  %.elt3678 = extractvalue { {}*, i64 } %458, 1
  %cond3219 = icmp eq i64 %.elt3678, 0
  %459 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148701.1 = select i1 %cond3219, {}* %459, {}* %.elt3676
  br label %tag38

normal-dest1170:                                  ; preds = %tag95
  %ptrtoint1171 = ptrtoint {}* %G149325.0 to i64
  %entry-point-addr-uint1172 = add i64 %ptrtoint1171, 7
  %entry-point-addr1173 = inttoptr i64 %entry-point-addr-uint1172 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1174 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1173, align 8
  %460 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1174({}* %G149325.0, i64 2, {}* %64, {}* %A.0, {}* null, {}* null)
          to label %tag237 unwind label %cleanup-lpad.loopexit

normal-dest1183:                                  ; preds = %tag96
  %ptrtoint1184 = ptrtoint {}* %66 to i64
  %entry-point-addr-uint1185 = add i64 %ptrtoint1184, 7
  %entry-point-addr1186 = inttoptr i64 %entry-point-addr-uint1185 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1187 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1186, align 8
  %461 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1187({}* %66, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest1190 unwind label %cleanup-lpad.loopexit

normal-dest1190:                                  ; preds = %normal-dest1183
  %.elt3509 = extractvalue { {}*, i64 } %461, 0
  %.elt3511 = extractvalue { {}*, i64 } %461, 1
  %cond3188 = icmp eq i64 %.elt3511, 0
  %462 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149007.0 = select i1 %cond3188, {}* %462, {}* %.elt3509
  %463 = icmp eq {}* %G149007.0, %462
  br i1 %463, label %tag, label %tag174

normal-dest1197:                                  ; preds = %tag98
  %464 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %465 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %466 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %467 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint1199 = ptrtoint {}* %68 to i64
  %entry-point-addr-uint1200 = add i64 %ptrtoint1199, 7
  %entry-point-addr1201 = inttoptr i64 %entry-point-addr-uint1200 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1202 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1201, align 8
  %468 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1202({}* %68, i64 5, {}* %464, {}* %465, {}* %"%DOLIST-VAR.04191", {}* %466, {}* %467)
          to label %normal-dest1205 unwind label %cleanup-lpad.loopexit

normal-dest1205:                                  ; preds = %normal-dest1197
  %.elt3329 = extractvalue { {}*, i64 } %468, 0
  %.elt3331 = extractvalue { {}*, i64 } %468, 1
  %cond3209 = icmp eq i64 %.elt3331, 0
  %469 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %"%DOLIST-VAR.2" = select i1 %cond3209, {}* %469, {}* %.elt3329
  br label %tag287.backedge

tag287.backedge:                                  ; preds = %normal-dest1205, %tag214
  %470 = phi {}* [ %.pre4195, %tag214 ], [ %469, %normal-dest1205 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %163, %tag214 ], [ %"%DOLIST-VAR.2", %normal-dest1205 ]
  %471 = icmp eq {}* %"%DOLIST-VAR.0.be", %470
  br i1 %471, label %tag37, label %tag250

normal-dest1212:                                  ; preds = %tag100
  %ptrtoint1213 = ptrtoint {}* %70 to i64
  %entry-point-addr-uint1214 = add i64 %ptrtoint1213, 7
  %entry-point-addr1215 = inttoptr i64 %entry-point-addr-uint1214 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1216 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1215, align 8
  %472 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1216({}* %70, i64 2, {}* %vaarg, {}* %A.0, {}* null, {}* null)
          to label %normal-dest1219 unwind label %cleanup-lpad.loopexit

normal-dest1219:                                  ; preds = %normal-dest1212
  %473 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %474 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 379), align 8
  %475 = invoke {}* @cc_safe_fdefinition({}* %474)
          to label %normal-dest1226 unwind label %cleanup-lpad.loopexit

normal-dest1226:                                  ; preds = %normal-dest1219
  %.elt3463 = extractvalue { {}*, i64 } %472, 1
  %cond3179 = icmp eq i64 %.elt3463, 0
  %.elt3461 = extractvalue { {}*, i64 } %472, 0
  %G149103.0 = select i1 %cond3179, {}* %473, {}* %.elt3461
  %ptrtoint1227 = ptrtoint {}* %475 to i64
  %entry-point-addr-uint1228 = add i64 %ptrtoint1227, 7
  %entry-point-addr1229 = inttoptr i64 %entry-point-addr-uint1228 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1230 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1229, align 8
  %476 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1230({}* %475, i64 1, {}* %G149103.0, {}* null, {}* null, {}* null)
          to label %normal-dest1233 unwind label %cleanup-lpad.loopexit

normal-dest1233:                                  ; preds = %normal-dest1226
  %.elt3465 = extractvalue { {}*, i64 } %476, 0
  %.elt3467 = extractvalue { {}*, i64 } %476, 1
  %cond3180 = icmp eq i64 %.elt3467, 0
  %477 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149840.0 = select i1 %cond3180, {}* %477, {}* %.elt3465
  %478 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 336), align 16
  %479 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 381), align 8
  %480 = invoke {}* @cc_safe_fdefinition({}* %479)
          to label %normal-dest1240 unwind label %cleanup-lpad.loopexit

normal-dest1240:                                  ; preds = %normal-dest1233
  %ptrtoint1241 = ptrtoint {}* %480 to i64
  %entry-point-addr-uint1242 = add i64 %ptrtoint1241, 7
  %entry-point-addr1243 = inttoptr i64 %entry-point-addr-uint1242 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1244 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1243, align 8
  %481 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1244({}* %480, i64 1, {}* %478, {}* null, {}* null, {}* null)
          to label %normal-dest1247 unwind label %cleanup-lpad.loopexit

normal-dest1247:                                  ; preds = %normal-dest1240
  %482 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %483 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 383), align 8
  %484 = invoke {}* @cc_safe_fdefinition({}* %483)
          to label %normal-dest1254 unwind label %cleanup-lpad.loopexit

normal-dest1254:                                  ; preds = %normal-dest1247
  %.elt3471 = extractvalue { {}*, i64 } %481, 1
  %cond3181 = icmp eq i64 %.elt3471, 0
  %.elt3469 = extractvalue { {}*, i64 } %481, 0
  %G149841.0 = select i1 %cond3181, {}* %482, {}* %.elt3469
  %ptrtoint1255 = ptrtoint {}* %484 to i64
  %entry-point-addr-uint1256 = add i64 %ptrtoint1255, 7
  %entry-point-addr1257 = inttoptr i64 %entry-point-addr-uint1256 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1258 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1257, align 8
  %485 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1258({}* %484, i64 2, {}* %G149840.0, {}* %G149841.0, {}* null, {}* null)
          to label %normal-dest1261 unwind label %cleanup-lpad.loopexit

normal-dest1261:                                  ; preds = %normal-dest1254
  %.elt3473 = extractvalue { {}*, i64 } %485, 0
  %.elt3475 = extractvalue { {}*, i64 } %485, 1
  %cond3182 = icmp eq i64 %.elt3475, 0
  %486 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149844.0 = select i1 %cond3182, {}* %486, {}* %.elt3473
  %487 = icmp eq {}* %G149844.0, %486
  %.val4118 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G149101.0 = select i1 %487, {}* %486, {}* %.val4118
  %488 = icmp eq {}* %G149101.0, %486
  %489 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 236), align 16
  br i1 %488, label %tag129, label %tag142

header-check-br1267:                              ; preds = %tag103
  %irc-bit-cast1271 = bitcast {}* %"closure->LAMBDA648" to i8*
  %gep1272 = getelementptr inbounds i8, i8* %irc-bit-cast1271, i64 -9
  %irc-bit-cast1273 = bitcast i8* %gep1272 to i64*
  %490 = load i64, i64* %irc-bit-cast1273, align 8
  %.off4145 = add i64 %490, -913
  %491 = icmp ult i64 %.off4145, 85
  br i1 %491, label %tag106, label %header-check-br2469

normal-dest1277:                                  ; preds = %tag106
  %492 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 370), align 16
  %ptrtoint1278 = ptrtoint {}* %G148751.0 to i64
  %entry-point-addr-uint1279 = add i64 %ptrtoint1278, 7
  %entry-point-addr1280 = inttoptr i64 %entry-point-addr-uint1279 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1281 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1280, align 8
  %493 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1281({}* %G148751.0, i64 2, {}* %72, {}* %492, {}* null, {}* null)
          to label %normal-dest1284 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1284:                                  ; preds = %normal-dest1277
  %494 = load i64, i64* bitcast ({}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12) to i64*), align 16
  br label %tag243

normal-dest1297:                                  ; preds = %tag108
  %495 = load i64, i64* bitcast ({}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12) to i64*), align 16
  br label %tag243

normal-dest1304:                                  ; preds = %kw-exit-block
  %496 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %497 = icmp eq {}* %stream.0, %496
  %.val4083 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149806.0 = select i1 %497, {}* %496, {}* %.val4083
  %498 = icmp eq {}* %G149806.0, %.val4083
  br i1 %498, label %tag211, label %tag244

normal-dest1311:                                  ; preds = %tag110
  %ptrtoint1312 = ptrtoint {}* %76 to i64
  %entry-point-addr-uint1313 = add i64 %ptrtoint1312, 7
  %entry-point-addr1314 = inttoptr i64 %entry-point-addr-uint1313 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1315 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1314, align 8
  %499 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1315({}* %76, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest1318 unwind label %cleanup-lpad.loopexit

normal-dest1318:                                  ; preds = %normal-dest1311
  %.elt3357 = extractvalue { {}*, i64 } %499, 0
  %.elt3359 = extractvalue { {}*, i64 } %499, 1
  %cond3160 = icmp eq i64 %.elt3359, 0
  %500 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149294.0 = select i1 %cond3160, {}* %500, {}* %.elt3357
  %501 = icmp eq {}* %G149294.0, %500
  br i1 %501, label %tag73, label %tag41

header-check-br1324:                              ; preds = %header-check-br826
  %.off4154 = add i64 %374, -1001
  %502 = icmp ult i64 %.off4154, 5
  br i1 %502, label %maybe-more-tests1332, label %tag79

maybe-more-tests1332:                             ; preds = %header-check-br1324
  %503 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %504 = invoke {}* @cc_safe_fdefinition({}* %503)
          to label %normal-dest2121 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1334:                                  ; preds = %tag112
  %505 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %506 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %507 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %508 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 308), align 16
  %ptrtoint1335 = ptrtoint {}* %78 to i64
  %entry-point-addr-uint1336 = add i64 %ptrtoint1335, 7
  %entry-point-addr1337 = inttoptr i64 %entry-point-addr-uint1336 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1338 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1337, align 8
  %509 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1338({}* %78, i64 5, {}* %505, {}* %506, {}* %"closure->LAMBDA1305", {}* %507, {}* %508)
          to label %normal-dest1341 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1341:                                  ; preds = %normal-dest1334
  %.elt3884 = extractvalue { {}*, i64 } %509, 0
  %.elt3886 = extractvalue { {}*, i64 } %509, 1
  %cond3258 = icmp eq i64 %.elt3886, 0
  %510 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149726.2 = select i1 %cond3258, {}* %510, {}* %.elt3884
  br label %tag76

normal-dest1354:                                  ; preds = %tag115
  %511 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %512 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %513 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %514 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 358), align 16
  %ptrtoint1355 = ptrtoint {}* %82 to i64
  %entry-point-addr-uint1356 = add i64 %ptrtoint1355, 7
  %entry-point-addr1357 = inttoptr i64 %entry-point-addr-uint1356 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1358 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1357, align 8
  %515 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1358({}* %82, i64 5, {}* %511, {}* %512, {}* %"closure->LAMBDA3106", {}* %513, {}* %514)
          to label %normal-dest1361 unwind label %cleanup-lpad.loopexit

normal-dest1361:                                  ; preds = %normal-dest1354
  %.elt3413 = extractvalue { {}*, i64 } %515, 0
  %.elt3415 = extractvalue { {}*, i64 } %515, 1
  %cond3171 = icmp eq i64 %.elt3415, 0
  %516 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149151.1 = select i1 %cond3171, {}* %516, {}* %.elt3413
  br label %tag232

header-check-br1367:                              ; preds = %tag116
  %irc-bit-cast1371 = bitcast {}* %"closure->LAMBDA" to i8*
  %gep1372 = getelementptr inbounds i8, i8* %irc-bit-cast1371, i64 -9
  %irc-bit-cast1373 = bitcast i8* %gep1372 to i64*
  %517 = load i64, i64* %irc-bit-cast1373, align 8
  %.off4175 = add i64 %517, -913
  %518 = icmp ult i64 %.off4175, 85
  br i1 %518, label %tag225, label %header-check-br835

normal-dest1377:                                  ; preds = %tag117
  %ptrtoint1378 = ptrtoint {}* %84 to i64
  %entry-point-addr-uint1379 = add i64 %ptrtoint1378, 7
  %entry-point-addr1380 = inttoptr i64 %entry-point-addr-uint1379 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1381 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1380, align 8
  %519 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1381({}* %84, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest1384 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1384:                                  ; preds = %normal-dest1377
  %.elt3640 = extractvalue { {}*, i64 } %519, 0
  %.elt3642 = extractvalue { {}*, i64 } %519, 1
  %cond3213 = icmp eq i64 %.elt3642, 0
  %520 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148642.0 = select i1 %cond3213, {}* %520, {}* %.elt3640
  %ptrtoint1391 = ptrtoint {}* %"closure->LAMBDA648" to i64
  %tag-only1392 = and i64 %ptrtoint1391, 7
  %test1393 = icmp eq i64 %tag-only1392, 1
  br i1 %test1393, label %header-check-br1390, label %tag227

header-check-br1390:                              ; preds = %normal-dest1384
  %irc-bit-cast1394 = bitcast {}* %"closure->LAMBDA648" to i8*
  %gep1395 = getelementptr inbounds i8, i8* %irc-bit-cast1394, i64 -9
  %irc-bit-cast1396 = bitcast i8* %gep1395 to i64*
  %521 = load i64, i64* %irc-bit-cast1396, align 8
  %.off4149 = add i64 %521, -913
  %522 = icmp ult i64 %.off4149, 85
  br i1 %522, label %tag74, label %header-check-br2622

normal-dest1400:                                  ; preds = %tag118
  %523 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %524 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %525 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %526 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 311), align 8
  %ptrtoint1401 = ptrtoint {}* %86 to i64
  %entry-point-addr-uint1402 = add i64 %ptrtoint1401, 7
  %entry-point-addr1403 = inttoptr i64 %entry-point-addr-uint1402 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1404 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1403, align 8
  %527 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1404({}* %86, i64 5, {}* %523, {}* %524, {}* %"closure->LAMBDA1305", {}* %525, {}* %526)
          to label %normal-dest1407 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1407:                                  ; preds = %normal-dest1400
  %.elt = extractvalue { {}*, i64 } %527, 0
  %.elt3261 = extractvalue { {}*, i64 } %527, 1
  %cond = icmp eq i64 %.elt3261, 0
  %528 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149790.1 = select i1 %cond, {}* %528, {}* %.elt
  br label %tag52

normal-dest1420:                                  ; preds = %tag120
  %ptrtoint1421 = ptrtoint {}* %90 to i64
  %entry-point-addr-uint1422 = add i64 %ptrtoint1421, 7
  %entry-point-addr1423 = inttoptr i64 %entry-point-addr-uint1422 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1424 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1423, align 8
  %529 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1424({}* %90, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest1427 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1427:                                  ; preds = %normal-dest1420
  %.elt3267 = extractvalue { {}*, i64 } %529, 0
  %.elt3269 = extractvalue { {}*, i64 } %529, 1
  %cond3145 = icmp eq i64 %.elt3269, 0
  %530 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149721.0 = select i1 %cond3145, {}* %530, {}* %.elt3267
  %531 = icmp eq {}* %G149721.0, %530
  %532 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 236), align 16
  br i1 %531, label %tag26, label %tag284

normal-dest1457:                                  ; preds = %maybe-more-tests1611
  %ptrtoint1458 = ptrtoint {}* %582 to i64
  %entry-point-addr-uint1459 = add i64 %ptrtoint1458, 7
  %entry-point-addr1460 = inttoptr i64 %entry-point-addr-uint1459 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1461 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1460, align 8
  %533 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1461({}* %582, i64 1, {}* nonnull %"closure->LAMBDA3106", {}* null, {}* null, {}* null)
          to label %normal-dest1464 unwind label %cleanup-lpad.loopexit

normal-dest1464:                                  ; preds = %normal-dest1457
  %.elt3457 = extractvalue { {}*, i64 } %533, 0
  %.elt3459 = extractvalue { {}*, i64 } %533, 1
  %cond3178 = icmp eq i64 %.elt3459, 0
  %534 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149108.1 = select i1 %cond3178, {}* %534, {}* %.elt3457
  br label %tag246

normal-dest1470:                                  ; preds = %tag129
  %535 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %536 = icmp eq {}* %stream.0, %535
  %.val4132 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148923.0 = select i1 %536, {}* %535, {}* %.val4132
  %537 = icmp eq {}* %G148923.0, %.val4132
  br i1 %537, label %tag307, label %tag35

normal-dest1477:                                  ; preds = %tag130
  %538 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %539 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %540 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %541 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 318), align 16
  %ptrtoint1478 = ptrtoint {}* %95 to i64
  %entry-point-addr-uint1479 = add i64 %ptrtoint1478, 7
  %entry-point-addr1480 = inttoptr i64 %entry-point-addr-uint1479 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1481 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1480, align 8
  %542 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1481({}* %95, i64 5, {}* %538, {}* %539, {}* %"closure->LAMBDA", {}* %540, {}* %541)
          to label %normal-dest1484 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1484:                                  ; preds = %normal-dest1477
  %.elt3808 = extractvalue { {}*, i64 } %542, 0
  %.elt3810 = extractvalue { {}*, i64 } %542, 1
  %cond3244 = icmp eq i64 %.elt3810, 0
  %543 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149443.2 = select i1 %cond3244, {}* %543, {}* %.elt3808
  br label %tag215

normal-dest1491:                                  ; preds = %tag131
  %544 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 332), align 16
  %545 = invoke {}* @cc_safe_fdefinition({}* %544)
          to label %normal-dest1493 unwind label %cleanup-lpad.loopexit

normal-dest1493:                                  ; preds = %normal-dest1491
  %ptrtoint1494 = ptrtoint {}* %545 to i64
  %entry-point-addr-uint1495 = add i64 %ptrtoint1494, 7
  %entry-point-addr1496 = inttoptr i64 %entry-point-addr-uint1495 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1497 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1496, align 8
  %546 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1497({}* %545, i64 2, {}* %vaarg, {}* %A.0, {}* null, {}* null)
          to label %normal-dest1500 unwind label %cleanup-lpad.loopexit

normal-dest1500:                                  ; preds = %normal-dest1493
  %.elt3288 = extractvalue { {}*, i64 } %546, 0
  %.elt3290 = extractvalue { {}*, i64 } %546, 1
  %cond3149 = icmp eq i64 %.elt3290, 0
  %547 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149393.0 = select i1 %cond3149, {}* %547, {}* %.elt3288
  %548 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 334), align 16
  %ptrtoint1506 = ptrtoint {}* %97 to i64
  %entry-point-addr-uint1507 = add i64 %ptrtoint1506, 7
  %entry-point-addr1508 = inttoptr i64 %entry-point-addr-uint1507 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1509 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1508, align 8
  %549 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1509({}* %97, i64 2, {}* %G149393.0, {}* %548, {}* null, {}* null)
          to label %normal-dest1512 unwind label %cleanup-lpad.loopexit

normal-dest1512:                                  ; preds = %normal-dest1500
  %.elt3292 = extractvalue { {}*, i64 } %549, 0
  %.elt3294 = extractvalue { {}*, i64 } %549, 1
  %cond3150 = icmp eq i64 %.elt3294, 0
  %550 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149390.0 = select i1 %cond3150, {}* %550, {}* %.elt3292
  %551 = icmp eq {}* %G149390.0, %550
  br i1 %551, label %tag161, label %tag310

normal-dest1519:                                  ; preds = %tag133
  %ptrtoint1520 = ptrtoint {}* %99 to i64
  %entry-point-addr-uint1521 = add i64 %ptrtoint1520, 7
  %entry-point-addr1522 = inttoptr i64 %entry-point-addr-uint1521 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1523 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1522, align 8
  %552 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1523({}* %99, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest1526 unwind label %cleanup-lpad.loopexit

normal-dest1526:                                  ; preds = %normal-dest1519
  %.elt3337 = extractvalue { {}*, i64 } %552, 0
  %.elt3339 = extractvalue { {}*, i64 } %552, 1
  %cond3157 = icmp eq i64 %.elt3339, 0
  %553 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148568.0 = select i1 %cond3157, {}* %553, {}* %.elt3337
  %ptrtoint1534 = ptrtoint {}* %"closure->LAMBDA2195" to i64
  %tag-only1535 = and i64 %ptrtoint1534, 7
  %test1536 = icmp eq i64 %tag-only1535, 1
  br i1 %test1536, label %header-check-br1533, label %tag146

header-check-br1533:                              ; preds = %normal-dest1526
  %irc-bit-cast1537 = bitcast {}* %"closure->LAMBDA2195" to i8*
  %gep1538 = getelementptr inbounds i8, i8* %irc-bit-cast1537, i64 -9
  %irc-bit-cast1539 = bitcast i8* %gep1538 to i64*
  %554 = load i64, i64* %irc-bit-cast1539, align 8
  %.off4097 = add i64 %554, -913
  %555 = icmp ult i64 %.off4097, 85
  br i1 %555, label %tag236, label %header-check-br2568

normal-dest1543:                                  ; preds = %tag135
  %556 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %557 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %558 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %559 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 324), align 16
  %ptrtoint1544 = ptrtoint {}* %101 to i64
  %entry-point-addr-uint1545 = add i64 %ptrtoint1544, 7
  %entry-point-addr1546 = inttoptr i64 %entry-point-addr-uint1545 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1547 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1546, align 8
  %560 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1547({}* %101, i64 5, {}* %556, {}* %557, {}* %"closure->LAMBDA2909", {}* %558, {}* %559)
          to label %normal-dest1550 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1550:                                  ; preds = %normal-dest1543
  %.elt3744 = extractvalue { {}*, i64 } %560, 0
  %.elt3746 = extractvalue { {}*, i64 } %560, 1
  %cond3232 = icmp eq i64 %.elt3746, 0
  %561 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149572.2 = select i1 %cond3232, {}* %561, {}* %.elt3744
  br label %tag292

header-check-br1556:                              ; preds = %header-check-br1692
  %.off4138 = add i64 %602, -1001
  %562 = icmp ult i64 %.off4138, 5
  br i1 %562, label %maybe-more-tests1564, label %tag187

maybe-more-tests1564:                             ; preds = %header-check-br1556
  %563 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %564 = invoke {}* @cc_safe_fdefinition({}* %563)
          to label %normal-dest597 unwind label %cleanup-lpad.loopexit

header-check-br1565:                              ; preds = %header-check-br881
  %.off4108 = add i64 %390, -1001
  %565 = icmp ult i64 %.off4108, 5
  br i1 %565, label %maybe-more-tests1573, label %tag75

maybe-more-tests1573:                             ; preds = %header-check-br1565
  %566 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %567 = invoke {}* @cc_safe_fdefinition({}* %566)
          to label %normal-dest569 unwind label %cleanup-lpad.loopexit

normal-dest1575:                                  ; preds = %tag139
  %568 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %569 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %570 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %571 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint1577 = ptrtoint {}* %103 to i64
  %entry-point-addr-uint1578 = add i64 %ptrtoint1577, 7
  %entry-point-addr1579 = inttoptr i64 %entry-point-addr-uint1578 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1580 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1579, align 8
  %572 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1580({}* %103, i64 5, {}* %568, {}* %569, {}* %"%DOLIST-VAR.04191", {}* %570, {}* %571)
          to label %normal-dest1583 unwind label %cleanup-lpad.loopexit

normal-dest1583:                                  ; preds = %normal-dest1575
  %.elt3621 = extractvalue { {}*, i64 } %572, 0
  %.elt3623 = extractvalue { {}*, i64 } %572, 1
  %cond3210 = icmp eq i64 %.elt3623, 0
  %573 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %A.1 = select i1 %cond3210, {}* %573, {}* %.elt3621
  br label %tag131

normal-dest1590:                                  ; preds = %tag140
  %574 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %575 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %576 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %577 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 352), align 16
  %ptrtoint1591 = ptrtoint {}* %105 to i64
  %entry-point-addr-uint1592 = add i64 %ptrtoint1591, 7
  %entry-point-addr1593 = inttoptr i64 %entry-point-addr-uint1592 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1594 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1593, align 8
  %578 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1594({}* %105, i64 5, {}* %574, {}* %575, {}* %"closure->LAMBDA1613", {}* %576, {}* %577)
          to label %normal-dest1597 unwind label %cleanup-lpad.loopexit

normal-dest1597:                                  ; preds = %normal-dest1590
  %.elt3493 = extractvalue { {}*, i64 } %578, 0
  %.elt3495 = extractvalue { {}*, i64 } %578, 1
  %cond3186 = icmp eq i64 %.elt3495, 0
  %579 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149015.2 = select i1 %cond3186, {}* %579, {}* %.elt3493
  br label %tag77

header-check-br1603:                              ; preds = %header-check-br1618
  %.off4116 = add i64 %586, -1001
  %580 = icmp ult i64 %.off4116, 5
  br i1 %580, label %maybe-more-tests1611, label %tag266

maybe-more-tests1611:                             ; preds = %header-check-br1603
  %581 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %582 = invoke {}* @cc_safe_fdefinition({}* %581)
          to label %normal-dest1457 unwind label %cleanup-lpad.loopexit

normal-dest1612:                                  ; preds = %tag142
  %583 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %584 = icmp eq {}* %stream.0, %583
  %.val4120 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149056.0 = select i1 %584, {}* %583, {}* %.val4120
  %585 = icmp eq {}* %G149056.0, %.val4120
  br i1 %585, label %tag200, label %tag59

header-check-br1618:                              ; preds = %tag143
  %irc-bit-cast1622 = bitcast {}* %"closure->LAMBDA3106" to i8*
  %gep1623 = getelementptr inbounds i8, i8* %irc-bit-cast1622, i64 -9
  %irc-bit-cast1624 = bitcast i8* %gep1623 to i64*
  %586 = load i64, i64* %irc-bit-cast1624, align 8
  %.off4115 = add i64 %586, -913
  %587 = icmp ult i64 %.off4115, 85
  br i1 %587, label %tag246, label %header-check-br1603

normal-dest1628:                                  ; preds = %maybe-more-tests843
  %ptrtoint1629 = ptrtoint {}* %378 to i64
  %entry-point-addr-uint1630 = add i64 %ptrtoint1629, 7
  %entry-point-addr1631 = inttoptr i64 %entry-point-addr-uint1630 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1632 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1631, align 8
  %588 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1632({}* %378, i64 1, {}* nonnull %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest1635 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1635:                                  ; preds = %normal-dest1628
  %.elt3836 = extractvalue { {}*, i64 } %588, 0
  %.elt3838 = extractvalue { {}*, i64 } %588, 1
  %cond3249 = icmp eq i64 %.elt3838, 0
  %589 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149423.1 = select i1 %cond3249, {}* %589, {}* %.elt3836
  br label %tag225

normal-dest1642:                                  ; preds = %tag145
  %ptrtoint1643 = ptrtoint {}* %107 to i64
  %entry-point-addr-uint1644 = add i64 %ptrtoint1643, 7
  %entry-point-addr1645 = inttoptr i64 %entry-point-addr-uint1644 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1646 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1645, align 8
  %590 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1646({}* %107, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest1649 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1649:                                  ; preds = %normal-dest1642
  %.elt3776 = extractvalue { {}*, i64 } %590, 0
  %.elt3778 = extractvalue { {}*, i64 } %590, 1
  %cond3238 = icmp eq i64 %.elt3778, 0
  %591 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148549.0 = select i1 %cond3238, {}* %591, {}* %.elt3776
  %ptrtoint1656 = ptrtoint {}* %"closure->LAMBDA" to i64
  %tag-only1657 = and i64 %ptrtoint1656, 7
  %test1658 = icmp eq i64 %tag-only1657, 1
  br i1 %test1658, label %header-check-br1655, label %tag10

header-check-br1655:                              ; preds = %normal-dest1649
  %irc-bit-cast1659 = bitcast {}* %"closure->LAMBDA" to i8*
  %gep1660 = getelementptr inbounds i8, i8* %irc-bit-cast1659, i64 -9
  %irc-bit-cast1661 = bitcast i8* %gep1660 to i64*
  %592 = load i64, i64* %irc-bit-cast1661, align 8
  %.off4171 = add i64 %592, -913
  %593 = icmp ult i64 %.off4171, 85
  br i1 %593, label %tag22, label %header-check-br2084

normal-dest1665:                                  ; preds = %tag146
  %594 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %595 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %596 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %597 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 364), align 16
  %ptrtoint1666 = ptrtoint {}* %109 to i64
  %entry-point-addr-uint1667 = add i64 %ptrtoint1666, 7
  %entry-point-addr1668 = inttoptr i64 %entry-point-addr-uint1667 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1669 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1668, align 8
  %598 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1669({}* %109, i64 5, {}* %594, {}* %595, {}* %"closure->LAMBDA2195", {}* %596, {}* %597)
          to label %normal-dest1672 unwind label %cleanup-lpad.loopexit

normal-dest1672:                                  ; preds = %normal-dest1665
  %.elt3341 = extractvalue { {}*, i64 } %598, 0
  %.elt3343 = extractvalue { {}*, i64 } %598, 1
  %cond3158 = icmp eq i64 %.elt3343, 0
  %599 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149302.2 = select i1 %cond3158, {}* %599, {}* %.elt3341
  br label %tag236

normal-dest1679:                                  ; preds = %tag148
  %ptrtoint1680 = ptrtoint {}* %111 to i64
  %entry-point-addr-uint1681 = add i64 %ptrtoint1680, 7
  %entry-point-addr1682 = inttoptr i64 %entry-point-addr-uint1681 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1683 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1682, align 8
  %600 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1683({}* %111, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest1686 unwind label %cleanup-lpad.loopexit

normal-dest1686:                                  ; preds = %normal-dest1679
  %.elt3557 = extractvalue { {}*, i64 } %600, 0
  %.elt3559 = extractvalue { {}*, i64 } %600, 1
  %cond3197 = icmp eq i64 %.elt3559, 0
  %601 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148625.0 = select i1 %cond3197, {}* %601, {}* %.elt3557
  %ptrtoint1693 = ptrtoint {}* %"closure->LAMBDA1471" to i64
  %tag-only1694 = and i64 %ptrtoint1693, 7
  %test1695 = icmp eq i64 %tag-only1694, 1
  br i1 %test1695, label %header-check-br1692, label %tag187

header-check-br1692:                              ; preds = %normal-dest1686
  %irc-bit-cast1696 = bitcast {}* %"closure->LAMBDA1471" to i8*
  %gep1697 = getelementptr inbounds i8, i8* %irc-bit-cast1696, i64 -9
  %irc-bit-cast1698 = bitcast i8* %gep1697 to i64*
  %602 = load i64, i64* %irc-bit-cast1698, align 8
  %.off4137 = add i64 %602, -913
  %603 = icmp ult i64 %.off4137, 85
  br i1 %603, label %tag299, label %header-check-br1556

header-check-br1701:                              ; preds = %tag150
  %irc-bit-cast1705 = bitcast {}* %"closure->LAMBDA2195" to i8*
  %gep1706 = getelementptr inbounds i8, i8* %irc-bit-cast1705, i64 -9
  %irc-bit-cast1707 = bitcast i8* %gep1706 to i64*
  %604 = load i64, i64* %irc-bit-cast1707, align 8
  %.off = add i64 %604, -913
  %605 = icmp ult i64 %.off, 85
  br i1 %605, label %tag95, label %header-check-br890

normal-dest1711:                                  ; preds = %tag151
  %606 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 37), align 8
  %ptrtoint1712 = ptrtoint {}* %114 to i64
  %entry-point-addr-uint1713 = add i64 %ptrtoint1712, 7
  %entry-point-addr1714 = inttoptr i64 %entry-point-addr-uint1713 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1715 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1714, align 8
  %607 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1715({}* %114, i64 2, {}* %vaarg, {}* %606, {}* null, {}* null)
          to label %normal-dest1718 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1718:                                  ; preds = %normal-dest1711
  %.elt3704 = extractvalue { {}*, i64 } %607, 0
  %.elt3706 = extractvalue { {}*, i64 } %607, 1
  %cond3225 = icmp eq i64 %.elt3706, 0
  %608 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149626.0 = select i1 %cond3225, {}* %608, {}* %.elt3704
  %ptrtoint1724 = ptrtoint {}* %G149623.0 to i64
  %entry-point-addr-uint1725 = add i64 %ptrtoint1724, 7
  %entry-point-addr1726 = inttoptr i64 %entry-point-addr-uint1725 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1727 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1726, align 8
  %609 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1727({}* %G149623.0, i64 3, {}* %G148530.0, {}* %112, {}* %G149626.0, {}* null)
          to label %normal-dest1730 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1730:                                  ; preds = %normal-dest1718
  %610 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 149), align 8
  %611 = invoke {}* @cc_safe_fdefinition({}* %610)
          to label %normal-dest1736 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1736:                                  ; preds = %normal-dest1730
  %ptrtoint1737 = ptrtoint {}* %611 to i64
  %entry-point-addr-uint1738 = add i64 %ptrtoint1737, 7
  %entry-point-addr1739 = inttoptr i64 %entry-point-addr-uint1738 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1740 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1739, align 8
  %612 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1740({}* %611, i64 1, {}* %G148530.0, {}* null, {}* null, {}* null)
          to label %tag58 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

header-check-br1759:                              ; preds = %header-check-br2645
  %.off4174 = add i64 %807, -1001
  %613 = icmp ult i64 %.off4174, 5
  br i1 %613, label %maybe-more-tests1767, label %tag130

maybe-more-tests1767:                             ; preds = %header-check-br1759
  %614 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %615 = invoke {}* @cc_safe_fdefinition({}* %614)
          to label %normal-dest956 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1769:                                  ; preds = %tag154
  %616 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %617 = invoke {}* @cc_safe_fdefinition({}* %616)
          to label %normal-dest1771 unwind label %cleanup-lpad.loopexit

normal-dest1771:                                  ; preds = %normal-dest1769
  %ptrtoint1772 = ptrtoint {}* %617 to i64
  %entry-point-addr-uint1773 = add i64 %ptrtoint1772, 7
  %entry-point-addr1774 = inttoptr i64 %entry-point-addr-uint1773 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1775 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1774, align 8
  %618 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1775({}* %617, i64 2, {}* %vaarg, {}* %A.0, {}* null, {}* null)
          to label %normal-dest1778 unwind label %cleanup-lpad.loopexit

normal-dest1778:                                  ; preds = %normal-dest1771
  %.elt3545 = extractvalue { {}*, i64 } %618, 0
  %.elt3547 = extractvalue { {}*, i64 } %618, 1
  %cond3195 = icmp eq i64 %.elt3547, 0
  %619 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148905.0 = select i1 %cond3195, {}* %619, {}* %.elt3545
  %ptrtoint1784 = ptrtoint {}* %G148902.0 to i64
  %entry-point-addr-uint1785 = add i64 %ptrtoint1784, 7
  %entry-point-addr1786 = inttoptr i64 %entry-point-addr-uint1785 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1787 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1786, align 8
  %620 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1787({}* %G148902.0, i64 3, {}* %117, {}* %A.0, {}* %G148905.0, {}* null)
          to label %tag161 unwind label %cleanup-lpad.loopexit

normal-dest1796:                                  ; preds = %tag155
  %621 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %622 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %623 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %624 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 309), align 8
  %ptrtoint1797 = ptrtoint {}* %119 to i64
  %entry-point-addr-uint1798 = add i64 %ptrtoint1797, 7
  %entry-point-addr1799 = inttoptr i64 %entry-point-addr-uint1798 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1800 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1799, align 8
  %625 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1800({}* %119, i64 5, {}* %621, {}* %622, {}* %"closure->LAMBDA1305", {}* %623, {}* %624)
          to label %normal-dest1803 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1803:                                  ; preds = %normal-dest1796
  %.elt3872 = extractvalue { {}*, i64 } %625, 0
  %.elt3874 = extractvalue { {}*, i64 } %625, 1
  %cond3256 = icmp eq i64 %.elt3874, 0
  %626 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149741.1 = select i1 %cond3256, {}* %626, {}* %.elt3872
  br label %tag121

header-check-br1809:                              ; preds = %header-check-br726
  %.off4100 = add i64 %355, -1001
  %627 = icmp ult i64 %.off4100, 5
  br i1 %627, label %maybe-more-tests1817, label %tag56

maybe-more-tests1817:                             ; preds = %header-check-br1809
  %628 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %629 = invoke {}* @cc_safe_fdefinition({}* %628)
          to label %normal-dest2265 unwind label %cleanup-lpad.loopexit

header-check-br1818:                              ; preds = %header-check-br377
  %.off4160 = add i64 %273, -1001
  %630 = icmp ult i64 %.off4160, 5
  br i1 %630, label %maybe-more-tests1826, label %tag80

maybe-more-tests1826:                             ; preds = %header-check-br1818
  %631 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %632 = invoke {}* @cc_safe_fdefinition({}* %631)
          to label %normal-dest1844 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1828:                                  ; preds = %tag159
  %633 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %634 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %635 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %636 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 325), align 8
  %ptrtoint1829 = ptrtoint {}* %125 to i64
  %entry-point-addr-uint1830 = add i64 %ptrtoint1829, 7
  %entry-point-addr1831 = inttoptr i64 %entry-point-addr-uint1830 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1832 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1831, align 8
  %637 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1832({}* %125, i64 5, {}* %633, {}* %634, {}* %"closure->LAMBDA2909", {}* %635, {}* %636)
          to label %normal-dest1835 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1835:                                  ; preds = %normal-dest1828
  %.elt3728 = extractvalue { {}*, i64 } %637, 0
  %.elt3730 = extractvalue { {}*, i64 } %637, 1
  %cond3229 = icmp eq i64 %.elt3730, 0
  %638 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149592.1 = select i1 %cond3229, {}* %638, {}* %.elt3728
  br label %tag171

normal-dest1844:                                  ; preds = %maybe-more-tests1826
  %ptrtoint1845 = ptrtoint {}* %632 to i64
  %entry-point-addr-uint1846 = add i64 %ptrtoint1845, 7
  %entry-point-addr1847 = inttoptr i64 %entry-point-addr-uint1846 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1848 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1847, align 8
  %639 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1848({}* %632, i64 1, {}* nonnull %"closure->LAMBDA2909", {}* null, {}* null, {}* null)
          to label %normal-dest1851 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1851:                                  ; preds = %normal-dest1844
  %.elt3716 = extractvalue { {}*, i64 } %639, 0
  %.elt3718 = extractvalue { {}*, i64 } %639, 1
  %cond3226 = icmp eq i64 %.elt3718, 0
  %640 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149623.2 = select i1 %cond3226, {}* %640, {}* %.elt3716
  br label %tag151

normal-dest1858:                                  ; preds = %maybe-more-tests473
  %ptrtoint1859 = ptrtoint {}* %297 to i64
  %entry-point-addr-uint1860 = add i64 %ptrtoint1859, 7
  %entry-point-addr1861 = inttoptr i64 %entry-point-addr-uint1860 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1862 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1861, align 8
  %641 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1862({}* %297, i64 1, {}* nonnull %"closure->LAMBDA1471", {}* null, {}* null, {}* null)
          to label %normal-dest1865 unwind label %cleanup-lpad.loopexit

normal-dest1865:                                  ; preds = %normal-dest1858
  %.elt3601 = extractvalue { {}*, i64 } %641, 0
  %.elt3603 = extractvalue { {}*, i64 } %641, 1
  %cond3205 = icmp eq i64 %.elt3603, 0
  %642 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148843.1 = select i1 %cond3205, {}* %642, {}* %.elt3601
  br label %tag242

normal-dest1872:                                  ; preds = %tag165
  %ptrtoint1873 = ptrtoint {}* %127 to i64
  %entry-point-addr-uint1874 = add i64 %ptrtoint1873, 7
  %entry-point-addr1875 = inttoptr i64 %entry-point-addr-uint1874 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1876 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1875, align 8
  %643 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1876({}* %127, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest1879 unwind label %cleanup-lpad.loopexit

normal-dest1879:                                  ; preds = %normal-dest1872
  %.elt3409 = extractvalue { {}*, i64 } %643, 0
  %.elt3411 = extractvalue { {}*, i64 } %643, 1
  %cond3170 = icmp eq i64 %.elt3411, 0
  %644 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148587.0 = select i1 %cond3170, {}* %644, {}* %.elt3409
  %ptrtoint1886 = ptrtoint {}* %"closure->LAMBDA3106" to i64
  %tag-only1887 = and i64 %ptrtoint1886, 7
  %test1888 = icmp eq i64 %tag-only1887, 1
  br i1 %test1888, label %header-check-br1885, label %tag115

header-check-br1885:                              ; preds = %normal-dest1879
  %irc-bit-cast1889 = bitcast {}* %"closure->LAMBDA3106" to i8*
  %gep1890 = getelementptr inbounds i8, i8* %irc-bit-cast1889, i64 -9
  %irc-bit-cast1891 = bitcast i8* %gep1890 to i64*
  %645 = load i64, i64* %irc-bit-cast1891, align 8
  %.off4111 = add i64 %645, -913
  %646 = icmp ult i64 %.off4111, 85
  br i1 %646, label %tag232, label %header-check-br2899

normal-dest1895:                                  ; preds = %tag167
  %647 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %648 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %649 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %650 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 317), align 8
  %ptrtoint1896 = ptrtoint {}* %129 to i64
  %entry-point-addr-uint1897 = add i64 %ptrtoint1896, 7
  %entry-point-addr1898 = inttoptr i64 %entry-point-addr-uint1897 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1899 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1898, align 8
  %651 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1899({}* %129, i64 5, {}* %647, {}* %648, {}* %"closure->LAMBDA", {}* %649, {}* %650)
          to label %normal-dest1902 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1902:                                  ; preds = %normal-dest1895
  %.elt3824 = extractvalue { {}*, i64 } %651, 0
  %.elt3826 = extractvalue { {}*, i64 } %651, 1
  %cond3247 = icmp eq i64 %.elt3826, 0
  %652 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149423.2 = select i1 %cond3247, {}* %652, {}* %.elt3824
  br label %tag225

normal-dest1909:                                  ; preds = %tag169
  %653 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %654 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %655 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %656 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 327), align 8
  %ptrtoint1910 = ptrtoint {}* %131 to i64
  %entry-point-addr-uint1911 = add i64 %ptrtoint1910, 7
  %entry-point-addr1912 = inttoptr i64 %entry-point-addr-uint1911 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1913 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1912, align 8
  %657 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1913({}* %131, i64 5, {}* %653, {}* %654, {}* %"closure->LAMBDA2909", {}* %655, {}* %656)
          to label %normal-dest1916 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1916:                                  ; preds = %normal-dest1909
  %.elt3271 = extractvalue { {}*, i64 } %657, 0
  %.elt3273 = extractvalue { {}*, i64 } %657, 1
  %cond3146 = icmp eq i64 %.elt3273, 0
  %658 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149651.1 = select i1 %cond3146, {}* %658, {}* %.elt3271
  br label %tag303

normal-dest1924:                                  ; preds = %tag171
  %659 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 37), align 8
  %ptrtoint1925 = ptrtoint {}* %134 to i64
  %entry-point-addr-uint1926 = add i64 %ptrtoint1925, 7
  %entry-point-addr1927 = inttoptr i64 %entry-point-addr-uint1926 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1928 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1927, align 8
  %660 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1928({}* %134, i64 2, {}* %vaarg, {}* %659, {}* null, {}* null)
          to label %normal-dest1931 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1931:                                  ; preds = %normal-dest1924
  %.elt3732 = extractvalue { {}*, i64 } %660, 0
  %.elt3734 = extractvalue { {}*, i64 } %660, 1
  %cond3230 = icmp eq i64 %.elt3734, 0
  %661 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149595.0 = select i1 %cond3230, {}* %661, {}* %.elt3732
  %ptrtoint1937 = ptrtoint {}* %G149592.0 to i64
  %entry-point-addr-uint1938 = add i64 %ptrtoint1937, 7
  %entry-point-addr1939 = inttoptr i64 %entry-point-addr-uint1938 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1940 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1939, align 8
  %662 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1940({}* %G149592.0, i64 3, {}* %OUT1485201922.0, {}* %132, {}* %G149595.0, {}* null)
          to label %tag58 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1949:                                  ; preds = %tag174
  %ptrtoint1950 = ptrtoint {}* %136 to i64
  %entry-point-addr-uint1951 = add i64 %ptrtoint1950, 7
  %entry-point-addr1952 = inttoptr i64 %entry-point-addr-uint1951 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1953 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1952, align 8
  %663 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1953({}* %136, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest1956 unwind label %cleanup-lpad.loopexit

normal-dest1956:                                  ; preds = %normal-dest1949
  %.elt3513 = extractvalue { {}*, i64 } %663, 0
  %.elt3515 = extractvalue { {}*, i64 } %663, 1
  %cond3189 = icmp eq i64 %.elt3515, 0
  %664 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %OUT1485961444.0 = select i1 %cond3189, {}* %664, {}* %.elt3513
  %ptrtoint1963 = ptrtoint {}* %"closure->LAMBDA1613" to i64
  %tag-only1964 = and i64 %ptrtoint1963, 7
  %test1965 = icmp eq i64 %tag-only1964, 1
  br i1 %test1965, label %header-check-br1962, label %tag66

header-check-br1962:                              ; preds = %normal-dest1956
  %irc-bit-cast1966 = bitcast {}* %"closure->LAMBDA1613" to i8*
  %gep1967 = getelementptr inbounds i8, i8* %irc-bit-cast1966, i64 -9
  %irc-bit-cast1968 = bitcast i8* %gep1967 to i64*
  %665 = load i64, i64* %irc-bit-cast1968, align 8
  %.off4127 = add i64 %665, -913
  %666 = icmp ult i64 %.off4127, 85
  br i1 %666, label %tag125, label %header-check-br2929

normal-dest1972:                                  ; preds = %maybe-more-tests1126
  %ptrtoint1973 = ptrtoint {}* %453 to i64
  %entry-point-addr-uint1974 = add i64 %ptrtoint1973, 7
  %entry-point-addr1975 = inttoptr i64 %entry-point-addr-uint1974 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1976 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1975, align 8
  %667 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1976({}* %453, i64 1, {}* nonnull %"closure->LAMBDA1305", {}* null, {}* null, {}* null)
          to label %normal-dest1979 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1979:                                  ; preds = %normal-dest1972
  %.elt3860 = extractvalue { {}*, i64 } %667, 0
  %.elt3862 = extractvalue { {}*, i64 } %667, 1
  %cond3253 = icmp eq i64 %.elt3862, 0
  %668 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149767.1 = select i1 %cond3253, {}* %668, {}* %.elt3860
  br label %tag14

normal-dest1986:                                  ; preds = %maybe-more-tests2697
  %ptrtoint1987 = ptrtoint {}* %819 to i64
  %entry-point-addr-uint1988 = add i64 %ptrtoint1987, 7
  %entry-point-addr1989 = inttoptr i64 %entry-point-addr-uint1988 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1990 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1989, align 8
  %669 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1990({}* %819, i64 1, {}* nonnull %"closure->LAMBDA3106", {}* null, {}* null, {}* null)
          to label %normal-dest1993 unwind label %cleanup-lpad.loopexit

normal-dest1993:                                  ; preds = %normal-dest1986
  %.elt3445 = extractvalue { {}*, i64 } %669, 0
  %.elt3447 = extractvalue { {}*, i64 } %669, 1
  %cond3176 = icmp eq i64 %.elt3447, 0
  %670 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149124.2 = select i1 %cond3176, {}* %670, {}* %.elt3445
  br label %tag180

normal-dest2012:                                  ; preds = %tag182
  %ptrtoint2013 = ptrtoint {}* %140 to i64
  %entry-point-addr-uint2014 = add i64 %ptrtoint2013, 7
  %entry-point-addr2015 = inttoptr i64 %entry-point-addr-uint2014 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2016 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2015, align 8
  %671 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2016({}* %140, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest2019 unwind label %cleanup-lpad.loopexit

normal-dest2019:                                  ; preds = %normal-dest2012
  %.elt3581 = extractvalue { {}*, i64 } %671, 0
  %.elt3583 = extractvalue { {}*, i64 } %671, 1
  %cond3201 = icmp eq i64 %.elt3583, 0
  %672 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148866.0 = select i1 %cond3201, {}* %672, {}* %.elt3581
  %673 = icmp eq {}* %G148866.0, %672
  br i1 %673, label %tag296, label %tag226

normal-dest2026:                                  ; preds = %tag183
  %ptrtoint2027 = ptrtoint {}* %142 to i64
  %entry-point-addr-uint2028 = add i64 %ptrtoint2027, 7
  %entry-point-addr2029 = inttoptr i64 %entry-point-addr-uint2028 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2030 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2029, align 8
  %674 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2030({}* %142, i64 2, {}* %vaarg, {}* %A.0, {}* null, {}* null)
          to label %tag156 unwind label %cleanup-lpad.loopexit

normal-dest2046:                                  ; preds = %maybe-more-tests2286
  %ptrtoint2047 = ptrtoint {}* %734 to i64
  %entry-point-addr-uint2048 = add i64 %ptrtoint2047, 7
  %entry-point-addr2049 = inttoptr i64 %entry-point-addr-uint2048 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2050 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2049, align 8
  %675 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2050({}* %734, i64 1, {}* nonnull %"closure->LAMBDA1305", {}* null, {}* null, {}* null)
          to label %normal-dest2053 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2053:                                  ; preds = %normal-dest2046
  %.elt3880 = extractvalue { {}*, i64 } %675, 0
  %.elt3882 = extractvalue { {}*, i64 } %675, 1
  %cond3257 = icmp eq i64 %.elt3882, 0
  %676 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149741.2 = select i1 %cond3257, {}* %676, {}* %.elt3880
  br label %tag121

normal-dest2060:                                  ; preds = %tag187
  %677 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %678 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %679 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %680 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 345), align 8
  %ptrtoint2061 = ptrtoint {}* %144 to i64
  %entry-point-addr-uint2062 = add i64 %ptrtoint2061, 7
  %entry-point-addr2063 = inttoptr i64 %entry-point-addr-uint2062 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2064 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2063, align 8
  %681 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2064({}* %144, i64 5, {}* %677, {}* %678, {}* %"closure->LAMBDA1471", {}* %679, {}* %680)
          to label %normal-dest2067 unwind label %cleanup-lpad.loopexit

normal-dest2067:                                  ; preds = %normal-dest2060
  %.elt3561 = extractvalue { {}*, i64 } %681, 0
  %.elt3563 = extractvalue { {}*, i64 } %681, 1
  %cond3198 = icmp eq i64 %.elt3563, 0
  %682 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148874.2 = select i1 %cond3198, {}* %682, {}* %.elt3561
  br label %tag299

header-check-br2084:                              ; preds = %header-check-br1655
  %.off4172 = add i64 %592, -1001
  %683 = icmp ult i64 %.off4172, 5
  br i1 %683, label %maybe-more-tests2092, label %tag10

maybe-more-tests2092:                             ; preds = %header-check-br2084
  %684 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %685 = invoke {}* @cc_safe_fdefinition({}* %684)
          to label %normal-dest914 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2094:                                  ; preds = %tag192
  %686 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 350), align 16
  %ptrtoint2095 = ptrtoint {}* %G149039.0 to i64
  %entry-point-addr-uint2096 = add i64 %ptrtoint2095, 7
  %entry-point-addr2097 = inttoptr i64 %entry-point-addr-uint2096 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2098 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2097, align 8
  %687 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2098({}* %G149039.0, i64 3, {}* %147, {}* %A.0, {}* %686, {}* null)
          to label %tag161 unwind label %cleanup-lpad.loopexit

normal-dest2107:                                  ; preds = %tag194
  %688 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %689 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %690 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %691 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 365), align 8
  %ptrtoint2108 = ptrtoint {}* %149 to i64
  %entry-point-addr-uint2109 = add i64 %ptrtoint2108, 7
  %entry-point-addr2110 = inttoptr i64 %entry-point-addr-uint2109 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2111 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2110, align 8
  %692 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2111({}* %149, i64 5, {}* %688, {}* %689, {}* %"closure->LAMBDA2195", {}* %690, {}* %691)
          to label %normal-dest2114 unwind label %cleanup-lpad.loopexit

normal-dest2114:                                  ; preds = %normal-dest2107
  %.elt3308 = extractvalue { {}*, i64 } %692, 0
  %.elt3310 = extractvalue { {}*, i64 } %692, 1
  %cond3154 = icmp eq i64 %.elt3310, 0
  %693 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149325.2 = select i1 %cond3154, {}* %693, {}* %.elt3308
  br label %tag95

normal-dest2121:                                  ; preds = %maybe-more-tests1332
  %ptrtoint2122 = ptrtoint {}* %504 to i64
  %entry-point-addr-uint2123 = add i64 %ptrtoint2122, 7
  %entry-point-addr2124 = inttoptr i64 %entry-point-addr-uint2123 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2125 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2124, align 8
  %694 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2125({}* %504, i64 1, {}* nonnull %"closure->LAMBDA648", {}* null, {}* null, {}* null)
          to label %normal-dest2128 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2128:                                  ; preds = %normal-dest2121
  %.elt3688 = extractvalue { {}*, i64 } %694, 0
  %.elt3690 = extractvalue { {}*, i64 } %694, 1
  %cond3221 = icmp eq i64 %.elt3690, 0
  %695 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148685.2 = select i1 %cond3221, {}* %695, {}* %.elt3688
  br label %tag108

header-check-br2134:                              ; preds = %tag196
  %irc-bit-cast2138 = bitcast {}* %"closure->LAMBDA1305" to i8*
  %gep2139 = getelementptr inbounds i8, i8* %irc-bit-cast2138, i64 -9
  %irc-bit-cast2140 = bitcast i8* %gep2139 to i64*
  %696 = load i64, i64* %irc-bit-cast2140, align 8
  %.off4185 = add i64 %696, -913
  %697 = icmp ult i64 %.off4185, 85
  br i1 %697, label %tag76, label %header-check-br758

normal-dest2144:                                  ; preds = %tag197
  %698 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 195), align 8
  %ptrtoint2145 = ptrtoint {}* %G149175.0 to i64
  %entry-point-addr-uint2146 = add i64 %ptrtoint2145, 7
  %entry-point-addr2147 = inttoptr i64 %entry-point-addr-uint2146 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2148 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2147, align 8
  %699 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2148({}* %G149175.0, i64 3, {}* %151, {}* %A.0, {}* %698, {}* null)
          to label %tag161 unwind label %cleanup-lpad.loopexit

header-check-br2156:                              ; preds = %header-check-br767
  %.off4164 = add i64 %364, -1001
  %700 = icmp ult i64 %.off4164, 5
  br i1 %700, label %maybe-more-tests2164, label %tag135

maybe-more-tests2164:                             ; preds = %header-check-br2156
  %701 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %702 = invoke {}* @cc_safe_fdefinition({}* %701)
          to label %normal-dest1128 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2172:                                  ; preds = %tag201
  %703 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %704 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %705 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %706 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 344), align 16
  %ptrtoint2173 = ptrtoint {}* %155 to i64
  %entry-point-addr-uint2174 = add i64 %ptrtoint2173, 7
  %entry-point-addr2175 = inttoptr i64 %entry-point-addr-uint2174 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2176 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2175, align 8
  %707 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2176({}* %155, i64 5, {}* %703, {}* %704, {}* %"closure->LAMBDA1471", {}* %705, {}* %706)
          to label %normal-dest2179 unwind label %cleanup-lpad.loopexit

normal-dest2179:                                  ; preds = %normal-dest2172
  %.elt3589 = extractvalue { {}*, i64 } %707, 0
  %.elt3591 = extractvalue { {}*, i64 } %707, 1
  %cond3203 = icmp eq i64 %.elt3591, 0
  %708 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148843.2 = select i1 %cond3203, {}* %708, {}* %.elt3589
  br label %tag242

header-check-br2185:                              ; preds = %header-check-br872
  %.off4122 = add i64 %388, -1001
  %709 = icmp ult i64 %.off4122, 5
  br i1 %709, label %maybe-more-tests2193, label %tag27

maybe-more-tests2193:                             ; preds = %header-check-br2185
  %710 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %711 = invoke {}* @cc_safe_fdefinition({}* %710)
          to label %normal-dest350 unwind label %cleanup-lpad.loopexit

normal-dest2194:                                  ; preds = %tag204
  %712 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %713 = icmp eq {}* %stream.0, %712
  %.val4089 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149341.0 = select i1 %713, {}* %712, {}* %.val4089
  %714 = icmp eq {}* %G149341.0, %.val4089
  br i1 %714, label %tag114, label %tag150

normal-dest2201:                                  ; preds = %tag206
  %715 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %716 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %717 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %718 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 310), align 16
  %ptrtoint2202 = ptrtoint {}* %158 to i64
  %entry-point-addr-uint2203 = add i64 %ptrtoint2202, 7
  %entry-point-addr2204 = inttoptr i64 %entry-point-addr-uint2203 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2205 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2204, align 8
  %719 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2205({}* %158, i64 5, {}* %715, {}* %716, {}* %"closure->LAMBDA1305", {}* %717, {}* %718)
          to label %normal-dest2208 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2208:                                  ; preds = %normal-dest2201
  %.elt3848 = extractvalue { {}*, i64 } %719, 0
  %.elt3850 = extractvalue { {}*, i64 } %719, 1
  %cond3252 = icmp eq i64 %.elt3850, 0
  %720 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149767.2 = select i1 %cond3252, {}* %720, {}* %.elt3848
  br label %tag14

header-check-br2214:                              ; preds = %tag208
  %irc-bit-cast2218 = bitcast {}* %"closure->LAMBDA2909" to i8*
  %gep2219 = getelementptr inbounds i8, i8* %irc-bit-cast2218, i64 -9
  %irc-bit-cast2220 = bitcast i8* %gep2219 to i64*
  %721 = load i64, i64* %irc-bit-cast2220, align 8
  %.off4155 = add i64 %721, -913
  %722 = icmp ult i64 %.off4155, 85
  br i1 %722, label %tag303, label %header-check-br2920

header-check-br2223:                              ; preds = %header-check-br749
  %.off4152 = add i64 %359, -1001
  %723 = icmp ult i64 %.off4152, 5
  br i1 %723, label %maybe-more-tests2231, label %tag256

maybe-more-tests2231:                             ; preds = %header-check-br2223
  %724 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %725 = invoke {}* @cc_safe_fdefinition({}* %724)
          to label %normal-dest1156 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2240:                                  ; preds = %tag215
  %726 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 35), align 8
  %ptrtoint2241 = ptrtoint {}* %166 to i64
  %entry-point-addr-uint2242 = add i64 %ptrtoint2241, 7
  %entry-point-addr2243 = inttoptr i64 %entry-point-addr-uint2242 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2244 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2243, align 8
  %727 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2244({}* %166, i64 2, {}* %vaarg, {}* %726, {}* null, {}* null)
          to label %normal-dest2247 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2247:                                  ; preds = %normal-dest2240
  %.elt3812 = extractvalue { {}*, i64 } %727, 0
  %.elt3814 = extractvalue { {}*, i64 } %727, 1
  %cond3245 = icmp eq i64 %.elt3814, 0
  %728 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149446.0 = select i1 %cond3245, {}* %728, {}* %.elt3812
  %ptrtoint2253 = ptrtoint {}* %G149443.0 to i64
  %entry-point-addr-uint2254 = add i64 %ptrtoint2253, 7
  %entry-point-addr2255 = inttoptr i64 %entry-point-addr-uint2254 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2256 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2255, align 8
  %729 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2256({}* %G149443.0, i64 3, {}* %OUT1485392238.0, {}* %164, {}* %G149446.0, {}* null)
          to label %tag58 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2265:                                  ; preds = %maybe-more-tests1817
  %ptrtoint2266 = ptrtoint {}* %629 to i64
  %entry-point-addr-uint2267 = add i64 %ptrtoint2266, 7
  %entry-point-addr2268 = inttoptr i64 %entry-point-addr-uint2267 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2269 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2268, align 8
  %730 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2269({}* %629, i64 1, {}* nonnull %"closure->LAMBDA2195", {}* null, {}* null, {}* null)
          to label %normal-dest2272 unwind label %cleanup-lpad.loopexit

normal-dest2272:                                  ; preds = %normal-dest2265
  %.elt3373 = extractvalue { {}*, i64 } %730, 0
  %.elt3375 = extractvalue { {}*, i64 } %730, 1
  %cond3163 = icmp eq i64 %.elt3375, 0
  %731 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149276.2 = select i1 %cond3163, {}* %731, {}* %.elt3373
  br label %tag152

header-check-br2278:                              ; preds = %header-check-br791
  %.off4184 = add i64 %368, -1001
  %732 = icmp ult i64 %.off4184, 5
  br i1 %732, label %maybe-more-tests2286, label %tag155

maybe-more-tests2286:                             ; preds = %header-check-br2278
  %733 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %734 = invoke {}* @cc_safe_fdefinition({}* %733)
          to label %normal-dest2046 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

header-check-br2287:                              ; preds = %header-check-br969
  %.off4102 = add i64 %410, -1001
  %735 = icmp ult i64 %.off4102, 5
  br i1 %735, label %maybe-more-tests2295, label %tag295

maybe-more-tests2295:                             ; preds = %header-check-br2287
  %736 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %737 = invoke {}* @cc_safe_fdefinition({}* %736)
          to label %normal-dest3092 unwind label %cleanup-lpad.loopexit

normal-dest2308:                                  ; preds = %tag221
  %738 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %739 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %740 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %741 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 374), align 16
  %ptrtoint2309 = ptrtoint {}* %173 to i64
  %entry-point-addr-uint2310 = add i64 %ptrtoint2309, 7
  %entry-point-addr2311 = inttoptr i64 %entry-point-addr-uint2310 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2312 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2311, align 8
  %742 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2312({}* %173, i64 5, {}* %738, {}* %739, {}* %"closure->LAMBDA648", {}* %740, {}* %741)
          to label %normal-dest2315 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2315:                                  ; preds = %normal-dest2308
  %.elt3625 = extractvalue { {}*, i64 } %742, 0
  %.elt3627 = extractvalue { {}*, i64 } %742, 1
  %cond3211 = icmp eq i64 %.elt3627, 0
  %743 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148751.1 = select i1 %cond3211, {}* %743, {}* %.elt3625
  br label %tag106

normal-dest2322:                                  ; preds = %tag223
  %ptrtoint2323 = ptrtoint {}* %175 to i64
  %entry-point-addr-uint2324 = add i64 %ptrtoint2323, 7
  %entry-point-addr2325 = inttoptr i64 %entry-point-addr-uint2324 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2326 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2325, align 8
  %744 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2326({}* %175, i64 2, {}* %vaarg, {}* %A.0, {}* null, {}* null)
          to label %normal-dest2329 unwind label %cleanup-lpad.loopexit

normal-dest2329:                                  ; preds = %normal-dest2322
  %.elt3609 = extractvalue { {}*, i64 } %744, 0
  %.elt3611 = extractvalue { {}*, i64 } %744, 1
  %cond3207 = icmp eq i64 %.elt3611, 0
  %745 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148826.0 = select i1 %cond3207, {}* %745, {}* %.elt3609
  %ptrtoint2335 = ptrtoint {}* %G148823.0 to i64
  %entry-point-addr-uint2336 = add i64 %ptrtoint2335, 7
  %entry-point-addr2337 = inttoptr i64 %entry-point-addr-uint2336 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2338 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2337, align 8
  %746 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2338({}* %G148823.0, i64 3, {}* %stream.0, {}* %A.0, {}* %G148826.0, {}* null)
          to label %tag161 unwind label %cleanup-lpad.loopexit

normal-dest2347:                                  ; preds = %tag224
  %747 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 35), align 8
  %748 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %749 = invoke {}* @cc_safe_fdefinition({}* %748)
          to label %normal-dest2349 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2349:                                  ; preds = %normal-dest2347
  %750 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 35), align 8
  %ptrtoint2350 = ptrtoint {}* %749 to i64
  %entry-point-addr-uint2351 = add i64 %ptrtoint2350, 7
  %entry-point-addr2352 = inttoptr i64 %entry-point-addr-uint2351 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2353 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2352, align 8
  %751 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2353({}* %749, i64 2, {}* %vaarg, {}* %750, {}* null, {}* null)
          to label %normal-dest2356 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2356:                                  ; preds = %normal-dest2349
  %.elt3764 = extractvalue { {}*, i64 } %751, 0
  %.elt3766 = extractvalue { {}*, i64 } %751, 1
  %cond3236 = icmp eq i64 %.elt3766, 0
  %752 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149505.0 = select i1 %cond3236, {}* %752, {}* %.elt3764
  %ptrtoint2362 = ptrtoint {}* %G149502.0 to i64
  %entry-point-addr-uint2363 = add i64 %ptrtoint2362, 7
  %entry-point-addr2364 = inttoptr i64 %entry-point-addr-uint2363 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2365 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2364, align 8
  %753 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2365({}* %G149502.0, i64 3, {}* %177, {}* %747, {}* %G149505.0, {}* null)
          to label %tag58 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2374:                                  ; preds = %tag225
  %754 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 35), align 8
  %ptrtoint2375 = ptrtoint {}* %180 to i64
  %entry-point-addr-uint2376 = add i64 %ptrtoint2375, 7
  %entry-point-addr2377 = inttoptr i64 %entry-point-addr-uint2376 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2378 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2377, align 8
  %755 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2378({}* %180, i64 2, {}* %vaarg, {}* %754, {}* null, {}* null)
          to label %normal-dest2381 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2381:                                  ; preds = %normal-dest2374
  %.elt3828 = extractvalue { {}*, i64 } %755, 0
  %.elt3830 = extractvalue { {}*, i64 } %755, 1
  %cond3248 = icmp eq i64 %.elt3830, 0
  %756 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149426.0 = select i1 %cond3248, {}* %756, {}* %.elt3828
  %ptrtoint2387 = ptrtoint {}* %G149423.0 to i64
  %entry-point-addr-uint2388 = add i64 %ptrtoint2387, 7
  %entry-point-addr2389 = inttoptr i64 %entry-point-addr-uint2388 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2390 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2389, align 8
  %757 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2390({}* %G149423.0, i64 3, {}* %stream.0, {}* %178, {}* %G149426.0, {}* null)
          to label %tag58 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2399:                                  ; preds = %tag226
  %ptrtoint2400 = ptrtoint {}* %182 to i64
  %entry-point-addr-uint2401 = add i64 %ptrtoint2400, 7
  %entry-point-addr2402 = inttoptr i64 %entry-point-addr-uint2401 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2403 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2402, align 8
  %758 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2403({}* %182, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest2406 unwind label %cleanup-lpad.loopexit

normal-dest2406:                                  ; preds = %normal-dest2399
  %.elt3585 = extractvalue { {}*, i64 } %758, 0
  %.elt3587 = extractvalue { {}*, i64 } %758, 1
  %cond3202 = icmp eq i64 %.elt3587, 0
  %759 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %OUT1486152407.0 = select i1 %cond3202, {}* %759, {}* %.elt3585
  %ptrtoint2414 = ptrtoint {}* %"closure->LAMBDA1471" to i64
  %tag-only2415 = and i64 %ptrtoint2414, 7
  %test2416 = icmp eq i64 %tag-only2415, 1
  br i1 %test2416, label %header-check-br2413, label %tag201

header-check-br2413:                              ; preds = %normal-dest2406
  %irc-bit-cast2417 = bitcast {}* %"closure->LAMBDA1471" to i8*
  %gep2418 = getelementptr inbounds i8, i8* %irc-bit-cast2417, i64 -9
  %irc-bit-cast2419 = bitcast i8* %gep2418 to i64*
  %760 = load i64, i64* %irc-bit-cast2419, align 8
  %.off4139 = add i64 %760, -913
  %761 = icmp ult i64 %.off4139, 85
  br i1 %761, label %tag242, label %header-check-br465

normal-dest2423:                                  ; preds = %tag227
  %762 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %763 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %764 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %765 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 373), align 8
  %ptrtoint2424 = ptrtoint {}* %184 to i64
  %entry-point-addr-uint2425 = add i64 %ptrtoint2424, 7
  %entry-point-addr2426 = inttoptr i64 %entry-point-addr-uint2425 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2427 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2426, align 8
  %766 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2427({}* %184, i64 5, {}* %762, {}* %763, {}* %"closure->LAMBDA648", {}* %764, {}* %765)
          to label %normal-dest2430 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2430:                                  ; preds = %normal-dest2423
  %.elt3644 = extractvalue { {}*, i64 } %766, 0
  %.elt3646 = extractvalue { {}*, i64 } %766, 1
  %cond3214 = icmp eq i64 %.elt3646, 0
  %767 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148727.2 = select i1 %cond3214, {}* %767, {}* %.elt3644
  br label %tag74

header-check-br2436:                              ; preds = %tag231
  %irc-bit-cast2440 = bitcast {}* %"closure->LAMBDA" to i8*
  %gep2441 = getelementptr inbounds i8, i8* %irc-bit-cast2440, i64 -9
  %irc-bit-cast2442 = bitcast i8* %gep2441 to i64*
  %768 = load i64, i64* %irc-bit-cast2442, align 8
  %.off4167 = add i64 %768, -913
  %769 = icmp ult i64 %.off4167, 85
  br i1 %769, label %tag224, label %header-check-br414

normal-dest2451:                                  ; preds = %tag232
  %770 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 149), align 8
  %771 = invoke {}* @cc_safe_fdefinition({}* %770)
          to label %normal-dest2457 unwind label %cleanup-lpad.loopexit

normal-dest2457:                                  ; preds = %normal-dest2451
  %ptrtoint2458 = ptrtoint {}* %771 to i64
  %entry-point-addr-uint2459 = add i64 %ptrtoint2458, 7
  %entry-point-addr2460 = inttoptr i64 %entry-point-addr-uint2459 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2461 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2460, align 8
  %772 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2461({}* %771, i64 1, {}* %G148587.0, {}* null, {}* null, {}* null)
          to label %tag161 unwind label %cleanup-lpad.loopexit

header-check-br2469:                              ; preds = %header-check-br1267
  %.off4146 = add i64 %490, -1001
  %773 = icmp ult i64 %.off4146, 5
  br i1 %773, label %maybe-more-tests2477, label %tag221

maybe-more-tests2477:                             ; preds = %header-check-br2469
  %774 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %775 = invoke {}* @cc_safe_fdefinition({}* %774)
          to label %normal-dest2763 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2479:                                  ; preds = %tag234
  %ptrtoint2480 = ptrtoint {}* %188 to i64
  %entry-point-addr-uint2481 = add i64 %ptrtoint2480, 7
  %entry-point-addr2482 = inttoptr i64 %entry-point-addr-uint2481 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2483 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2482, align 8
  %776 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2483({}* %188, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest2486 unwind label %cleanup-lpad.loopexit

normal-dest2486:                                  ; preds = %normal-dest2479
  %.elt3433 = extractvalue { {}*, i64 } %776, 0
  %.elt3435 = extractvalue { {}*, i64 } %776, 1
  %cond3174 = icmp eq i64 %.elt3435, 0
  %777 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %OUT1485771999.0 = select i1 %cond3174, {}* %777, {}* %.elt3433
  %ptrtoint2493 = ptrtoint {}* %"closure->LAMBDA3106" to i64
  %tag-only2494 = and i64 %ptrtoint2493, 7
  %test2495 = icmp eq i64 %tag-only2494, 1
  br i1 %test2495, label %header-check-br2492, label %tag81

header-check-br2492:                              ; preds = %normal-dest2486
  %irc-bit-cast2496 = bitcast {}* %"closure->LAMBDA3106" to i8*
  %gep2497 = getelementptr inbounds i8, i8* %irc-bit-cast2496, i64 -9
  %irc-bit-cast2498 = bitcast i8* %gep2497 to i64*
  %778 = load i64, i64* %irc-bit-cast2498, align 8
  %.off4113 = add i64 %778, -913
  %779 = icmp ult i64 %.off4113, 85
  br i1 %779, label %tag180, label %header-check-br2689

normal-dest2507:                                  ; preds = %tag236
  %780 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 149), align 8
  %781 = invoke {}* @cc_safe_fdefinition({}* %780)
          to label %normal-dest2513 unwind label %cleanup-lpad.loopexit

normal-dest2513:                                  ; preds = %normal-dest2507
  %ptrtoint2514 = ptrtoint {}* %781 to i64
  %entry-point-addr-uint2515 = add i64 %ptrtoint2514, 7
  %entry-point-addr2516 = inttoptr i64 %entry-point-addr-uint2515 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2517 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2516, align 8
  %782 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2517({}* %781, i64 1, {}* %G148568.0, {}* null, {}* null, {}* null)
          to label %tag237 unwind label %cleanup-lpad.loopexit

normal-dest2526:                                  ; preds = %tag237
  %783 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %784 = invoke {}* @cc_safe_fdefinition({}* %783)
          to label %normal-dest2528 unwind label %cleanup-lpad.loopexit

normal-dest2528:                                  ; preds = %normal-dest2526
  %ptrtoint2529 = ptrtoint {}* %784 to i64
  %entry-point-addr-uint2530 = add i64 %ptrtoint2529, 7
  %entry-point-addr2531 = inttoptr i64 %entry-point-addr-uint2530 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2532 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2531, align 8
  %785 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2532({}* %784, i64 2, {}* %vaarg, {}* %A.0, {}* null, {}* null)
          to label %normal-dest2535 unwind label %cleanup-lpad.loopexit

normal-dest2535:                                  ; preds = %normal-dest2528
  %.elt3316 = extractvalue { {}*, i64 } %785, 0
  %.elt3318 = extractvalue { {}*, i64 } %785, 1
  %cond3155 = icmp eq i64 %.elt3318, 0
  %786 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149248.0 = select i1 %cond3155, {}* %786, {}* %.elt3316
  %787 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %788 = icmp eq {}* %stream.0, %787
  %G149251.0 = select i1 %788, {}* %787, {}* %786
  %789 = icmp eq {}* %G149251.0, %786
  br i1 %789, label %tag254, label %tag274

normal-dest2546:                                  ; preds = %tag239
  %ptrtoint2547 = ptrtoint {}* %193 to i64
  %entry-point-addr-uint2548 = add i64 %ptrtoint2547, 7
  %entry-point-addr2549 = inttoptr i64 %entry-point-addr-uint2548 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2550 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2549, align 8
  %790 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2550({}* %193, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest2553 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2553:                                  ; preds = %normal-dest2546
  %.elt3724 = extractvalue { {}*, i64 } %790, 0
  %.elt3726 = extractvalue { {}*, i64 } %790, 1
  %cond3228 = icmp eq i64 %.elt3726, 0
  %791 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %OUT1485201922.0 = select i1 %cond3228, {}* %791, {}* %.elt3724
  %ptrtoint2560 = ptrtoint {}* %"closure->LAMBDA2909" to i64
  %tag-only2561 = and i64 %ptrtoint2560, 7
  %test2562 = icmp eq i64 %tag-only2561, 1
  br i1 %test2562, label %header-check-br2559, label %tag159

header-check-br2559:                              ; preds = %normal-dest2553
  %irc-bit-cast2563 = bitcast {}* %"closure->LAMBDA2909" to i8*
  %gep2564 = getelementptr inbounds i8, i8* %irc-bit-cast2563, i64 -9
  %irc-bit-cast2565 = bitcast i8* %gep2564 to i64*
  %792 = load i64, i64* %irc-bit-cast2565, align 8
  %.off4161 = add i64 %792, -913
  %793 = icmp ult i64 %.off4161, 85
  br i1 %793, label %tag171, label %header-check-br483

header-check-br2568:                              ; preds = %header-check-br1533
  %.off4098 = add i64 %554, -1001
  %794 = icmp ult i64 %.off4098, 5
  br i1 %794, label %maybe-more-tests2576, label %tag146

maybe-more-tests2576:                             ; preds = %header-check-br2568
  %795 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %796 = invoke {}* @cc_safe_fdefinition({}* %795)
          to label %normal-dest328 unwind label %cleanup-lpad.loopexit

normal-dest2578:                                  ; preds = %tag242
  %ptrtoint2579 = ptrtoint {}* %195 to i64
  %entry-point-addr-uint2580 = add i64 %ptrtoint2579, 7
  %entry-point-addr2581 = inttoptr i64 %entry-point-addr-uint2580 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2582 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2581, align 8
  %797 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2582({}* %195, i64 2, {}* %vaarg, {}* %A.0, {}* null, {}* null)
          to label %normal-dest2585 unwind label %cleanup-lpad.loopexit

normal-dest2585:                                  ; preds = %normal-dest2578
  %.elt3593 = extractvalue { {}*, i64 } %797, 0
  %.elt3595 = extractvalue { {}*, i64 } %797, 1
  %cond3204 = icmp eq i64 %.elt3595, 0
  %798 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148846.0 = select i1 %cond3204, {}* %798, {}* %.elt3593
  %ptrtoint2591 = ptrtoint {}* %G148843.0 to i64
  %entry-point-addr-uint2592 = add i64 %ptrtoint2591, 7
  %entry-point-addr2593 = inttoptr i64 %entry-point-addr-uint2592 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2594 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2593, align 8
  %799 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2594({}* %G148843.0, i64 3, {}* %OUT1486152407.0, {}* %A.0, {}* %G148846.0, {}* null)
          to label %tag161 unwind label %cleanup-lpad.loopexit

header-check-br2602:                              ; preds = %tag244
  %irc-bit-cast2606 = bitcast {}* %"closure->LAMBDA1305" to i8*
  %gep2607 = getelementptr inbounds i8, i8* %irc-bit-cast2606, i64 -9
  %irc-bit-cast2608 = bitcast i8* %gep2607 to i64*
  %800 = load i64, i64* %irc-bit-cast2608, align 8
  %.off4177 = add i64 %800, -913
  %801 = icmp ult i64 %.off4177, 85
  br i1 %801, label %tag52, label %header-check-br2846

header-check-br2622:                              ; preds = %header-check-br1390
  %.off4150 = add i64 %521, -1001
  %802 = icmp ult i64 %.off4150, 5
  br i1 %802, label %maybe-more-tests2630, label %tag227

maybe-more-tests2630:                             ; preds = %header-check-br2622
  %803 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %804 = invoke {}* @cc_safe_fdefinition({}* %803)
          to label %normal-dest387 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2632:                                  ; preds = %tag248
  %ptrtoint2633 = ptrtoint {}* %202 to i64
  %entry-point-addr-uint2634 = add i64 %ptrtoint2633, 7
  %entry-point-addr2635 = inttoptr i64 %entry-point-addr-uint2634 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2636 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2635, align 8
  %805 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2636({}* %202, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest2639 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2639:                                  ; preds = %normal-dest2632
  %.elt3804 = extractvalue { {}*, i64 } %805, 0
  %.elt3806 = extractvalue { {}*, i64 } %805, 1
  %cond3243 = icmp eq i64 %.elt3806, 0
  %806 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %OUT1485392238.0 = select i1 %cond3243, {}* %806, {}* %.elt3804
  %ptrtoint2646 = ptrtoint {}* %"closure->LAMBDA" to i64
  %tag-only2647 = and i64 %ptrtoint2646, 7
  %test2648 = icmp eq i64 %tag-only2647, 1
  br i1 %test2648, label %header-check-br2645, label %tag130

header-check-br2645:                              ; preds = %normal-dest2639
  %irc-bit-cast2649 = bitcast {}* %"closure->LAMBDA" to i8*
  %gep2650 = getelementptr inbounds i8, i8* %irc-bit-cast2649, i64 -9
  %irc-bit-cast2651 = bitcast i8* %gep2650 to i64*
  %807 = load i64, i64* %irc-bit-cast2651, align 8
  %.off4173 = add i64 %807, -913
  %808 = icmp ult i64 %.off4173, 85
  br i1 %808, label %tag215, label %header-check-br1759

normal-dest2655:                                  ; preds = %maybe-more-tests2907
  %ptrtoint2656 = ptrtoint {}* %864 to i64
  %entry-point-addr-uint2657 = add i64 %ptrtoint2656, 7
  %entry-point-addr2658 = inttoptr i64 %entry-point-addr-uint2657 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2659 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2658, align 8
  %809 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2659({}* %864, i64 1, {}* nonnull %"closure->LAMBDA3106", {}* null, {}* null, {}* null)
          to label %normal-dest2662 unwind label %cleanup-lpad.loopexit

normal-dest2662:                                  ; preds = %normal-dest2655
  %.elt3425 = extractvalue { {}*, i64 } %809, 0
  %.elt3427 = extractvalue { {}*, i64 } %809, 1
  %cond3172 = icmp eq i64 %.elt3427, 0
  %810 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149151.2 = select i1 %cond3172, {}* %810, {}* %.elt3425
  br label %tag232

normal-dest2676:                                  ; preds = %tag252
  %811 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %812 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %813 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %814 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 346), align 16
  %ptrtoint2677 = ptrtoint {}* %206 to i64
  %entry-point-addr-uint2678 = add i64 %ptrtoint2677, 7
  %entry-point-addr2679 = inttoptr i64 %entry-point-addr-uint2678 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2680 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2679, align 8
  %815 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2680({}* %206, i64 5, {}* %811, {}* %812, {}* %"closure->LAMBDA1471", {}* %813, {}* %814)
          to label %normal-dest2683 unwind label %cleanup-lpad.loopexit

normal-dest2683:                                  ; preds = %normal-dest2676
  %.elt3541 = extractvalue { {}*, i64 } %815, 0
  %.elt3543 = extractvalue { {}*, i64 } %815, 1
  %cond3194 = icmp eq i64 %.elt3543, 0
  %816 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148902.2 = select i1 %cond3194, {}* %816, {}* %.elt3541
  br label %tag154

header-check-br2689:                              ; preds = %header-check-br2492
  %.off4114 = add i64 %778, -1001
  %817 = icmp ult i64 %.off4114, 5
  br i1 %817, label %maybe-more-tests2697, label %tag81

maybe-more-tests2697:                             ; preds = %header-check-br2689
  %818 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %819 = invoke {}* @cc_safe_fdefinition({}* %818)
          to label %normal-dest1986 unwind label %cleanup-lpad.loopexit

normal-dest2704:                                  ; preds = %tag254
  %820 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 137), align 8
  %821 = invoke {}* @cc_safe_fdefinition({}* %820)
          to label %normal-dest2710 unwind label %cleanup-lpad.loopexit

normal-dest2710:                                  ; preds = %normal-dest2704
  %ptrtoint2711 = ptrtoint {}* %821 to i64
  %entry-point-addr-uint2712 = add i64 %ptrtoint2711, 7
  %entry-point-addr2713 = inttoptr i64 %entry-point-addr-uint2712 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2714 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2713, align 8
  %822 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2714({}* %821, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %tag161 unwind label %cleanup-lpad.loopexit

normal-dest2729:                                  ; preds = %tag256
  %823 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %824 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %825 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %826 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 372), align 16
  %ptrtoint2730 = ptrtoint {}* %212 to i64
  %entry-point-addr-uint2731 = add i64 %ptrtoint2730, 7
  %entry-point-addr2732 = inttoptr i64 %entry-point-addr-uint2731 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2733 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2732, align 8
  %827 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2733({}* %212, i64 5, {}* %823, {}* %824, {}* %"closure->LAMBDA648", {}* %825, {}* %826)
          to label %normal-dest2736 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2736:                                  ; preds = %normal-dest2729
  %.elt3668 = extractvalue { {}*, i64 } %827, 0
  %.elt3670 = extractvalue { {}*, i64 } %827, 1
  %cond3218 = icmp eq i64 %.elt3670, 0
  %828 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148701.2 = select i1 %cond3218, {}* %828, {}* %.elt3668
  br label %tag38

normal-dest2749:                                  ; preds = %maybe-more-tests482
  %ptrtoint2750 = ptrtoint {}* %300 to i64
  %entry-point-addr-uint2751 = add i64 %ptrtoint2750, 7
  %entry-point-addr2752 = inttoptr i64 %entry-point-addr-uint2751 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2753 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2752, align 8
  %829 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2753({}* %300, i64 1, {}* nonnull %"closure->LAMBDA1471", {}* null, {}* null, {}* null)
          to label %normal-dest2756 unwind label %cleanup-lpad.loopexit

normal-dest2756:                                  ; preds = %normal-dest2749
  %.elt3617 = extractvalue { {}*, i64 } %829, 0
  %.elt3619 = extractvalue { {}*, i64 } %829, 1
  %cond3208 = icmp eq i64 %.elt3619, 0
  %830 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148823.2 = select i1 %cond3208, {}* %830, {}* %.elt3617
  br label %tag223

normal-dest2763:                                  ; preds = %maybe-more-tests2477
  %ptrtoint2764 = ptrtoint {}* %775 to i64
  %entry-point-addr-uint2765 = add i64 %ptrtoint2764, 7
  %entry-point-addr2766 = inttoptr i64 %entry-point-addr-uint2765 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2767 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2766, align 8
  %831 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2767({}* %775, i64 1, {}* nonnull %"closure->LAMBDA648", {}* null, {}* null, {}* null)
          to label %normal-dest2770 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2770:                                  ; preds = %normal-dest2763
  %.elt3636 = extractvalue { {}*, i64 } %831, 0
  %.elt3638 = extractvalue { {}*, i64 } %831, 1
  %cond3212 = icmp eq i64 %.elt3638, 0
  %832 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148751.2 = select i1 %cond3212, {}* %832, {}* %.elt3636
  br label %tag106

normal-dest2777:                                  ; preds = %maybe-more-tests2937
  %ptrtoint2778 = ptrtoint {}* %873 to i64
  %entry-point-addr-uint2779 = add i64 %ptrtoint2778, 7
  %entry-point-addr2780 = inttoptr i64 %entry-point-addr-uint2779 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2781 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2780, align 8
  %833 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2781({}* %873, i64 1, {}* nonnull %"closure->LAMBDA1613", {}* null, {}* null, {}* null)
          to label %normal-dest2784 unwind label %cleanup-lpad.loopexit

normal-dest2784:                                  ; preds = %normal-dest2777
  %.elt3525 = extractvalue { {}*, i64 } %833, 0
  %.elt3527 = extractvalue { {}*, i64 } %833, 1
  %cond3191 = icmp eq i64 %.elt3527, 0
  %834 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148988.2 = select i1 %cond3191, {}* %834, {}* %.elt3525
  br label %tag125

normal-dest2791:                                  ; preds = %maybe-more-tests2854
  %ptrtoint2792 = ptrtoint {}* %854 to i64
  %entry-point-addr-uint2793 = add i64 %ptrtoint2792, 7
  %entry-point-addr2794 = inttoptr i64 %entry-point-addr-uint2793 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2795 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2794, align 8
  %835 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2795({}* %854, i64 1, {}* nonnull %"closure->LAMBDA1305", {}* null, {}* null, {}* null)
          to label %normal-dest2798 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2798:                                  ; preds = %normal-dest2791
  %.elt3840 = extractvalue { {}*, i64 } %835, 0
  %.elt3842 = extractvalue { {}*, i64 } %835, 1
  %cond3250 = icmp eq i64 %.elt3842, 0
  %836 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149790.2 = select i1 %cond3250, {}* %836, {}* %.elt3840
  br label %tag52

normal-dest2805:                                  ; preds = %tag265
  %837 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %838 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %839 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %840 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 349), align 8
  %ptrtoint2806 = ptrtoint {}* %214 to i64
  %entry-point-addr-uint2807 = add i64 %ptrtoint2806, 7
  %entry-point-addr2808 = inttoptr i64 %entry-point-addr-uint2807 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2809 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2808, align 8
  %841 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2809({}* %214, i64 5, {}* %837, {}* %838, {}* %"closure->LAMBDA1613", {}* %839, {}* %840)
          to label %normal-dest2812 unwind label %cleanup-lpad.loopexit

normal-dest2812:                                  ; preds = %normal-dest2805
  %.elt3529 = extractvalue { {}*, i64 } %841, 0
  %.elt3531 = extractvalue { {}*, i64 } %841, 1
  %cond3192 = icmp eq i64 %.elt3531, 0
  %842 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148972.2 = select i1 %cond3192, {}* %842, {}* %.elt3529
  br label %tag219

normal-dest2819:                                  ; preds = %tag266
  %843 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %844 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %845 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %846 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 356), align 16
  %ptrtoint2820 = ptrtoint {}* %216 to i64
  %entry-point-addr-uint2821 = add i64 %ptrtoint2820, 7
  %entry-point-addr2822 = inttoptr i64 %entry-point-addr-uint2821 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2823 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2822, align 8
  %847 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2823({}* %216, i64 5, {}* %843, {}* %844, {}* %"closure->LAMBDA3106", {}* %845, {}* %846)
          to label %normal-dest2826 unwind label %cleanup-lpad.loopexit

normal-dest2826:                                  ; preds = %normal-dest2819
  %.elt3449 = extractvalue { {}*, i64 } %847, 0
  %.elt3451 = extractvalue { {}*, i64 } %847, 1
  %cond3177 = icmp eq i64 %.elt3451, 0
  %848 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149108.2 = select i1 %cond3177, {}* %848, {}* %.elt3449
  br label %tag246

normal-dest2833:                                  ; preds = %tag267
  %ptrtoint2834 = ptrtoint {}* %218 to i64
  %entry-point-addr-uint2835 = add i64 %ptrtoint2834, 7
  %entry-point-addr2836 = inttoptr i64 %entry-point-addr-uint2835 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2837 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2836, align 8
  %849 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2837({}* %218, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest2840 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2840:                                  ; preds = %normal-dest2833
  %.elt3660 = extractvalue { {}*, i64 } %849, 0
  %.elt3662 = extractvalue { {}*, i64 } %849, 1
  %cond3216 = icmp eq i64 %.elt3662, 0
  %850 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148719.0 = select i1 %cond3216, {}* %850, {}* %.elt3660
  %851 = icmp eq {}* %G148719.0, %850
  br i1 %851, label %tag54, label %tag43

header-check-br2846:                              ; preds = %header-check-br2602
  %.off4178 = add i64 %800, -1001
  %852 = icmp ult i64 %.off4178, 5
  br i1 %852, label %maybe-more-tests2854, label %tag118

maybe-more-tests2854:                             ; preds = %header-check-br2846
  %853 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %854 = invoke {}* @cc_safe_fdefinition({}* %853)
          to label %normal-dest2791 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2856:                                  ; preds = %maybe-more-tests2928
  %ptrtoint2857 = ptrtoint {}* %870 to i64
  %entry-point-addr-uint2858 = add i64 %ptrtoint2857, 7
  %entry-point-addr2859 = inttoptr i64 %entry-point-addr-uint2858 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2860 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2859, align 8
  %855 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2860({}* %870, i64 1, {}* nonnull %"closure->LAMBDA2909", {}* null, {}* null, {}* null)
          to label %normal-dest2863 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2863:                                  ; preds = %normal-dest2856
  %.elt3692 = extractvalue { {}*, i64 } %855, 0
  %.elt3694 = extractvalue { {}*, i64 } %855, 1
  %cond3222 = icmp eq i64 %.elt3694, 0
  %856 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149651.2 = select i1 %cond3222, {}* %856, {}* %.elt3692
  br label %tag303

normal-dest2872:                                  ; preds = %maybe-more-tests491
  %ptrtoint2873 = ptrtoint {}* %303 to i64
  %entry-point-addr-uint2874 = add i64 %ptrtoint2873, 7
  %entry-point-addr2875 = inttoptr i64 %entry-point-addr-uint2874 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2876 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2875, align 8
  %857 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2876({}* %303, i64 1, {}* nonnull %"closure->LAMBDA2909", {}* null, {}* null, {}* null)
          to label %normal-dest2879 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2879:                                  ; preds = %normal-dest2872
  %.elt3740 = extractvalue { {}*, i64 } %857, 0
  %.elt3742 = extractvalue { {}*, i64 } %857, 1
  %cond3231 = icmp eq i64 %.elt3742, 0
  %858 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149592.2 = select i1 %cond3231, {}* %858, {}* %.elt3740
  br label %tag171

normal-dest2886:                                  ; preds = %tag276
  %ptrtoint2887 = ptrtoint {}* %222 to i64
  %entry-point-addr-uint2888 = add i64 %ptrtoint2887, 7
  %entry-point-addr2889 = inttoptr i64 %entry-point-addr-uint2888 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2890 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2889, align 8
  %859 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2890({}* %222, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest2893 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2893:                                  ; preds = %normal-dest2886
  %.elt3800 = extractvalue { {}*, i64 } %859, 0
  %.elt3802 = extractvalue { {}*, i64 } %859, 1
  %cond3242 = icmp eq i64 %.elt3802, 0
  %860 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149466.0 = select i1 %cond3242, {}* %860, {}* %.elt3800
  %861 = icmp eq {}* %G149466.0, %860
  br i1 %861, label %tag116, label %tag248

header-check-br2899:                              ; preds = %header-check-br1885
  %.off4112 = add i64 %645, -1001
  %862 = icmp ult i64 %.off4112, 5
  br i1 %862, label %maybe-more-tests2907, label %tag115

maybe-more-tests2907:                             ; preds = %header-check-br2899
  %863 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %864 = invoke {}* @cc_safe_fdefinition({}* %863)
          to label %normal-dest2655 unwind label %cleanup-lpad.loopexit

normal-dest2908:                                  ; preds = %tag284
  %865 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %866 = icmp eq {}* %stream.0, %865
  %.val4084 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149672.0 = select i1 %866, {}* %865, {}* %.val4084
  %867 = icmp eq {}* %G149672.0, %.val4084
  br i1 %867, label %tag288, label %tag208

header-check-br2920:                              ; preds = %header-check-br2214
  %.off4156 = add i64 %721, -1001
  %868 = icmp ult i64 %.off4156, 5
  br i1 %868, label %maybe-more-tests2928, label %tag169

maybe-more-tests2928:                             ; preds = %header-check-br2920
  %869 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %870 = invoke {}* @cc_safe_fdefinition({}* %869)
          to label %normal-dest2856 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

header-check-br2929:                              ; preds = %header-check-br1962
  %.off4128 = add i64 %665, -1001
  %871 = icmp ult i64 %.off4128, 5
  br i1 %871, label %maybe-more-tests2937, label %tag66

maybe-more-tests2937:                             ; preds = %header-check-br2929
  %872 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %873 = invoke {}* @cc_safe_fdefinition({}* %872)
          to label %normal-dest2777 unwind label %cleanup-lpad.loopexit

normal-dest2939:                                  ; preds = %tag292
  %874 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 37), align 8
  %ptrtoint2940 = ptrtoint {}* %227 to i64
  %entry-point-addr-uint2941 = add i64 %ptrtoint2940, 7
  %entry-point-addr2942 = inttoptr i64 %entry-point-addr-uint2941 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2943 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2942, align 8
  %875 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2943({}* %227, i64 2, {}* %vaarg, {}* %874, {}* null, {}* null)
          to label %normal-dest2946 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2946:                                  ; preds = %normal-dest2939
  %.elt3748 = extractvalue { {}*, i64 } %875, 0
  %.elt3750 = extractvalue { {}*, i64 } %875, 1
  %cond3233 = icmp eq i64 %.elt3750, 0
  %876 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149575.0 = select i1 %cond3233, {}* %876, {}* %.elt3748
  %ptrtoint2952 = ptrtoint {}* %G149572.0 to i64
  %entry-point-addr-uint2953 = add i64 %ptrtoint2952, 7
  %entry-point-addr2954 = inttoptr i64 %entry-point-addr-uint2953 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2955 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2954, align 8
  %877 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2955({}* %G149572.0, i64 3, {}* %stream.0, {}* %225, {}* %G149575.0, {}* null)
          to label %tag58 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest2970:                                  ; preds = %tag295
  %878 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %879 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %880 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %881 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 362), align 16
  %ptrtoint2971 = ptrtoint {}* %231 to i64
  %entry-point-addr-uint2972 = add i64 %ptrtoint2971, 7
  %entry-point-addr2973 = inttoptr i64 %entry-point-addr-uint2972 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2974 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2973, align 8
  %882 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2974({}* %231, i64 5, {}* %878, {}* %879, {}* %"closure->LAMBDA2195", {}* %880, {}* %881)
          to label %normal-dest2977 unwind label %cleanup-lpad.loopexit

normal-dest2977:                                  ; preds = %normal-dest2970
  %.elt3377 = extractvalue { {}*, i64 } %882, 0
  %.elt3379 = extractvalue { {}*, i64 } %882, 1
  %cond3164 = icmp eq i64 %.elt3379, 0
  %883 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149261.1 = select i1 %cond3164, {}* %883, {}* %.elt3377
  br label %tag190

header-check-br2983:                              ; preds = %tag296
  %irc-bit-cast2987 = bitcast {}* %"closure->LAMBDA1471" to i8*
  %gep2988 = getelementptr inbounds i8, i8* %irc-bit-cast2987, i64 -9
  %irc-bit-cast2989 = bitcast i8* %gep2988 to i64*
  %884 = load i64, i64* %irc-bit-cast2989, align 8
  %.off4141 = add i64 %884, -913
  %885 = icmp ult i64 %.off4141, 85
  br i1 %885, label %tag223, label %header-check-br474

normal-dest2993:                                  ; preds = %tag299
  %ptrtoint2994 = ptrtoint {}* %233 to i64
  %entry-point-addr-uint2995 = add i64 %ptrtoint2994, 7
  %entry-point-addr2996 = inttoptr i64 %entry-point-addr-uint2995 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2997 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2996, align 8
  %886 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2997({}* %233, i64 2, {}* %vaarg, {}* %A.0, {}* null, {}* null)
          to label %normal-dest3000 unwind label %cleanup-lpad.loopexit

normal-dest3000:                                  ; preds = %normal-dest2993
  %.elt3565 = extractvalue { {}*, i64 } %886, 0
  %.elt3567 = extractvalue { {}*, i64 } %886, 1
  %cond3199 = icmp eq i64 %.elt3567, 0
  %887 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G148877.0 = select i1 %cond3199, {}* %887, {}* %.elt3565
  %ptrtoint3006 = ptrtoint {}* %G148874.0 to i64
  %entry-point-addr-uint3007 = add i64 %ptrtoint3006, 7
  %entry-point-addr3008 = inttoptr i64 %entry-point-addr-uint3007 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3009 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3008, align 8
  %888 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3009({}* %G148874.0, i64 3, {}* %G148625.0, {}* %A.0, {}* %G148877.0, {}* null)
          to label %normal-dest3012 unwind label %cleanup-lpad.loopexit

normal-dest3012:                                  ; preds = %normal-dest3000
  %889 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 149), align 8
  %890 = invoke {}* @cc_safe_fdefinition({}* %889)
          to label %normal-dest3018 unwind label %cleanup-lpad.loopexit

normal-dest3018:                                  ; preds = %normal-dest3012
  %ptrtoint3019 = ptrtoint {}* %890 to i64
  %entry-point-addr-uint3020 = add i64 %ptrtoint3019, 7
  %entry-point-addr3021 = inttoptr i64 %entry-point-addr-uint3020 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3022 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3021, align 8
  %891 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3022({}* %890, i64 1, {}* %G148625.0, {}* null, {}* null, {}* null)
          to label %tag161 unwind label %cleanup-lpad.loopexit

normal-dest3031:                                  ; preds = %tag300
  %ptrtoint3032 = ptrtoint {}* %235 to i64
  %entry-point-addr-uint3033 = add i64 %ptrtoint3032, 7
  %entry-point-addr3034 = inttoptr i64 %entry-point-addr-uint3033 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3035 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3034, align 8
  %892 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3035({}* %235, i64 2, {}* %vaarg, {}* %A.0, {}* null, {}* null)
          to label %normal-dest3038 unwind label %cleanup-lpad.loopexit

normal-dest3038:                                  ; preds = %normal-dest3031
  %893 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %894 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 230), align 16
  %895 = invoke {}* @cc_safe_fdefinition({}* %894)
          to label %normal-dest3045 unwind label %cleanup-lpad.loopexit

normal-dest3045:                                  ; preds = %normal-dest3038
  %.elt3391 = extractvalue { {}*, i64 } %892, 1
  %cond3166 = icmp eq i64 %.elt3391, 0
  %.elt3389 = extractvalue { {}*, i64 } %892, 0
  %G149239.0 = select i1 %cond3166, {}* %893, {}* %.elt3389
  %ptrtoint3046 = ptrtoint {}* %895 to i64
  %entry-point-addr-uint3047 = add i64 %ptrtoint3046, 7
  %entry-point-addr3048 = inttoptr i64 %entry-point-addr-uint3047 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3049 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3048, align 8
  %896 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3049({}* %895, i64 1, {}* %G149239.0, {}* null, {}* null, {}* null)
          to label %normal-dest3052 unwind label %cleanup-lpad.loopexit

normal-dest3052:                                  ; preds = %normal-dest3045
  %.elt3393 = extractvalue { {}*, i64 } %896, 0
  %.elt3395 = extractvalue { {}*, i64 } %896, 1
  %cond3167 = icmp eq i64 %.elt3395, 0
  %897 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149839.0 = select i1 %cond3167, {}* %897, {}* %.elt3393
  %898 = icmp eq {}* %G149839.0, %897
  %.val4104 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G149237.0 = select i1 %898, {}* %897, {}* %.val4104
  %899 = icmp eq {}* %G149237.0, %897
  br i1 %899, label %tag100, label %tag306

normal-dest3065:                                  ; preds = %tag303
  %900 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 37), align 8
  %901 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %902 = invoke {}* @cc_safe_fdefinition({}* %901)
          to label %normal-dest3067 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest3067:                                  ; preds = %normal-dest3065
  %903 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 37), align 8
  %ptrtoint3068 = ptrtoint {}* %902 to i64
  %entry-point-addr-uint3069 = add i64 %ptrtoint3068, 7
  %entry-point-addr3070 = inttoptr i64 %entry-point-addr-uint3069 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3071 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3070, align 8
  %904 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3071({}* %902, i64 2, {}* %vaarg, {}* %903, {}* null, {}* null)
          to label %normal-dest3074 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest3074:                                  ; preds = %normal-dest3067
  %.elt3275 = extractvalue { {}*, i64 } %904, 0
  %.elt3277 = extractvalue { {}*, i64 } %904, 1
  %cond3147 = icmp eq i64 %.elt3277, 0
  %905 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149654.0 = select i1 %cond3147, {}* %905, {}* %.elt3275
  %ptrtoint3080 = ptrtoint {}* %G149651.0 to i64
  %entry-point-addr-uint3081 = add i64 %ptrtoint3080, 7
  %entry-point-addr3082 = inttoptr i64 %entry-point-addr-uint3081 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3083 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3082, align 8
  %906 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3083({}* %G149651.0, i64 3, {}* %239, {}* %900, {}* %G149654.0, {}* null)
          to label %tag58 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest3092:                                  ; preds = %maybe-more-tests2295
  %ptrtoint3093 = ptrtoint {}* %737 to i64
  %entry-point-addr-uint3094 = add i64 %ptrtoint3093, 7
  %entry-point-addr3095 = inttoptr i64 %entry-point-addr-uint3094 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3096 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3095, align 8
  %907 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3096({}* %737, i64 1, {}* nonnull %"closure->LAMBDA2195", {}* null, {}* null, {}* null)
          to label %normal-dest3099 unwind label %cleanup-lpad.loopexit

normal-dest3099:                                  ; preds = %normal-dest3092
  %.elt3385 = extractvalue { {}*, i64 } %907, 0
  %.elt3387 = extractvalue { {}*, i64 } %907, 1
  %cond3165 = icmp eq i64 %.elt3387, 0
  %908 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149261.2 = select i1 %cond3165, {}* %908, {}* %.elt3385
  br label %tag190

normal-dest3105:                                  ; preds = %tag306
  %909 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %910 = icmp eq {}* %stream.0, %909
  %.val4106 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149192.0 = select i1 %910, {}* %909, {}* %.val4106
  %911 = icmp eq {}* %G149192.0, %.val4106
  br i1 %911, label %tag119, label %tag60

normal-dest3118:                                  ; preds = %tag310
  %912 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %913 = invoke {}* @cc_safe_fdefinition({}* %912)
          to label %normal-dest3120 unwind label %cleanup-lpad.loopexit

normal-dest3120:                                  ; preds = %normal-dest3118
  %ptrtoint3121 = ptrtoint {}* %913 to i64
  %entry-point-addr-uint3122 = add i64 %ptrtoint3121, 7
  %entry-point-addr3123 = inttoptr i64 %entry-point-addr-uint3122 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3124 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3123, align 8
  %914 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3124({}* %913, i64 2, {}* %vaarg, {}* %A.0, {}* null, {}* null)
          to label %normal-dest3127 unwind label %cleanup-lpad.loopexit

normal-dest3127:                                  ; preds = %normal-dest3120
  %.elt3296 = extractvalue { {}*, i64 } %914, 0
  %.elt3298 = extractvalue { {}*, i64 } %914, 1
  %cond3151 = icmp eq i64 %.elt3298, 0
  %915 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149384.0 = select i1 %cond3151, {}* %915, {}* %.elt3296
  %ptrtoint3133 = ptrtoint {}* %244 to i64
  %entry-point-addr-uint3134 = add i64 %ptrtoint3133, 7
  %entry-point-addr3135 = inttoptr i64 %entry-point-addr-uint3134 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3136 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3135, align 8
  %916 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3136({}* %244, i64 1, {}* %G149384.0, {}* null, {}* null, {}* null)
          to label %normal-dest3139 unwind label %cleanup-lpad.loopexit

normal-dest3139:                                  ; preds = %normal-dest3127
  %.elt3300 = extractvalue { {}*, i64 } %916, 0
  %.elt3302 = extractvalue { {}*, i64 } %916, 1
  %cond3152 = icmp eq i64 %.elt3302, 0
  %917 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149381.0 = select i1 %cond3152, {}* %917, {}* %.elt3300
  %918 = icmp eq {}* %G149381.0, %917
  br i1 %918, label %tag300, label %tag183
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.7"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !45 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %process-rest-argument
  %9 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest22 unwind label %cleanup-lpad

tag1:                                             ; preds = %tag3
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest29 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest36, %tag3
  %format-arg-148542.0 = phi {}* [ %format-arg-148542.1, %tag3 ], [ %format-arg-148542.2, %normal-dest36 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 134), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest43 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest25, %process-rest-argument
  %15 = phi {}* [ %21, %process-rest-argument ], [ %30, %normal-dest25 ]
  %format-arg-148541.0 = phi {}* [ %format-arg-148541.1143, %process-rest-argument ], [ %format-arg-148541.2, %normal-dest25 ]
  %16 = icmp eq {}* %G148545.0, %15
  br i1 %16, label %tag1, label %tag2

cleanup-lpad:                                     ; preds = %normal-dest95, %normal-dest89, %normal-dest82, %normal-dest76, %normal-dest69, %normal-dest63, %normal-dest56, %normal-dest50, %normal-dest43, %tag2, %normal-dest29, %tag1, %normal-dest22, %tag, %error
  %17 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %17

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-cont.thread, label %opt-cont

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-cont.thread:                                  ; preds = %continue
  %19 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont:                                         ; preds = %continue
  %rem-nargs8 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-19 = add i64 %rem-nargs8, -1
  store i64 %rem-nargs-19, i64* %"remaining-nargs*", align 8
  %vaarg10 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args15 = icmp sgt i64 %nargs, 2
  br i1 %enough-given-args15, label %opt-arg12, label %opt-cont.opt-init13_crit_edge

opt-cont.opt-init13_crit_edge:                    ; preds = %opt-cont
  %.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-arg12:                                        ; preds = %opt-cont
  %rem-nargs16 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-117 = add i64 %rem-nargs16, -1
  store i64 %rem-nargs-117, i64* %"remaining-nargs*", align 8
  %vaarg18 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-cont.thread, %opt-cont.opt-init13_crit_edge, %opt-arg12
  %format-arg-148541.1143 = phi {}* [ %vaarg10, %opt-arg12 ], [ undef, %opt-cont.thread ], [ %vaarg10, %opt-cont.opt-init13_crit_edge ]
  %G148546.0141 = phi {}* [ %18, %opt-arg12 ], [ %19, %opt-cont.thread ], [ %18, %opt-cont.opt-init13_crit_edge ]
  %format-arg-148542.1 = phi {}* [ %vaarg18, %opt-arg12 ], [ undef, %opt-cont.thread ], [ undef, %opt-cont.opt-init13_crit_edge ]
  %G148545.0 = phi {}* [ %18, %opt-arg12 ], [ %19, %opt-cont.thread ], [ %.pre, %opt-cont.opt-init13_crit_edge ]
  %20 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %22 = icmp eq {}* %G148546.0141, %21
  br i1 %22, label %tag, label %tag3

normal-dest22:                                    ; preds = %tag
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 314), align 16
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  %ptrtoint = ptrtoint {}* %10 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %10, i64 7, {}* %23, {}* %24, {}* %25, {}* %26, {}* %27, {}* %28, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest25 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %normal-dest22
  %.elt136 = extractvalue { {}*, i64 } %29, 0
  %.elt138 = extractvalue { {}*, i64 } %29, 1
  %cond109 = icmp eq i64 %.elt138, 0
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %format-arg-148541.2 = select i1 %cond109, {}* %30, {}* %.elt136
  br label %tag3

normal-dest29:                                    ; preds = %tag1
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 314), align 16
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  %ptrtoint30 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint31 = add i64 %ptrtoint30, 7
  %entry-point-addr32 = inttoptr i64 %entry-point-addr-uint31 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point33 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr32, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point33({}* %12, i64 7, {}* %31, {}* %32, {}* %33, {}* %34, {}* %35, {}* %36, {}* inttoptr (i64 16 to {}*))
          to label %normal-dest36 unwind label %cleanup-lpad

normal-dest36:                                    ; preds = %normal-dest29
  %.elt132 = extractvalue { {}*, i64 } %37, 0
  %.elt134 = extractvalue { {}*, i64 } %37, 1
  %cond = icmp eq i64 %.elt134, 0
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %format-arg-148542.2 = select i1 %cond, {}* %38, {}* %.elt132
  br label %tag2

normal-dest43:                                    ; preds = %tag2
  %ptrtoint44 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint45 = add i64 %ptrtoint44, 7
  %entry-point-addr46 = inttoptr i64 %entry-point-addr-uint45 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point47 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr46, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point47({}* %14, i64 2, {}* %format-arg-148541.0, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest50 unwind label %cleanup-lpad

normal-dest50:                                    ; preds = %normal-dest43
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 131), align 8
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest56 unwind label %cleanup-lpad

normal-dest56:                                    ; preds = %normal-dest50
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 315), align 8
  %ptrtoint57 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %43 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %41, i64 2, {}* %42, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %44 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 134), align 16
  %45 = invoke {}* @cc_safe_fdefinition({}* %44)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %normal-dest63
  %ptrtoint70 = ptrtoint {}* %45 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %46 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %45, i64 2, {}* %format-arg-148542.0, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %47 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 131), align 8
  %48 = invoke {}* @cc_safe_fdefinition({}* %47)
          to label %normal-dest82 unwind label %cleanup-lpad

normal-dest82:                                    ; preds = %normal-dest76
  %49 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 316), align 16
  %ptrtoint83 = ptrtoint {}* %48 to i64
  %entry-point-addr-uint84 = add i64 %ptrtoint83, 7
  %entry-point-addr85 = inttoptr i64 %entry-point-addr-uint84 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point86 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr85, align 8
  %50 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point86({}* %48, i64 2, {}* %49, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest89 unwind label %cleanup-lpad

normal-dest89:                                    ; preds = %normal-dest82
  %51 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 137), align 8
  %52 = invoke {}* @cc_safe_fdefinition({}* %51)
          to label %normal-dest95 unwind label %cleanup-lpad

normal-dest95:                                    ; preds = %normal-dest89
  %ptrtoint96 = ptrtoint {}* %52 to i64
  %entry-point-addr-uint97 = add i64 %ptrtoint96, 7
  %entry-point-addr98 = inttoptr i64 %entry-point-addr-uint97 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point99 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr98, align 8
  %53 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point99({}* %52, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest102 unwind label %cleanup-lpad

normal-dest102:                                   ; preds = %normal-dest95
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %54 = insertvalue { {}*, i64 } undef, {}* %20, 0
  %55 = insertvalue { {}*, i64 } %54, i64 1, 1
  ret { {}*, i64 } %55
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.8"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !46 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %process-rest-argument
  %9 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest11 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest14, %process-rest-argument
  %format-arg-148636.0 = phi {}* [ %format-arg-148636.1, %process-rest-argument ], [ %format-arg-148636.2, %normal-dest14 ]
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 134), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest18 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %normal-dest70, %normal-dest64, %normal-dest57, %normal-dest51, %normal-dest44, %normal-dest38, %normal-dest31, %normal-dest25, %normal-dest18, %tag1, %normal-dest11, %tag, %error
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %13

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-init, label %opt-arg

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-arg:                                          ; preds = %continue
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %rem-nargs6 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-17 = add i64 %rem-nargs6, -1
  store i64 %rem-nargs-17, i64* %"remaining-nargs*", align 8
  %vaarg8 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

opt-init:                                         ; preds = %continue
  %15 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-arg, %opt-init
  %format-arg-148636.1 = phi {}* [ %vaarg8, %opt-arg ], [ undef, %opt-init ]
  %G148639.0 = phi {}* [ %14, %opt-arg ], [ %15, %opt-init ]
  %16 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %18 = icmp eq {}* %G148639.0, %17
  br i1 %18, label %tag, label %tag1

normal-dest11:                                    ; preds = %tag
  %19 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  %20 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 366), align 16
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  %ptrtoint = ptrtoint {}* %10 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %10, i64 7, {}* %19, {}* %20, {}* %21, {}* %22, {}* %23, {}* %24, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest14 unwind label %cleanup-lpad

normal-dest14:                                    ; preds = %normal-dest11
  %.elt106 = extractvalue { {}*, i64 } %25, 0
  %.elt108 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt108, 0
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %format-arg-148636.2 = select i1 %cond, {}* %26, {}* %.elt106
  br label %tag1

normal-dest18:                                    ; preds = %tag1
  %ptrtoint19 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint20 = add i64 %ptrtoint19, 7
  %entry-point-addr21 = inttoptr i64 %entry-point-addr-uint20 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point22 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr21, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point22({}* %12, i64 2, {}* %format-arg-148636.0, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest25 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %normal-dest18
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 131), align 8
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest31 unwind label %cleanup-lpad

normal-dest31:                                    ; preds = %normal-dest25
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 367), align 8
  %ptrtoint32 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint33 = add i64 %ptrtoint32, 7
  %entry-point-addr34 = inttoptr i64 %entry-point-addr-uint33 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point35 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr34, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point35({}* %29, i64 2, {}* %30, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest38 unwind label %cleanup-lpad

normal-dest38:                                    ; preds = %normal-dest31
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 137), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest44 unwind label %cleanup-lpad

normal-dest44:                                    ; preds = %normal-dest38
  %ptrtoint45 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint46 = add i64 %ptrtoint45, 7
  %entry-point-addr47 = inttoptr i64 %entry-point-addr-uint46 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point48 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr47, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point48({}* %33, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest51 unwind label %cleanup-lpad

normal-dest51:                                    ; preds = %normal-dest44
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 131), align 8
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest57 unwind label %cleanup-lpad

normal-dest57:                                    ; preds = %normal-dest51
  %37 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 368), align 16
  %ptrtoint58 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint59 = add i64 %ptrtoint58, 7
  %entry-point-addr60 = inttoptr i64 %entry-point-addr-uint59 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point61 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr60, align 8
  %38 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point61({}* %36, i64 2, {}* %37, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest64 unwind label %cleanup-lpad

normal-dest64:                                    ; preds = %normal-dest57
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 137), align 8
  %40 = invoke {}* @cc_safe_fdefinition({}* %39)
          to label %normal-dest70 unwind label %cleanup-lpad

normal-dest70:                                    ; preds = %normal-dest64
  %ptrtoint71 = ptrtoint {}* %40 to i64
  %entry-point-addr-uint72 = add i64 %ptrtoint71, 7
  %entry-point-addr73 = inttoptr i64 %entry-point-addr-uint72 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point74 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr73, align 8
  %41 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point74({}* %40, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest77 unwind label %cleanup-lpad

normal-dest77:                                    ; preds = %normal-dest70
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %16, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.9"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !47 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %normal-dest53, %process-rest-argument
  %format-arg-148505.0 = phi {}* [ %format-arg-148505.1, %process-rest-argument ], [ %format-arg-148505.2, %normal-dest53 ]
  %9 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 134), align 16
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest11 unwind label %cleanup-lpad

tag1:                                             ; preds = %process-rest-argument
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest46 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %normal-dest46, %tag1, %normal-dest31, %normal-dest25, %normal-dest18, %normal-dest14, %normal-dest11, %tag, %error
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %13

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-init, label %opt-arg

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-arg:                                          ; preds = %continue
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %rem-nargs6 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-17 = add i64 %rem-nargs6, -1
  store i64 %rem-nargs-17, i64* %"remaining-nargs*", align 8
  %vaarg8 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

opt-init:                                         ; preds = %continue
  %15 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-arg, %opt-init
  %format-arg-148505.1 = phi {}* [ %vaarg8, %opt-arg ], [ undef, %opt-init ]
  %G148508.0 = phi {}* [ %14, %opt-arg ], [ %15, %opt-init ]
  %16 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %18 = icmp eq {}* %G148508.0, %17
  br i1 %18, label %tag1, label %tag

normal-dest11:                                    ; preds = %tag
  %ptrtoint = ptrtoint {}* %10 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %19 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %10, i64 2, {}* %format-arg-148505.0, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest14 unwind label %cleanup-lpad

normal-dest14:                                    ; preds = %normal-dest11
  %20 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 131), align 8
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest18 unwind label %cleanup-lpad

normal-dest18:                                    ; preds = %normal-dest14
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 307), align 8
  %ptrtoint19 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint20 = add i64 %ptrtoint19, 7
  %entry-point-addr21 = inttoptr i64 %entry-point-addr-uint20 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point22 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr21, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point22({}* %21, i64 2, {}* %22, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest25 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %normal-dest18
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 137), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest31 unwind label %cleanup-lpad

normal-dest31:                                    ; preds = %normal-dest25
  %ptrtoint32 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint33 = add i64 %ptrtoint32, 7
  %entry-point-addr34 = inttoptr i64 %entry-point-addr-uint33 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point35 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr34, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point35({}* %25, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest38 unwind label %cleanup-lpad

normal-dest38:                                    ; preds = %normal-dest31
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %27 = insertvalue { {}*, i64 } undef, {}* %16, 0
  %28 = insertvalue { {}*, i64 } %27, i64 1, 1
  ret { {}*, i64 } %28

normal-dest46:                                    ; preds = %tag1
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 306), align 16
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  %ptrtoint47 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint48 = add i64 %ptrtoint47, 7
  %entry-point-addr49 = inttoptr i64 %entry-point-addr-uint48 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point50 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr49, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point50({}* %12, i64 7, {}* %29, {}* %30, {}* %31, {}* %32, {}* %33, {}* %34, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest53 unwind label %cleanup-lpad

normal-dest53:                                    ; preds = %normal-dest46
  %.elt72 = extractvalue { {}*, i64 } %35, 0
  %.elt74 = extractvalue { {}*, i64 } %35, 1
  %cond = icmp eq i64 %.elt74, 0
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %format-arg-148505.2 = select i1 %cond, {}* %36, {}* %.elt72
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.10"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !48 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %normal-dest90, %tag3
  %format-arg-148618.0 = phi {}* [ %format-arg-148618.1, %tag3 ], [ %format-arg-148618.2, %normal-dest90 ]
  %9 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 339), align 8
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest22 unwind label %cleanup-lpad

tag1:                                             ; preds = %tag3
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest83 unwind label %cleanup-lpad

tag2:                                             ; preds = %process-rest-argument
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest96 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest103, %process-rest-argument
  %15 = phi {}* [ %21, %process-rest-argument ], [ %55, %normal-dest103 ]
  %format-arg-148617.0 = phi {}* [ %format-arg-148617.1143, %process-rest-argument ], [ %format-arg-148617.2, %normal-dest103 ]
  %16 = icmp eq {}* %G148621.0, %15
  br i1 %16, label %tag1, label %tag

cleanup-lpad:                                     ; preds = %normal-dest96, %tag2, %normal-dest83, %tag1, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %normal-dest42, %normal-dest36, %normal-dest29, %normal-dest25, %normal-dest22, %tag, %error
  %17 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %17

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-cont.thread, label %opt-cont

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-cont.thread:                                  ; preds = %continue
  %19 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont:                                         ; preds = %continue
  %rem-nargs8 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-19 = add i64 %rem-nargs8, -1
  store i64 %rem-nargs-19, i64* %"remaining-nargs*", align 8
  %vaarg10 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args15 = icmp sgt i64 %nargs, 2
  br i1 %enough-given-args15, label %opt-arg12, label %opt-cont.opt-init13_crit_edge

opt-cont.opt-init13_crit_edge:                    ; preds = %opt-cont
  %.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-arg12:                                        ; preds = %opt-cont
  %rem-nargs16 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-117 = add i64 %rem-nargs16, -1
  store i64 %rem-nargs-117, i64* %"remaining-nargs*", align 8
  %vaarg18 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-cont.thread, %opt-cont.opt-init13_crit_edge, %opt-arg12
  %format-arg-148617.1143 = phi {}* [ %vaarg10, %opt-arg12 ], [ undef, %opt-cont.thread ], [ %vaarg10, %opt-cont.opt-init13_crit_edge ]
  %G148622.0141 = phi {}* [ %18, %opt-arg12 ], [ %19, %opt-cont.thread ], [ %18, %opt-cont.opt-init13_crit_edge ]
  %format-arg-148618.1 = phi {}* [ %vaarg18, %opt-arg12 ], [ undef, %opt-cont.thread ], [ undef, %opt-cont.opt-init13_crit_edge ]
  %G148621.0 = phi {}* [ %18, %opt-arg12 ], [ %19, %opt-cont.thread ], [ %.pre, %opt-cont.opt-init13_crit_edge ]
  %20 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %22 = icmp eq {}* %G148622.0141, %21
  br i1 %22, label %tag2, label %tag3

normal-dest22:                                    ; preds = %tag
  %ptrtoint = ptrtoint {}* %10 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %10, i64 2, {}* %format-arg-148617.0, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest25 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %normal-dest22
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 131), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest29 unwind label %cleanup-lpad

normal-dest29:                                    ; preds = %normal-dest25
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 341), align 8
  %ptrtoint30 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint31 = add i64 %ptrtoint30, 7
  %entry-point-addr32 = inttoptr i64 %entry-point-addr-uint31 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point33 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr32, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point33({}* %25, i64 2, {}* %26, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest36 unwind label %cleanup-lpad

normal-dest36:                                    ; preds = %normal-dest29
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 339), align 8
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest42 unwind label %cleanup-lpad

normal-dest42:                                    ; preds = %normal-dest36
  %ptrtoint43 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %29, i64 2, {}* %format-arg-148618.0, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %normal-dest42
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 131), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 342), align 16
  %ptrtoint56 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %32, i64 2, {}* %33, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 137), align 8
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %ptrtoint69 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %36, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %38 = insertvalue { {}*, i64 } undef, {}* %20, 0
  %39 = insertvalue { {}*, i64 } %38, i64 1, 1
  ret { {}*, i64 } %39

normal-dest83:                                    ; preds = %tag1
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %44 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 338), align 16
  %45 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  %ptrtoint84 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint85 = add i64 %ptrtoint84, 7
  %entry-point-addr86 = inttoptr i64 %entry-point-addr-uint85 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point87 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr86, align 8
  %46 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point87({}* %12, i64 7, {}* %40, {}* %41, {}* %42, {}* %43, {}* %44, {}* %45, {}* inttoptr (i64 16 to {}*))
          to label %normal-dest90 unwind label %cleanup-lpad

normal-dest90:                                    ; preds = %normal-dest83
  %.elt132 = extractvalue { {}*, i64 } %46, 0
  %.elt134 = extractvalue { {}*, i64 } %46, 1
  %cond = icmp eq i64 %.elt134, 0
  %47 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %format-arg-148618.2 = select i1 %cond, {}* %47, {}* %.elt132
  br label %tag

normal-dest96:                                    ; preds = %tag2
  %48 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  %49 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %50 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %51 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %52 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 338), align 16
  %53 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  %ptrtoint97 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint98 = add i64 %ptrtoint97, 7
  %entry-point-addr99 = inttoptr i64 %entry-point-addr-uint98 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point100 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr99, align 8
  %54 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point100({}* %14, i64 7, {}* %48, {}* %49, {}* %50, {}* %51, {}* %52, {}* %53, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest103 unwind label %cleanup-lpad

normal-dest103:                                   ; preds = %normal-dest96
  %.elt136 = extractvalue { {}*, i64 } %54, 0
  %.elt138 = extractvalue { {}*, i64 } %54, 1
  %cond109 = icmp eq i64 %.elt138, 0
  %55 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %format-arg-148617.2 = select i1 %cond109, {}* %55, {}* %.elt136
  br label %tag3
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.11"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !49 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %normal-dest77, %tag2
  %format-arg-148599.0 = phi {}* [ %format-arg-148599.1, %tag2 ], [ %format-arg-148599.2, %normal-dest77 ]
  %9 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 339), align 8
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest22 unwind label %cleanup-lpad

tag1:                                             ; preds = %tag2
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest70 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest90, %process-rest-argument
  %13 = phi {}* [ %21, %process-rest-argument ], [ %51, %normal-dest90 ]
  %format-arg-148598.0 = phi {}* [ %format-arg-148598.1126, %process-rest-argument ], [ %format-arg-148598.2, %normal-dest90 ]
  %14 = icmp eq {}* %G148602.0, %13
  br i1 %14, label %tag1, label %tag

tag3:                                             ; preds = %process-rest-argument
  %15 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest83 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %normal-dest83, %tag3, %normal-dest70, %tag1, %normal-dest55, %normal-dest49, %normal-dest42, %normal-dest36, %normal-dest29, %normal-dest25, %normal-dest22, %tag, %error
  %17 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %17

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-cont.thread, label %opt-cont

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-cont.thread:                                  ; preds = %continue
  %19 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont:                                         ; preds = %continue
  %rem-nargs8 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-19 = add i64 %rem-nargs8, -1
  store i64 %rem-nargs-19, i64* %"remaining-nargs*", align 8
  %vaarg10 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args15 = icmp sgt i64 %nargs, 2
  br i1 %enough-given-args15, label %opt-arg12, label %opt-cont.opt-init13_crit_edge

opt-cont.opt-init13_crit_edge:                    ; preds = %opt-cont
  %.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-arg12:                                        ; preds = %opt-cont
  %rem-nargs16 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-117 = add i64 %rem-nargs16, -1
  store i64 %rem-nargs-117, i64* %"remaining-nargs*", align 8
  %vaarg18 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-cont.thread, %opt-cont.opt-init13_crit_edge, %opt-arg12
  %format-arg-148598.1126 = phi {}* [ %vaarg10, %opt-arg12 ], [ undef, %opt-cont.thread ], [ %vaarg10, %opt-cont.opt-init13_crit_edge ]
  %G148603.0124 = phi {}* [ %18, %opt-arg12 ], [ %19, %opt-cont.thread ], [ %18, %opt-cont.opt-init13_crit_edge ]
  %format-arg-148599.1 = phi {}* [ %vaarg18, %opt-arg12 ], [ undef, %opt-cont.thread ], [ undef, %opt-cont.opt-init13_crit_edge ]
  %G148602.0 = phi {}* [ %18, %opt-arg12 ], [ %19, %opt-cont.thread ], [ %.pre, %opt-cont.opt-init13_crit_edge ]
  %20 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %22 = icmp eq {}* %G148603.0124, %21
  br i1 %22, label %tag3, label %tag2

normal-dest22:                                    ; preds = %tag
  %ptrtoint = ptrtoint {}* %10 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %10, i64 2, {}* %format-arg-148598.0, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest25 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %normal-dest22
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 131), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest29 unwind label %cleanup-lpad

normal-dest29:                                    ; preds = %normal-dest25
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 348), align 16
  %ptrtoint30 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint31 = add i64 %ptrtoint30, 7
  %entry-point-addr32 = inttoptr i64 %entry-point-addr-uint31 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point33 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr32, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point33({}* %25, i64 2, {}* %26, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest36 unwind label %cleanup-lpad

normal-dest36:                                    ; preds = %normal-dest29
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 339), align 8
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest42 unwind label %cleanup-lpad

normal-dest42:                                    ; preds = %normal-dest36
  %ptrtoint43 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %29, i64 2, {}* %format-arg-148599.0, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %normal-dest42
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 137), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %ptrtoint56 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %32, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %34 = insertvalue { {}*, i64 } undef, {}* %20, 0
  %35 = insertvalue { {}*, i64 } %34, i64 1, 1
  ret { {}*, i64 } %35

normal-dest70:                                    ; preds = %tag1
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  %37 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 347), align 8
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  %ptrtoint71 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint72 = add i64 %ptrtoint71, 7
  %entry-point-addr73 = inttoptr i64 %entry-point-addr-uint72 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point74 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr73, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point74({}* %12, i64 7, {}* %36, {}* %37, {}* %38, {}* %39, {}* %40, {}* %41, {}* inttoptr (i64 16 to {}*))
          to label %normal-dest77 unwind label %cleanup-lpad

normal-dest77:                                    ; preds = %normal-dest70
  %.elt115 = extractvalue { {}*, i64 } %42, 0
  %.elt117 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt117, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %format-arg-148599.2 = select i1 %cond, {}* %43, {}* %.elt115
  br label %tag

normal-dest83:                                    ; preds = %tag3
  %44 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  %45 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %46 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %47 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %48 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 347), align 8
  %49 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  %ptrtoint84 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint85 = add i64 %ptrtoint84, 7
  %entry-point-addr86 = inttoptr i64 %entry-point-addr-uint85 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point87 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr86, align 8
  %50 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point87({}* %16, i64 7, {}* %44, {}* %45, {}* %46, {}* %47, {}* %48, {}* %49, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest90 unwind label %cleanup-lpad

normal-dest90:                                    ; preds = %normal-dest83
  %.elt119 = extractvalue { {}*, i64 } %50, 0
  %.elt121 = extractvalue { {}*, i64 } %50, 1
  %cond96 = icmp eq i64 %.elt121, 0
  %51 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %format-arg-148598.2 = select i1 %cond96, {}* %51, {}* %.elt119
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.12"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !50 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %normal-dest40, %process-rest-argument
  %format-arg-148562.0 = phi {}* [ %format-arg-148562.1, %process-rest-argument ], [ %format-arg-148562.2, %normal-dest40 ]
  %9 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 339), align 8
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest11 unwind label %cleanup-lpad

tag1:                                             ; preds = %process-rest-argument
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest33 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %normal-dest33, %tag1, %normal-dest18, %normal-dest14, %normal-dest11, %tag, %error
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %13

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-init, label %opt-arg

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-arg:                                          ; preds = %continue
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %rem-nargs6 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-17 = add i64 %rem-nargs6, -1
  store i64 %rem-nargs-17, i64* %"remaining-nargs*", align 8
  %vaarg8 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

opt-init:                                         ; preds = %continue
  %15 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-arg, %opt-init
  %format-arg-148562.1 = phi {}* [ %vaarg8, %opt-arg ], [ undef, %opt-init ]
  %G148565.0 = phi {}* [ %14, %opt-arg ], [ %15, %opt-init ]
  %16 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %18 = icmp eq {}* %G148565.0, %17
  br i1 %18, label %tag1, label %tag

normal-dest11:                                    ; preds = %tag
  %ptrtoint = ptrtoint {}* %10 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %19 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %10, i64 2, {}* %format-arg-148562.0, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest14 unwind label %cleanup-lpad

normal-dest14:                                    ; preds = %normal-dest11
  %20 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 131), align 8
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest18 unwind label %cleanup-lpad

normal-dest18:                                    ; preds = %normal-dest14
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 361), align 8
  %ptrtoint19 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint20 = add i64 %ptrtoint19, 7
  %entry-point-addr21 = inttoptr i64 %entry-point-addr-uint20 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point22 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr21, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point22({}* %21, i64 2, {}* %22, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest25 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %normal-dest18
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %24 = insertvalue { {}*, i64 } undef, {}* %16, 0
  %25 = insertvalue { {}*, i64 } %24, i64 1, 1
  ret { {}*, i64 } %25

normal-dest33:                                    ; preds = %tag1
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 360), align 16
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  %ptrtoint34 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint35 = add i64 %ptrtoint34, 7
  %entry-point-addr36 = inttoptr i64 %entry-point-addr-uint35 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point37 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr36, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point37({}* %12, i64 7, {}* %26, {}* %27, {}* %28, {}* %29, {}* %30, {}* %31, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest40 unwind label %cleanup-lpad

normal-dest40:                                    ; preds = %normal-dest33
  %.elt55 = extractvalue { {}*, i64 } %32, 0
  %.elt57 = extractvalue { {}*, i64 } %32, 1
  %cond = icmp eq i64 %.elt57, 0
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %format-arg-148562.2 = select i1 %cond, {}* %33, {}* %.elt55
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.13"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !51 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %normal-dest103, %tag2
  %format-arg-148523.0 = phi {}* [ %format-arg-148523.1, %tag2 ], [ %format-arg-148523.2, %normal-dest103 ]
  %9 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 134), align 16
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest22 unwind label %cleanup-lpad

tag1:                                             ; preds = %process-rest-argument
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest83 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest90, %process-rest-argument
  %13 = phi {}* [ %21, %process-rest-argument ], [ %47, %normal-dest90 ]
  %format-arg-148522.0 = phi {}* [ %format-arg-148522.1143, %process-rest-argument ], [ %format-arg-148522.2, %normal-dest90 ]
  %14 = icmp eq {}* %G148526.0, %13
  br i1 %14, label %tag3, label %tag

tag3:                                             ; preds = %tag2
  %15 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest96 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %normal-dest96, %tag3, %normal-dest83, %tag1, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %normal-dest42, %normal-dest36, %normal-dest29, %normal-dest25, %normal-dest22, %tag, %error
  %17 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %17

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-cont.thread, label %opt-cont

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-cont.thread:                                  ; preds = %continue
  %19 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont:                                         ; preds = %continue
  %rem-nargs8 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-19 = add i64 %rem-nargs8, -1
  store i64 %rem-nargs-19, i64* %"remaining-nargs*", align 8
  %vaarg10 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args15 = icmp sgt i64 %nargs, 2
  br i1 %enough-given-args15, label %opt-arg12, label %opt-cont.opt-init13_crit_edge

opt-cont.opt-init13_crit_edge:                    ; preds = %opt-cont
  %.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-arg12:                                        ; preds = %opt-cont
  %rem-nargs16 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-117 = add i64 %rem-nargs16, -1
  store i64 %rem-nargs-117, i64* %"remaining-nargs*", align 8
  %vaarg18 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-cont.thread, %opt-cont.opt-init13_crit_edge, %opt-arg12
  %format-arg-148522.1143 = phi {}* [ %vaarg10, %opt-arg12 ], [ undef, %opt-cont.thread ], [ %vaarg10, %opt-cont.opt-init13_crit_edge ]
  %G148527.0141 = phi {}* [ %18, %opt-arg12 ], [ %19, %opt-cont.thread ], [ %18, %opt-cont.opt-init13_crit_edge ]
  %format-arg-148523.1 = phi {}* [ %vaarg18, %opt-arg12 ], [ undef, %opt-cont.thread ], [ undef, %opt-cont.opt-init13_crit_edge ]
  %G148526.0 = phi {}* [ %18, %opt-arg12 ], [ %19, %opt-cont.thread ], [ %.pre, %opt-cont.opt-init13_crit_edge ]
  %20 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %22 = icmp eq {}* %G148527.0141, %21
  br i1 %22, label %tag1, label %tag2

normal-dest22:                                    ; preds = %tag
  %ptrtoint = ptrtoint {}* %10 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %10, i64 2, {}* %format-arg-148522.0, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest25 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %normal-dest22
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 131), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest29 unwind label %cleanup-lpad

normal-dest29:                                    ; preds = %normal-dest25
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 322), align 16
  %ptrtoint30 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint31 = add i64 %ptrtoint30, 7
  %entry-point-addr32 = inttoptr i64 %entry-point-addr-uint31 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point33 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr32, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point33({}* %25, i64 2, {}* %26, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest36 unwind label %cleanup-lpad

normal-dest36:                                    ; preds = %normal-dest29
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 134), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest42 unwind label %cleanup-lpad

normal-dest42:                                    ; preds = %normal-dest36
  %ptrtoint43 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %29, i64 2, {}* %format-arg-148523.0, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %normal-dest42
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 131), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 323), align 8
  %ptrtoint56 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %32, i64 2, {}* %33, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 137), align 8
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %ptrtoint69 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %36, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %38 = insertvalue { {}*, i64 } undef, {}* %20, 0
  %39 = insertvalue { {}*, i64 } %38, i64 1, 1
  ret { {}*, i64 } %39

normal-dest83:                                    ; preds = %tag1
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %44 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 321), align 8
  %45 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  %ptrtoint84 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint85 = add i64 %ptrtoint84, 7
  %entry-point-addr86 = inttoptr i64 %entry-point-addr-uint85 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point87 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr86, align 8
  %46 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point87({}* %12, i64 7, {}* %40, {}* %41, {}* %42, {}* %43, {}* %44, {}* %45, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest90 unwind label %cleanup-lpad

normal-dest90:                                    ; preds = %normal-dest83
  %.elt136 = extractvalue { {}*, i64 } %46, 0
  %.elt138 = extractvalue { {}*, i64 } %46, 1
  %cond109 = icmp eq i64 %.elt138, 0
  %47 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %format-arg-148522.2 = select i1 %cond109, {}* %47, {}* %.elt136
  br label %tag2

normal-dest96:                                    ; preds = %tag3
  %48 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  %49 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %50 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %51 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %52 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 321), align 8
  %53 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  %ptrtoint97 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint98 = add i64 %ptrtoint97, 7
  %entry-point-addr99 = inttoptr i64 %entry-point-addr-uint98 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point100 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr99, align 8
  %54 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point100({}* %16, i64 7, {}* %48, {}* %49, {}* %50, {}* %51, {}* %52, {}* %53, {}* inttoptr (i64 16 to {}*))
          to label %normal-dest103 unwind label %cleanup-lpad

normal-dest103:                                   ; preds = %normal-dest96
  %.elt132 = extractvalue { {}*, i64 } %54, 0
  %.elt134 = extractvalue { {}*, i64 } %54, 1
  %cond = icmp eq i64 %.elt134, 0
  %55 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %format-arg-148523.2 = select i1 %cond, {}* %55, {}* %.elt132
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.14"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !52 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %normal-dest90, %process-rest-argument
  %9 = phi {}* [ %21, %process-rest-argument ], [ %51, %normal-dest90 ]
  %format-arg-148579.0 = phi {}* [ %format-arg-148579.1126, %process-rest-argument ], [ %format-arg-148579.2, %normal-dest90 ]
  %10 = icmp eq {}* %G148583.0, %9
  br i1 %10, label %tag2, label %tag1

tag1:                                             ; preds = %normal-dest77, %tag
  %format-arg-148580.0 = phi {}* [ %format-arg-148580.1, %tag ], [ %format-arg-148580.2, %normal-dest77 ]
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 339), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest22 unwind label %cleanup-lpad

tag2:                                             ; preds = %tag
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest70 unwind label %cleanup-lpad

tag3:                                             ; preds = %process-rest-argument
  %15 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest83 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %normal-dest83, %tag3, %normal-dest70, %tag2, %normal-dest55, %normal-dest49, %normal-dest42, %normal-dest36, %normal-dest29, %normal-dest25, %normal-dest22, %tag1, %error
  %17 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %17

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-cont.thread, label %opt-cont

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-cont.thread:                                  ; preds = %continue
  %19 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont:                                         ; preds = %continue
  %rem-nargs8 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-19 = add i64 %rem-nargs8, -1
  store i64 %rem-nargs-19, i64* %"remaining-nargs*", align 8
  %vaarg10 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args15 = icmp sgt i64 %nargs, 2
  br i1 %enough-given-args15, label %opt-arg12, label %opt-cont.opt-init13_crit_edge

opt-cont.opt-init13_crit_edge:                    ; preds = %opt-cont
  %.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-arg12:                                        ; preds = %opt-cont
  %rem-nargs16 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-117 = add i64 %rem-nargs16, -1
  store i64 %rem-nargs-117, i64* %"remaining-nargs*", align 8
  %vaarg18 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-cont.thread, %opt-cont.opt-init13_crit_edge, %opt-arg12
  %format-arg-148579.1126 = phi {}* [ %vaarg10, %opt-arg12 ], [ undef, %opt-cont.thread ], [ %vaarg10, %opt-cont.opt-init13_crit_edge ]
  %G148584.0124 = phi {}* [ %18, %opt-arg12 ], [ %19, %opt-cont.thread ], [ %18, %opt-cont.opt-init13_crit_edge ]
  %format-arg-148580.1 = phi {}* [ %vaarg18, %opt-arg12 ], [ undef, %opt-cont.thread ], [ undef, %opt-cont.opt-init13_crit_edge ]
  %G148583.0 = phi {}* [ %18, %opt-arg12 ], [ %19, %opt-cont.thread ], [ %.pre, %opt-cont.opt-init13_crit_edge ]
  %20 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %22 = icmp eq {}* %G148584.0124, %21
  br i1 %22, label %tag3, label %tag

normal-dest22:                                    ; preds = %tag1
  %ptrtoint = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 2, {}* %format-arg-148579.0, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest25 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %normal-dest22
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 131), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest29 unwind label %cleanup-lpad

normal-dest29:                                    ; preds = %normal-dest25
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 355), align 8
  %ptrtoint30 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint31 = add i64 %ptrtoint30, 7
  %entry-point-addr32 = inttoptr i64 %entry-point-addr-uint31 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point33 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr32, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point33({}* %25, i64 2, {}* %26, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest36 unwind label %cleanup-lpad

normal-dest36:                                    ; preds = %normal-dest29
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 134), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest42 unwind label %cleanup-lpad

normal-dest42:                                    ; preds = %normal-dest36
  %ptrtoint43 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %29, i64 2, {}* %format-arg-148580.0, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %normal-dest42
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 137), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %ptrtoint56 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %32, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %34 = insertvalue { {}*, i64 } undef, {}* %20, 0
  %35 = insertvalue { {}*, i64 } %34, i64 1, 1
  ret { {}*, i64 } %35

normal-dest70:                                    ; preds = %tag2
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  %37 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 354), align 16
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  %ptrtoint71 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint72 = add i64 %ptrtoint71, 7
  %entry-point-addr73 = inttoptr i64 %entry-point-addr-uint72 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point74 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr73, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point74({}* %14, i64 7, {}* %36, {}* %37, {}* %38, {}* %39, {}* %40, {}* %41, {}* inttoptr (i64 16 to {}*))
          to label %normal-dest77 unwind label %cleanup-lpad

normal-dest77:                                    ; preds = %normal-dest70
  %.elt115 = extractvalue { {}*, i64 } %42, 0
  %.elt117 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt117, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %format-arg-148580.2 = select i1 %cond, {}* %43, {}* %.elt115
  br label %tag1

normal-dest83:                                    ; preds = %tag3
  %44 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  %45 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %46 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %47 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %48 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 354), align 16
  %49 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  %ptrtoint84 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint85 = add i64 %ptrtoint84, 7
  %entry-point-addr86 = inttoptr i64 %entry-point-addr-uint85 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point87 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr86, align 8
  %50 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point87({}* %16, i64 7, {}* %44, {}* %45, {}* %46, {}* %47, {}* %48, {}* %49, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest90 unwind label %cleanup-lpad

normal-dest90:                                    ; preds = %normal-dest83
  %.elt119 = extractvalue { {}*, i64 } %50, 0
  %.elt121 = extractvalue { {}*, i64 } %50, 1
  %cond96 = icmp eq i64 %.elt121, 0
  %51 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %format-arg-148579.2 = select i1 %cond96, {}* %51, {}* %.elt119
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^228^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !53 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^228^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest67, %normal-dest17, %header-check-br
  %G149871.0 = phi {}* [ %18, %header-check-br ], [ %G149871.1, %normal-dest17 ], [ %G149871.2, %normal-dest67 ]
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 461), align 8
  %ptrtoint20 = ptrtoint {}* %G149871.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G149871.0, i64 2, {}* %"closure->YAS=ALLE_OBJEKTE", {}* %11, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest10, %header-check-br73
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest60 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %tag3, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag2, %normal-dest13, %maybe-more-tests81, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 461), align 8
  %"closure->YAS=ALLE_OBJEKTE" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=ALLE_OBJEKTE^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=ALLE_OBJEKTE^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8063, i64 228, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br73

normal-dest13:                                    ; preds = %maybe-more-tests81
  %ptrtoint14 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149871.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag2

normal-dest26:                                    ; preds = %tag2
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %ptrtoint33 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %24, i64 2, {}* %"closure->YAS=ALLE_OBJEKTE", {}* %25, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 463), align 8
  %ptrtoint46 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %28, i64 2, {}* %"closure->YAS=ALLE_OBJEKTE", {}* %29, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %31, {}* inttoptr (i64 912 to {}*))
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 461), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %33 = insertvalue { {}*, i64 } undef, {}* %32, 0
  %34 = insertvalue { {}*, i64 } %33, i64 1, 1
  ret { {}*, i64 } %34

normal-dest60:                                    ; preds = %tag3
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %37 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 460), align 16
  %ptrtoint61 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %14, i64 5, {}* %35, {}* %36, {}* %18, {}* %37, {}* %38)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt = extractvalue { {}*, i64 } %39, 0
  %.elt84 = extractvalue { {}*, i64 } %39, 1
  %cond = icmp eq i64 %.elt84, 0
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149871.2 = select i1 %cond, {}* %40, {}* %.elt
  br label %tag2

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag3

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest13 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=ALLE_OBJEKTE^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !54 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=ALLE_OBJEKTE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 4), align 16
  %13 = invoke {}* @cc_safe_symbol_value({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %14 = insertvalue { {}*, i64 } undef, {}* %13, 0
  %15 = insertvalue { {}*, i64 } %14, i64 1, 1
  ret { {}*, i64 } %15
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^231^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !55 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^231^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest54, %header-check-br
  %G149929.0 = phi {}* [ %18, %header-check-br ], [ %G149929.1, %normal-dest54 ], [ %G149929.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 493), align 8
  %ptrtoint13 = ptrtoint {}* %G149929.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G149929.0, i64 2, {}* %"closure->YAS=NEUE_KLASSE", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest10, %header-check-br59
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest47 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests67, %normal-dest47, %tag1, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 493), align 8
  %"closure->YAS=NEUE_KLASSE" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=NEUE_KLASSE^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=NEUE_KLASSE^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8109, i64 231, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br59

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 495), align 8
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->YAS=NEUE_KLASSE", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 500), align 16
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->YAS=NEUE_KLASSE", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 1048 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 493), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %tag1
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 492), align 16
  %ptrtoint48 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %14, i64 5, {}* %33, {}* %34, {}* %18, {}* %35, {}* %36)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt = extractvalue { {}*, i64 } %37, 0
  %.elt84 = extractvalue { {}*, i64 } %37, 1
  %cond = icmp eq i64 %.elt84, 0
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149929.1 = select i1 %cond, {}* %38, {}* %.elt
  br label %tag

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %39 = icmp ult i64 %.off106, 5
  br i1 %39, label %maybe-more-tests67, label %tag1

maybe-more-tests67:                               ; preds = %header-check-br59
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %maybe-more-tests67
  %ptrtoint70 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %41, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G149929.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=NEUE_KLASSE^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !56 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %cond = icmp eq i64 %nargs, 3
  br i1 %cond, label %case-opt1-bb, label %case-opt0-bb

tag43.backedge:                                   ; preds = %tag8, %normal-dest199
  %10 = phi {}* [ %.pre, %tag8 ], [ %110, %normal-dest199 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %21, %tag8 ], [ %"%DOLIST-VAR.2", %normal-dest199 ]
  %11 = icmp eq {}* %"%DOLIST-VAR.0.be", %10
  br i1 %11, label %tag1, label %tag2

tag1:                                             ; preds = %tag45, %tag43.backedge, %normal-dest185
  %12 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 35), align 8
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %14 = invoke {}* @cc_safe_setfdefinition({}* %13)
          to label %normal-dest93 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag2:                                             ; preds = %tag2.preheader, %tag43.backedge
  %.val757 = phi {}* [ %10, %tag43.backedge ], [ %103, %tag2.preheader ]
  %"%DOLIST-VAR.0771" = phi {}* [ %"%DOLIST-VAR.0.be", %tag43.backedge ], [ %"%DOLIST-VAR.1", %tag2.preheader ]
  %15 = ptrtoint {}* %"%DOLIST-VAR.0771" to i64
  %tag-only100647 = and i64 %15, 7
  %consp-test = icmp eq i64 %tag-only100647, 3
  %.val = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G150129.0 = select i1 %consp-test, {}* %.val, {}* %.val757
  %16 = icmp eq {}* %G150129.0, %.val757
  br i1 %16, label %tag54, label %tag31

tag5:                                             ; preds = %normal-dest93, %header-check-br499
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest106 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag8:                                             ; preds = %normal-dest532
  %19 = add i64 %15, 5
  %20 = inttoptr i64 %19 to {}**
  %21 = load {}*, {}** %20, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %tag43.backedge

tag9:                                             ; preds = %tag78
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 472), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest118 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag10:                                            ; preds = %normal-dest516, %header-check-br488
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest131 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag12:                                            ; preds = %tag37, %tag36.backedge, %normal-dest374, %normal-dest587
  %return-value.sroa.40.0 = phi i64 [ %.elt619, %normal-dest587 ], [ 1, %normal-dest374 ], [ 1, %tag36.backedge ], [ 1, %tag37 ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt617, %normal-dest587 ], [ %133, %normal-dest374 ], [ %39, %tag37 ], [ %.in, %tag36.backedge ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %26 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %27 = insertvalue { {}*, i64 } %26, i64 %return-value.sroa.40.0, 1
  ret { {}*, i64 } %27

tag14:                                            ; preds = %normal-dest548
  %28 = add i64 %68, 5
  %29 = inttoptr i64 %28 to {}**
  %30 = load {}*, {}** %29, align 8
  %.pre772 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %tag36.backedge

tag36.backedge:                                   ; preds = %tag14, %normal-dest564
  %.in = phi {}* [ %.pre772, %tag14 ], [ %181, %normal-dest564 ]
  %"%DOLIST-VAR145.0.be" = phi {}* [ %30, %tag14 ], [ %"%DOLIST-VAR145.2", %normal-dest564 ]
  %31 = icmp eq {}* %"%DOLIST-VAR145.0.be", %.in
  br i1 %31, label %tag12, label %tag82

tag19:                                            ; preds = %normal-dest118, %normal-dest476, %normal-dest333
  %KLASSE.0 = phi {}* [ %farg1, %normal-dest333 ], [ %158, %normal-dest476 ], [ %farg1, %normal-dest118 ]
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 480), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest177 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag21:                                            ; preds = %tag45
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest192 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag31:                                            ; preds = %tag2
  %36 = add i64 %15, -3
  %37 = inttoptr i64 %36 to {}**
  %38 = load {}*, {}** %37, align 8
  br label %tag71

tag37:                                            ; preds = %normal-dest548
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %40 = icmp eq {}* %"%DOLIST-VAR145.0770", %39
  %.val763 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G150021.0 = select i1 %40, {}* %.val763, {}* %39
  %41 = icmp eq {}* %G150021.0, %39
  br i1 %41, label %tag77, label %tag12

tag44:                                            ; preds = %tag78
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 476), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest306 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag45:                                            ; preds = %normal-dest532
  %44 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %45 = icmp eq {}* %"%DOLIST-VAR.0771", %44
  %.val758 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G150088.0 = select i1 %45, {}* %.val758, {}* %44
  %46 = icmp eq {}* %G150088.0, %44
  br i1 %46, label %tag21, label %tag1

tag46:                                            ; preds = %tag82
  %47 = add i64 %68, -3
  %48 = inttoptr i64 %47 to {}**
  %49 = load {}*, {}** %48, align 8
  br label %tag74

tag48:                                            ; preds = %normal-dest450, %normal-dest110, %header-check-br
  %G150058.0 = phi {}* [ %14, %header-check-br ], [ %G150058.1, %normal-dest110 ], [ %G150058.2, %normal-dest450 ]
  %ptrtoint353 = ptrtoint {}* %G150058.0 to i64
  %entry-point-addr-uint354 = add i64 %ptrtoint353, 7
  %entry-point-addr355 = inttoptr i64 %entry-point-addr-uint354 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point356 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr355, align 8
  %50 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point356({}* %G150058.0, i64 3, {}* %KLASSE.0, {}* %farg0, {}* %12, {}* null)
          to label %normal-dest359 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag49:                                            ; preds = %tag82
  %51 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %52 = invoke {}* @cc_safe_fdefinition({}* %51)
          to label %normal-dest381 unwind label %cleanup-lpad.loopexit

tag52:                                            ; preds = %normal-dest279
  %53 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 466), align 16
  %54 = invoke {}* @cc_safe_fdefinition({}* %53)
          to label %normal-dest395 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag54:                                            ; preds = %tag2
  %55 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %56 = invoke {}* @cc_safe_fdefinition({}* %55)
          to label %normal-dest422 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag61:                                            ; preds = %normal-dest415
  %57 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 468), align 16
  %58 = invoke {}* @cc_safe_fdefinition({}* %57)
          to label %normal-dest463 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag71:                                            ; preds = %normal-dest429, %tag31
  %59 = phi {}* [ %.val757, %tag31 ], [ %152, %normal-dest429 ]
  %S.0 = phi {}* [ %38, %tag31 ], [ %S.1, %normal-dest429 ]
  %60 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %61 = invoke {}* @cc_safe_setfdefinition({}* %60)
          to label %normal-dest516 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag73:                                            ; preds = %header-check-br517, %normal-dest299, %normal-dest138
  %G150095.0 = phi {}* [ %G150095.1, %normal-dest138 ], [ %G150095.2, %normal-dest299 ], [ %61, %header-check-br517 ]
  %ptrtoint526 = ptrtoint {}* %G150095.0 to i64
  %entry-point-addr-uint527 = add i64 %ptrtoint526, 7
  %entry-point-addr528 = inttoptr i64 %entry-point-addr-uint527 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point529 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr528, align 8
  %62 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point529({}* %G150095.0, i64 3, {}* %59, {}* %farg0, {}* %S.0, {}* null)
          to label %normal-dest532 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag74:                                            ; preds = %normal-dest388, %tag46
  %S352.0 = phi {}* [ %49, %tag46 ], [ %S352.1, %normal-dest388 ]
  %63 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 478), align 16
  %64 = invoke {}* @cc_safe_fdefinition({}* %63)
          to label %normal-dest541 unwind label %cleanup-lpad.loopexit

tag77:                                            ; preds = %tag37
  %65 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %66 = invoke {}* @cc_safe_fdefinition({}* %65)
          to label %normal-dest557 unwind label %cleanup-lpad.loopexit

tag78:                                            ; preds = %normal-dest415
  %67 = icmp eq {}* %nach_der_klasse.0, %145
  br i1 %67, label %tag9, label %tag44

tag82:                                            ; preds = %tag82.preheader, %tag36.backedge
  %.val762 = phi {}* [ %.in, %tag36.backedge ], [ %133, %tag82.preheader ]
  %"%DOLIST-VAR145.0770" = phi {}* [ %"%DOLIST-VAR145.0.be", %tag36.backedge ], [ %"%DOLIST-VAR145.1", %tag82.preheader ]
  %68 = ptrtoint {}* %"%DOLIST-VAR145.0770" to i64
  %tag-only577681 = and i64 %68, 7
  %consp-test578 = icmp eq i64 %tag-only577681, 3
  %.val761 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G150049.0 = select i1 %consp-test578, {}* %.val761, {}* %.val762
  %69 = icmp eq {}* %G150049.0, %.val762
  br i1 %69, label %tag49, label %tag46

tag83:                                            ; preds = %normal-dest279
  %70 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 468), align 16
  %71 = invoke {}* @cc_safe_fdefinition({}* %70)
          to label %normal-dest580 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

cleanup-lpad.loopexit:                            ; preds = %tag49, %normal-dest381, %tag74, %normal-dest541, %tag77, %normal-dest557
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit:          ; preds = %tag73, %tag71, %normal-dest422, %tag54, %normal-dest292, %maybe-more-tests496, %normal-dest192, %tag21, %normal-dest131, %tag10
  %lpad.loopexit767 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %79, %76, %normal-dest580, %tag83, %normal-dest476, %normal-dest470, %normal-dest463, %tag61, %normal-dest443, %maybe-more-tests507, %normal-dest408, %normal-dest402, %normal-dest395, %tag52, %normal-dest367, %normal-dest365, %normal-dest359, %tag48, %normal-dest333, %normal-dest327, %normal-dest315, %normal-dest308, %normal-dest306, %tag44, %normal-dest272, %req-bb, %normal-dest178, %normal-dest177, %tag19, %normal-dest118, %tag9, %normal-dest106, %tag5, %tag1
  %lpad.loopexit.split-lp768 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit767, %cleanup-lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp768, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

req-bb:                                           ; preds = %77, %case-opt1-bb
  %G149913.0 = phi {}* [ %80, %case-opt1-bb ], [ %9, %77 ]
  %72 = icmp eq {}* %G149913.0, %9
  %nach_der_klasse.0 = select i1 %72, {}* %9, {}* %farg2
  %73 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 464), align 16
  %74 = invoke {}* @cc_safe_fdefinition({}* %73)
          to label %normal-dest272 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

case-opt0-bb:                                     ; preds = %entry
  %75 = icmp ult i64 %nargs, 2
  br i1 %75, label %76, label %77

; <label>:76:                                     ; preds = %case-opt0-bb
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=NEUE_KLASSE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %76
  unreachable

; <label>:77:                                     ; preds = %case-opt0-bb
  %78 = icmp ugt i64 %nargs, 3
  br i1 %78, label %79, label %req-bb

; <label>:79:                                     ; preds = %77
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 3, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=NEUE_KLASSE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc742 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc742:                                        ; preds = %79
  unreachable

case-opt1-bb:                                     ; preds = %entry
  %80 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  br label %req-bb

normal-dest93:                                    ; preds = %tag1
  %ptrtoint = ptrtoint {}* %14 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag5

header-check-br:                                  ; preds = %normal-dest93
  %irc-bit-cast94 = bitcast {}* %14 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast94, i64 -9
  %irc-bit-cast95 = bitcast i8* %gep to i64*
  %81 = load i64, i64* %irc-bit-cast95, align 8
  %.off765 = add i64 %81, -913
  %82 = icmp ult i64 %.off765, 85
  br i1 %82, label %tag48, label %header-check-br499

normal-dest106:                                   ; preds = %tag5
  %83 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %84 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %85 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %86 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 483), align 8
  %ptrtoint107 = ptrtoint {}* %18 to i64
  %entry-point-addr-uint = add i64 %ptrtoint107, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %87 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %18, i64 5, {}* %83, {}* %84, {}* %14, {}* %85, {}* %86)
          to label %normal-dest110 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest110:                                   ; preds = %normal-dest106
  %.elt670 = extractvalue { {}*, i64 } %87, 0
  %.elt672 = extractvalue { {}*, i64 } %87, 1
  %cond604 = icmp eq i64 %.elt672, 0
  %88 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150058.1 = select i1 %cond604, {}* %88, {}* %.elt670
  br label %tag48

normal-dest118:                                   ; preds = %tag9
  %89 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 39), align 8
  %90 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 474), align 16
  %91 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 114), align 16
  %ptrtoint119 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint120 = add i64 %ptrtoint119, 7
  %entry-point-addr121 = inttoptr i64 %entry-point-addr-uint120 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point122 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr121, align 8
  %92 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point122({}* %23, i64 5, {}* %farg1, {}* %89, {}* %farg0, {}* %90, {}* %91)
          to label %tag19 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest131:                                   ; preds = %tag10
  %93 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %94 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %95 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %96 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 482), align 16
  %ptrtoint132 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint133 = add i64 %ptrtoint132, 7
  %entry-point-addr134 = inttoptr i64 %entry-point-addr-uint133 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point135 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr134, align 8
  %97 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point135({}* %25, i64 5, {}* %93, {}* %94, {}* %61, {}* %95, {}* %96)
          to label %normal-dest138 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest138:                                   ; preds = %normal-dest131
  %.elt649 = extractvalue { {}*, i64 } %97, 0
  %.elt651 = extractvalue { {}*, i64 } %97, 1
  %cond599 = icmp eq i64 %.elt651, 0
  %98 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150095.1 = select i1 %cond599, {}* %98, {}* %.elt649
  br label %tag73

normal-dest177:                                   ; preds = %tag19
  %99 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 37), align 8
  %100 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 30), align 16
  %101 = invoke {}* @cc_safe_symbol_value({}* %100)
          to label %normal-dest178 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest178:                                   ; preds = %normal-dest177
  %ptrtoint179 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint180 = add i64 %ptrtoint179, 7
  %entry-point-addr181 = inttoptr i64 %entry-point-addr-uint180 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point182 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr181, align 8
  %102 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point182({}* %33, i64 2, {}* %99, {}* %101, {}* null, {}* null)
          to label %normal-dest185 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest185:                                   ; preds = %normal-dest178
  %.elt644 = extractvalue { {}*, i64 } %102, 0
  %.elt646 = extractvalue { {}*, i64 } %102, 1
  %cond597 = icmp eq i64 %.elt646, 0
  %103 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %"%DOLIST-VAR.1" = select i1 %cond597, {}* %103, {}* %.elt644
  %104 = icmp eq {}* %"%DOLIST-VAR.1", %103
  br i1 %104, label %tag1, label %tag2.preheader

tag2.preheader:                                   ; preds = %normal-dest185
  br label %tag2

normal-dest192:                                   ; preds = %tag21
  %105 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %106 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %107 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %108 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint193 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint194 = add i64 %ptrtoint193, 7
  %entry-point-addr195 = inttoptr i64 %entry-point-addr-uint194 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point196 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr195, align 8
  %109 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point196({}* %35, i64 5, {}* %105, {}* %106, {}* %"%DOLIST-VAR.0771", {}* %107, {}* %108)
          to label %normal-dest199 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest199:                                   ; preds = %normal-dest192
  %.elt658 = extractvalue { {}*, i64 } %109, 0
  %.elt660 = extractvalue { {}*, i64 } %109, 1
  %cond600 = icmp eq i64 %.elt660, 0
  %110 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %"%DOLIST-VAR.2" = select i1 %cond600, {}* %110, {}* %.elt658
  br label %tag43.backedge

normal-dest272:                                   ; preds = %req-bb
  %ptrtoint273 = ptrtoint {}* %74 to i64
  %entry-point-addr-uint274 = add i64 %ptrtoint273, 7
  %entry-point-addr275 = inttoptr i64 %entry-point-addr-uint274 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point276 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr275, align 8
  %111 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point276({}* %74, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest279 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest279:                                   ; preds = %normal-dest272
  %.elt = extractvalue { {}*, i64 } %111, 0
  %.elt615 = extractvalue { {}*, i64 } %111, 1
  %cond594 = icmp eq i64 %.elt615, 0
  %112 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150186.0 = select i1 %cond594, {}* %112, {}* %.elt
  %113 = icmp eq {}* %G150186.0, %112
  br i1 %113, label %tag52, label %tag83

normal-dest292:                                   ; preds = %maybe-more-tests496
  %ptrtoint293 = ptrtoint {}* %168 to i64
  %entry-point-addr-uint294 = add i64 %ptrtoint293, 7
  %entry-point-addr295 = inttoptr i64 %entry-point-addr-uint294 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point296 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr295, align 8
  %114 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point296({}* %168, i64 1, {}* nonnull %61, {}* null, {}* null, {}* null)
          to label %normal-dest299 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest299:                                   ; preds = %normal-dest292
  %.elt662 = extractvalue { {}*, i64 } %114, 0
  %.elt664 = extractvalue { {}*, i64 } %114, 1
  %cond601 = icmp eq i64 %.elt664, 0
  %115 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150095.2 = select i1 %cond601, {}* %115, {}* %.elt662
  br label %tag73

normal-dest306:                                   ; preds = %tag44
  %116 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %117 = invoke {}* @cc_safe_fdefinition({}* %116)
          to label %normal-dest308 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest308:                                   ; preds = %normal-dest306
  %118 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 39), align 8
  %ptrtoint309 = ptrtoint {}* %117 to i64
  %entry-point-addr-uint310 = add i64 %ptrtoint309, 7
  %entry-point-addr311 = inttoptr i64 %entry-point-addr-uint310 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point312 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr311, align 8
  %119 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point312({}* %117, i64 2, {}* %farg1, {}* %118, {}* null, {}* null)
          to label %normal-dest315 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest315:                                   ; preds = %normal-dest308
  %.elt632 = extractvalue { {}*, i64 } %119, 0
  %.elt634 = extractvalue { {}*, i64 } %119, 1
  %cond596 = icmp eq i64 %.elt634, 0
  %120 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150163.0 = select i1 %cond596, {}* %120, {}* %.elt632
  %ptrtoint321 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint322 = add i64 %ptrtoint321, 7
  %entry-point-addr323 = inttoptr i64 %entry-point-addr-uint322 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point324 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr323, align 8
  %121 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point324({}* %43, i64 3, {}* %G150163.0, {}* %nach_der_klasse.0, {}* %farg0, {}* null)
          to label %normal-dest327 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest327:                                   ; preds = %normal-dest315
  %122 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 478), align 16
  %123 = invoke {}* @cc_safe_fdefinition({}* %122)
          to label %normal-dest333 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest333:                                   ; preds = %normal-dest327
  %124 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 39), align 8
  %125 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 114), align 16
  %ptrtoint334 = ptrtoint {}* %123 to i64
  %entry-point-addr-uint335 = add i64 %ptrtoint334, 7
  %entry-point-addr336 = inttoptr i64 %entry-point-addr-uint335 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point337 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr336, align 8
  %126 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point337({}* %123, i64 3, {}* %farg1, {}* %124, {}* %125, {}* null)
          to label %tag19 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest359:                                   ; preds = %tag48
  %127 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 480), align 16
  %128 = invoke {}* @cc_safe_fdefinition({}* %127)
          to label %normal-dest365 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest365:                                   ; preds = %normal-dest359
  %129 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 37), align 8
  %130 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 30), align 16
  %131 = invoke {}* @cc_safe_symbol_value({}* %130)
          to label %normal-dest367 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest367:                                   ; preds = %normal-dest365
  %ptrtoint368 = ptrtoint {}* %128 to i64
  %entry-point-addr-uint369 = add i64 %ptrtoint368, 7
  %entry-point-addr370 = inttoptr i64 %entry-point-addr-uint369 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point371 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr370, align 8
  %132 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point371({}* %128, i64 2, {}* %129, {}* %131, {}* null, {}* null)
          to label %normal-dest374 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest374:                                   ; preds = %normal-dest367
  %.elt678 = extractvalue { {}*, i64 } %132, 0
  %.elt680 = extractvalue { {}*, i64 } %132, 1
  %cond605 = icmp eq i64 %.elt680, 0
  %133 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %"%DOLIST-VAR145.1" = select i1 %cond605, {}* %133, {}* %.elt678
  %134 = icmp eq {}* %"%DOLIST-VAR145.1", %133
  br i1 %134, label %tag12, label %tag82.preheader

tag82.preheader:                                  ; preds = %normal-dest374
  br label %tag82

normal-dest381:                                   ; preds = %tag49
  %135 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %136 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %137 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %138 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint382 = ptrtoint {}* %52 to i64
  %entry-point-addr-uint383 = add i64 %ptrtoint382, 7
  %entry-point-addr384 = inttoptr i64 %entry-point-addr-uint383 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point385 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr384, align 8
  %139 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point385({}* %52, i64 5, {}* %135, {}* %136, {}* %"%DOLIST-VAR145.0770", {}* %137, {}* %138)
          to label %normal-dest388 unwind label %cleanup-lpad.loopexit

normal-dest388:                                   ; preds = %normal-dest381
  %.elt692 = extractvalue { {}*, i64 } %139, 0
  %.elt694 = extractvalue { {}*, i64 } %139, 1
  %cond607 = icmp eq i64 %.elt694, 0
  %140 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %S352.1 = select i1 %cond607, {}* %140, {}* %.elt692
  br label %tag74

normal-dest395:                                   ; preds = %tag52
  %ptrtoint396 = ptrtoint {}* %54 to i64
  %entry-point-addr-uint397 = add i64 %ptrtoint396, 7
  %entry-point-addr398 = inttoptr i64 %entry-point-addr-uint397 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point399 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr398, align 8
  %141 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point399({}* %54, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest402 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest402:                                   ; preds = %normal-dest395
  %142 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 281), align 8
  %143 = invoke {}* @cc_safe_fdefinition({}* %142)
          to label %normal-dest408 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest408:                                   ; preds = %normal-dest402
  %ptrtoint409 = ptrtoint {}* %143 to i64
  %entry-point-addr-uint410 = add i64 %ptrtoint409, 7
  %entry-point-addr411 = inttoptr i64 %entry-point-addr-uint410 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point412 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr411, align 8
  %144 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point412({}* %143, i64 1, {}* %farg1, {}* null, {}* null, {}* null)
          to label %normal-dest415 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest415:                                   ; preds = %normal-dest408
  %.elt628 = extractvalue { {}*, i64 } %144, 0
  %.elt630 = extractvalue { {}*, i64 } %144, 1
  %cond595 = icmp eq i64 %.elt630, 0
  %145 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150173.0 = select i1 %cond595, {}* %145, {}* %.elt628
  %146 = icmp eq {}* %G150173.0, %145
  br i1 %146, label %tag61, label %tag78

normal-dest422:                                   ; preds = %tag54
  %147 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %148 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %149 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %150 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint423 = ptrtoint {}* %56 to i64
  %entry-point-addr-uint424 = add i64 %ptrtoint423, 7
  %entry-point-addr425 = inttoptr i64 %entry-point-addr-uint424 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point426 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr425, align 8
  %151 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point426({}* %56, i64 5, {}* %147, {}* %148, {}* %"%DOLIST-VAR.0771", {}* %149, {}* %150)
          to label %normal-dest429 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest429:                                   ; preds = %normal-dest422
  %.elt666 = extractvalue { {}*, i64 } %151, 0
  %.elt668 = extractvalue { {}*, i64 } %151, 1
  %cond602 = icmp eq i64 %.elt668, 0
  %152 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %S.1 = select i1 %cond602, {}* %152, {}* %.elt666
  br label %tag71

normal-dest443:                                   ; preds = %maybe-more-tests507
  %ptrtoint444 = ptrtoint {}* %171 to i64
  %entry-point-addr-uint445 = add i64 %ptrtoint444, 7
  %entry-point-addr446 = inttoptr i64 %entry-point-addr-uint445 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point447 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr446, align 8
  %153 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point447({}* %171, i64 1, {}* nonnull %14, {}* null, {}* null, {}* null)
          to label %normal-dest450 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest450:                                   ; preds = %normal-dest443
  %.elt722 = extractvalue { {}*, i64 } %153, 0
  %.elt724 = extractvalue { {}*, i64 } %153, 1
  %cond613 = icmp eq i64 %.elt724, 0
  %154 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150058.2 = select i1 %cond613, {}* %154, {}* %.elt722
  br label %tag48

normal-dest463:                                   ; preds = %tag61
  %155 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 470), align 16
  %156 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 471), align 8
  %ptrtoint464 = ptrtoint {}* %58 to i64
  %entry-point-addr-uint465 = add i64 %ptrtoint464, 7
  %entry-point-addr466 = inttoptr i64 %entry-point-addr-uint465 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point467 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr466, align 8
  %157 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point467({}* %58, i64 3, {}* %155, {}* %156, {}* %farg1, {}* null)
          to label %normal-dest470 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest470:                                   ; preds = %normal-dest463
  %158 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 15), align 8
  %159 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 472), align 16
  %160 = invoke {}* @cc_safe_fdefinition({}* %159)
          to label %normal-dest476 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest476:                                   ; preds = %normal-dest470
  %161 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 15), align 8
  %162 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 39), align 8
  %163 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 474), align 16
  %164 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 114), align 16
  %ptrtoint477 = ptrtoint {}* %160 to i64
  %entry-point-addr-uint478 = add i64 %ptrtoint477, 7
  %entry-point-addr479 = inttoptr i64 %entry-point-addr-uint478 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point480 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr479, align 8
  %165 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point480({}* %160, i64 5, {}* %161, {}* %162, {}* %farg0, {}* %163, {}* %164)
          to label %tag19 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

header-check-br488:                               ; preds = %header-check-br517
  %.off760 = add i64 %172, -1001
  %166 = icmp ult i64 %.off760, 5
  br i1 %166, label %maybe-more-tests496, label %tag10

maybe-more-tests496:                              ; preds = %header-check-br488
  %167 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %168 = invoke {}* @cc_safe_fdefinition({}* %167)
          to label %normal-dest292 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

header-check-br499:                               ; preds = %header-check-br
  %.off766 = add i64 %81, -1001
  %169 = icmp ult i64 %.off766, 5
  br i1 %169, label %maybe-more-tests507, label %tag5

maybe-more-tests507:                              ; preds = %header-check-br499
  %170 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %171 = invoke {}* @cc_safe_fdefinition({}* %170)
          to label %normal-dest443 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest516:                                   ; preds = %tag71
  %ptrtoint518 = ptrtoint {}* %61 to i64
  %tag-only519 = and i64 %ptrtoint518, 7
  %test520 = icmp eq i64 %tag-only519, 1
  br i1 %test520, label %header-check-br517, label %tag10

header-check-br517:                               ; preds = %normal-dest516
  %irc-bit-cast521 = bitcast {}* %61 to i8*
  %gep522 = getelementptr inbounds i8, i8* %irc-bit-cast521, i64 -9
  %irc-bit-cast523 = bitcast i8* %gep522 to i64*
  %172 = load i64, i64* %irc-bit-cast523, align 8
  %.off = add i64 %172, -913
  %173 = icmp ult i64 %.off, 85
  br i1 %173, label %tag73, label %header-check-br488

normal-dest532:                                   ; preds = %tag73
  br i1 %consp-test, label %tag8, label %tag45

normal-dest541:                                   ; preds = %tag74
  %174 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 114), align 16
  %ptrtoint542 = ptrtoint {}* %64 to i64
  %entry-point-addr-uint543 = add i64 %ptrtoint542, 7
  %entry-point-addr544 = inttoptr i64 %entry-point-addr-uint543 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point545 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr544, align 8
  %175 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point545({}* %64, i64 3, {}* %farg0, {}* %S352.0, {}* %174, {}* null)
          to label %normal-dest548 unwind label %cleanup-lpad.loopexit

normal-dest548:                                   ; preds = %normal-dest541
  br i1 %consp-test578, label %tag14, label %tag37

normal-dest557:                                   ; preds = %tag77
  %176 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %177 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %178 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %179 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint558 = ptrtoint {}* %66 to i64
  %entry-point-addr-uint559 = add i64 %ptrtoint558, 7
  %entry-point-addr560 = inttoptr i64 %entry-point-addr-uint559 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point561 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr560, align 8
  %180 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point561({}* %66, i64 5, {}* %176, {}* %177, {}* %"%DOLIST-VAR145.0770", {}* %178, {}* %179)
          to label %normal-dest564 unwind label %cleanup-lpad.loopexit

normal-dest564:                                   ; preds = %normal-dest557
  %.elt688 = extractvalue { {}*, i64 } %180, 0
  %.elt690 = extractvalue { {}*, i64 } %180, 1
  %cond606 = icmp eq i64 %.elt690, 0
  %181 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %"%DOLIST-VAR145.2" = select i1 %cond606, {}* %181, {}* %.elt688
  br label %tag36.backedge

normal-dest580:                                   ; preds = %tag83
  %182 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 490), align 16
  %183 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 491), align 8
  %ptrtoint581 = ptrtoint {}* %71 to i64
  %entry-point-addr-uint582 = add i64 %ptrtoint581, 7
  %entry-point-addr583 = inttoptr i64 %entry-point-addr-uint582 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point584 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr583, align 8
  %184 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point584({}* %71, i64 3, {}* %182, {}* %183, {}* %farg0, {}* null)
          to label %normal-dest587 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest587:                                   ; preds = %normal-dest580
  %.elt617 = extractvalue { {}*, i64 } %184, 0
  %.elt619 = extractvalue { {}*, i64 } %184, 1
  br label %tag12
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^294^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !57 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^294^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br73
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest67, %normal-dest17, %header-check-br
  %G150229.0 = phi {}* [ %18, %header-check-br ], [ %G150229.1, %normal-dest17 ], [ %G150229.2, %normal-dest67 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 509), align 8
  %ptrtoint20 = ptrtoint {}* %G150229.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G150229.0, i64 2, {}* %"closure->YAS=NEUE_INSTANZ", {}* %13, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %maybe-more-tests81, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag2, %normal-dest13, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 509), align 8
  %"closure->YAS=NEUE_INSTANZ" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=NEUE_INSTANZ^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=NEUE_INSTANZ^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 10977, i64 294, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br73

normal-dest13:                                    ; preds = %tag1
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 508), align 16
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150229.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag2

normal-dest26:                                    ; preds = %tag2
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 511), align 8
  %ptrtoint33 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %28, i64 2, {}* %"closure->YAS=NEUE_INSTANZ", {}* %29, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 514), align 16
  %ptrtoint46 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %32, i64 2, {}* %"closure->YAS=NEUE_INSTANZ", {}* %33, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %35, {}* inttoptr (i64 1176 to {}*))
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 509), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %37 = insertvalue { {}*, i64 } undef, {}* %36, 0
  %38 = insertvalue { {}*, i64 } %37, i64 1, 1
  ret { {}*, i64 } %38

normal-dest60:                                    ; preds = %maybe-more-tests81
  %ptrtoint61 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt101 = extractvalue { {}*, i64 } %39, 0
  %.elt103 = extractvalue { {}*, i64 } %39, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150229.2 = select i1 %cond82, {}* %40, {}* %.elt101
  br label %tag2

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag1

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest60 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=NEUE_INSTANZ^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !58 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %cond = icmp eq i64 %nargs, 3
  br i1 %cond, label %case-opt1-bb, label %case-opt0-bb

tag:                                              ; preds = %normal-dest237
  %10 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 468), align 16
  %11 = invoke {}* @cc_safe_fdefinition({}* %10)
          to label %normal-dest66 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag1:                                             ; preds = %normal-dest104, %tag56
  %12 = phi {}* [ %.val593, %tag56 ], [ %98, %normal-dest104 ]
  %S.0 = phi {}* [ %67, %tag56 ], [ %S.1, %normal-dest104 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %14 = invoke {}* @cc_safe_setfdefinition({}* %13)
          to label %normal-dest74 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag47.backedge:                                   ; preds = %tag23, %normal-dest320
  %15 = phi {}* [ %.pre608, %tag23 ], [ %152, %normal-dest320 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %37, %tag23 ], [ %"%DOLIST-VAR.1", %normal-dest320 ]
  %16 = icmp eq {}* %"%DOLIST-VAR.0.be", %15
  br i1 %16, label %tag48, label %tag17

tag3:                                             ; preds = %tag30
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest79 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag6:                                             ; preds = %tag17
  %19 = add i64 %31, -3
  %20 = inttoptr i64 %19 to {}**
  %21 = load {}*, {}** %20, align 8
  br label %tag61

tag7:                                             ; preds = %tag21
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest96 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag10:                                            ; preds = %normal-dest451
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %25 = icmp eq {}* %"%DOLIST-VAR.0606", %24
  %.val599 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G150260.0 = select i1 %25, {}* %.val599, {}* %24
  %26 = icmp eq {}* %G150260.0, %24
  br i1 %26, label %tag39, label %tag48

tag11:                                            ; preds = %normal-dest217, %normal-dest382, %normal-dest286
  %KLASSE.0 = phi {}* [ %137, %normal-dest286 ], [ %farg1, %normal-dest382 ], [ %farg1, %normal-dest217 ]
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 480), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest115 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag13:                                            ; preds = %normal-dest237
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 466), align 16
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest130 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag17:                                            ; preds = %tag17.preheader, %tag47.backedge
  %.val598 = phi {}* [ %15, %tag47.backedge ], [ %182, %tag17.preheader ]
  %"%DOLIST-VAR.0606" = phi {}* [ %"%DOLIST-VAR.0.be", %tag47.backedge ], [ %"%DOLIST-VAR.2", %tag17.preheader ]
  %31 = ptrtoint {}* %"%DOLIST-VAR.0606" to i64
  %tag-only181541 = and i64 %31, 7
  %consp-test = icmp eq i64 %tag-only181541, 3
  %.val597 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G150288.0 = select i1 %consp-test, {}* %.val597, {}* %.val598
  %32 = icmp eq {}* %G150288.0, %.val598
  br i1 %32, label %tag41, label %tag6

tag21:                                            ; preds = %tag21.preheader, %tag52.backedge
  %.val593 = phi {}* [ %91, %tag52.backedge ], [ %103, %tag21.preheader ]
  %"%DOLIST-VAR87.0607" = phi {}* [ %"%DOLIST-VAR87.0.be", %tag52.backedge ], [ %"%DOLIST-VAR87.2", %tag21.preheader ]
  %33 = ptrtoint {}* %"%DOLIST-VAR87.0607" to i64
  %tag-only196507 = and i64 %33, 7
  %consp-test197 = icmp eq i64 %tag-only196507, 3
  %.val = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G150368.0 = select i1 %consp-test197, {}* %.val, {}* %.val593
  %34 = icmp eq {}* %G150368.0, %.val593
  br i1 %34, label %tag7, label %tag56

tag23:                                            ; preds = %normal-dest451
  %35 = add i64 %31, 5
  %36 = inttoptr i64 %35 to {}**
  %37 = load {}*, {}** %36, align 8
  %.pre608 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %tag47.backedge

tag25:                                            ; preds = %tag30, %tag52.backedge, %normal-dest123
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 37), align 8
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %40 = invoke {}* @cc_safe_setfdefinition({}* %39)
          to label %normal-dest206 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag26:                                            ; preds = %tag29
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 472), align 16
  %42 = invoke {}* @cc_safe_fdefinition({}* %41)
          to label %normal-dest217 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag29:                                            ; preds = %normal-dest150
  %43 = icmp eq {}* %vorbruder.0, %109
  br i1 %43, label %tag26, label %tag42

tag30:                                            ; preds = %normal-dest435
  %44 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %45 = icmp eq {}* %"%DOLIST-VAR87.0607", %44
  %.val594 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G150327.0 = select i1 %45, {}* %.val594, {}* %44
  %46 = icmp eq {}* %G150327.0, %44
  br i1 %46, label %tag3, label %tag25

tag32:                                            ; preds = %normal-dest74, %header-check-br249
  %47 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %48 = invoke {}* @cc_safe_fdefinition({}* %47)
          to label %normal-dest259 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag35:                                            ; preds = %normal-dest150
  %49 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 468), align 16
  %50 = invoke {}* @cc_safe_fdefinition({}* %49)
          to label %normal-dest273 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag39:                                            ; preds = %tag10
  %51 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %52 = invoke {}* @cc_safe_fdefinition({}* %51)
          to label %normal-dest313 unwind label %cleanup-lpad.loopexit

tag40:                                            ; preds = %normal-dest206, %header-check-br182
  %53 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %54 = invoke {}* @cc_safe_fdefinition({}* %53)
          to label %normal-dest327 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag41:                                            ; preds = %tag17
  %55 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %56 = invoke {}* @cc_safe_fdefinition({}* %55)
          to label %normal-dest341 unwind label %cleanup-lpad.loopexit

tag42:                                            ; preds = %tag29
  %57 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 476), align 16
  %58 = invoke {}* @cc_safe_fdefinition({}* %57)
          to label %normal-dest355 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag44:                                            ; preds = %normal-dest435
  %59 = add i64 %33, 5
  %60 = inttoptr i64 %59 to {}**
  %61 = load {}*, {}** %60, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %tag52.backedge

tag45:                                            ; preds = %normal-dest334, %normal-dest306, %header-check-br207
  %G150297.0 = phi {}* [ %40, %header-check-br207 ], [ %G150297.1, %normal-dest306 ], [ %G150297.2, %normal-dest334 ]
  %ptrtoint394 = ptrtoint {}* %G150297.0 to i64
  %entry-point-addr-uint395 = add i64 %ptrtoint394, 7
  %entry-point-addr396 = inttoptr i64 %entry-point-addr-uint395 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point397 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr396, align 8
  %62 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point397({}* %G150297.0, i64 3, {}* %KLASSE.0, {}* %farg0, {}* %38, {}* null)
          to label %normal-dest400 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag48:                                            ; preds = %tag47.backedge, %tag10, %normal-dest415, %normal-dest69
  %return-value.sroa.40.0 = phi i64 [ %.elt479, %normal-dest69 ], [ 1, %normal-dest415 ], [ 1, %tag10 ], [ 1, %tag47.backedge ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt477, %normal-dest69 ], [ %farg0, %normal-dest415 ], [ %farg0, %tag10 ], [ %farg0, %tag47.backedge ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %63 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %64 = insertvalue { {}*, i64 } %63, i64 %return-value.sroa.40.0, 1
  ret { {}*, i64 } %64

tag56:                                            ; preds = %tag21
  %65 = add i64 %33, -3
  %66 = inttoptr i64 %65 to {}**
  %67 = load {}*, {}** %66, align 8
  br label %tag1

tag59:                                            ; preds = %normal-dest266, %normal-dest164, %header-check-br
  %G150334.0 = phi {}* [ %14, %header-check-br ], [ %G150334.1, %normal-dest164 ], [ %G150334.2, %normal-dest266 ]
  %ptrtoint429 = ptrtoint {}* %G150334.0 to i64
  %entry-point-addr-uint430 = add i64 %ptrtoint429, 7
  %entry-point-addr431 = inttoptr i64 %entry-point-addr-uint430 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point432 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr431, align 8
  %68 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point432({}* %G150334.0, i64 3, {}* %12, {}* %farg0, {}* %S.0, {}* null)
          to label %normal-dest435 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag61:                                            ; preds = %normal-dest348, %tag6
  %S93.0 = phi {}* [ %21, %tag6 ], [ %S93.1, %normal-dest348 ]
  %69 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 478), align 16
  %70 = invoke {}* @cc_safe_fdefinition({}* %69)
          to label %normal-dest444 unwind label %cleanup-lpad.loopexit

cleanup-lpad.loopexit:                            ; preds = %tag39, %normal-dest313, %tag41, %normal-dest341, %tag61, %normal-dest444
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit:          ; preds = %tag59, %normal-dest259, %tag32, %normal-dest157, %maybe-more-tests257, %normal-dest96, %tag7, %normal-dest79, %tag3, %tag1
  %lpad.loopexit603 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %78, %75, %normal-dest408, %normal-dest406, %normal-dest400, %tag45, %normal-dest382, %normal-dest376, %normal-dest364, %normal-dest357, %normal-dest355, %tag42, %normal-dest327, %tag40, %normal-dest299, %maybe-more-tests190, %normal-dest286, %normal-dest280, %normal-dest273, %tag35, %normal-dest230, %req-bb, %normal-dest217, %tag26, %tag25, %normal-dest143, %normal-dest137, %normal-dest130, %tag13, %normal-dest116, %normal-dest115, %tag11, %normal-dest66, %tag
  %lpad.loopexit.split-lp604 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit603, %cleanup-lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp604, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

req-bb:                                           ; preds = %76, %case-opt1-bb
  %G150213.0 = phi {}* [ %79, %case-opt1-bb ], [ %9, %76 ]
  %71 = icmp eq {}* %G150213.0, %9
  %vorbruder.0 = select i1 %71, {}* %9, {}* %farg2
  %72 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 464), align 16
  %73 = invoke {}* @cc_safe_fdefinition({}* %72)
          to label %normal-dest230 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

case-opt0-bb:                                     ; preds = %entry
  %74 = icmp ult i64 %nargs, 2
  br i1 %74, label %75, label %76

; <label>:75:                                     ; preds = %case-opt0-bb
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=NEUE_INSTANZ^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %75
  unreachable

; <label>:76:                                     ; preds = %case-opt0-bb
  %77 = icmp ugt i64 %nargs, 3
  br i1 %77, label %78, label %req-bb

; <label>:78:                                     ; preds = %76
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 3, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=NEUE_INSTANZ^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc578 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc578:                                        ; preds = %78
  unreachable

case-opt1-bb:                                     ; preds = %entry
  %79 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  br label %req-bb

normal-dest66:                                    ; preds = %tag
  %80 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 506), align 16
  %81 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 507), align 8
  %ptrtoint = ptrtoint {}* %11 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %82 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %11, i64 3, {}* %80, {}* %81, {}* %farg0, {}* null)
          to label %normal-dest69 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest69:                                    ; preds = %normal-dest66
  %.elt477 = extractvalue { {}*, i64 } %82, 0
  %.elt479 = extractvalue { {}*, i64 } %82, 1
  br label %tag48

normal-dest74:                                    ; preds = %tag1
  %ptrtoint75 = ptrtoint {}* %14 to i64
  %tag-only = and i64 %ptrtoint75, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag32

header-check-br:                                  ; preds = %normal-dest74
  %irc-bit-cast76 = bitcast {}* %14 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast76, i64 -9
  %irc-bit-cast77 = bitcast i8* %gep to i64*
  %83 = load i64, i64* %irc-bit-cast77, align 8
  %.off = add i64 %83, -913
  %84 = icmp ult i64 %.off, 85
  br i1 %84, label %tag59, label %header-check-br249

normal-dest79:                                    ; preds = %tag3
  %85 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %86 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %87 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %88 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint80 = ptrtoint {}* %18 to i64
  %entry-point-addr-uint81 = add i64 %ptrtoint80, 7
  %entry-point-addr82 = inttoptr i64 %entry-point-addr-uint81 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point83 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr82, align 8
  %89 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point83({}* %18, i64 5, {}* %85, {}* %86, {}* %"%DOLIST-VAR87.0607", {}* %87, {}* %88)
          to label %normal-dest86 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest86:                                    ; preds = %normal-dest79
  %.elt518 = extractvalue { {}*, i64 } %89, 0
  %.elt520 = extractvalue { {}*, i64 } %89, 1
  %cond465 = icmp eq i64 %.elt520, 0
  %90 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %"%DOLIST-VAR87.1" = select i1 %cond465, {}* %90, {}* %.elt518
  br label %tag52.backedge

tag52.backedge:                                   ; preds = %normal-dest86, %tag44
  %91 = phi {}* [ %.pre, %tag44 ], [ %90, %normal-dest86 ]
  %"%DOLIST-VAR87.0.be" = phi {}* [ %61, %tag44 ], [ %"%DOLIST-VAR87.1", %normal-dest86 ]
  %92 = icmp eq {}* %"%DOLIST-VAR87.0.be", %91
  br i1 %92, label %tag25, label %tag21

normal-dest96:                                    ; preds = %tag7
  %93 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %94 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %95 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %96 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint98 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint99 = add i64 %ptrtoint98, 7
  %entry-point-addr100 = inttoptr i64 %entry-point-addr-uint99 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point101 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr100, align 8
  %97 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point101({}* %23, i64 5, {}* %93, {}* %94, {}* %"%DOLIST-VAR87.0607", {}* %95, {}* %96)
          to label %normal-dest104 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest104:                                   ; preds = %normal-dest96
  %.elt526 = extractvalue { {}*, i64 } %97, 0
  %.elt528 = extractvalue { {}*, i64 } %97, 1
  %cond467 = icmp eq i64 %.elt528, 0
  %98 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %S.1 = select i1 %cond467, {}* %98, {}* %.elt526
  br label %tag1

normal-dest115:                                   ; preds = %tag11
  %99 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 35), align 8
  %100 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 30), align 16
  %101 = invoke {}* @cc_safe_symbol_value({}* %100)
          to label %normal-dest116 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest116:                                   ; preds = %normal-dest115
  %ptrtoint117 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint118 = add i64 %ptrtoint117, 7
  %entry-point-addr119 = inttoptr i64 %entry-point-addr-uint118 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point120 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr119, align 8
  %102 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point120({}* %28, i64 2, {}* %99, {}* %101, {}* null, {}* null)
          to label %normal-dest123 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest123:                                   ; preds = %normal-dest116
  %.elt504 = extractvalue { {}*, i64 } %102, 0
  %.elt506 = extractvalue { {}*, i64 } %102, 1
  %cond462 = icmp eq i64 %.elt506, 0
  %103 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %"%DOLIST-VAR87.2" = select i1 %cond462, {}* %103, {}* %.elt504
  %104 = icmp eq {}* %"%DOLIST-VAR87.2", %103
  br i1 %104, label %tag25, label %tag21.preheader

tag21.preheader:                                  ; preds = %normal-dest123
  br label %tag21

normal-dest130:                                   ; preds = %tag13
  %ptrtoint131 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint132 = add i64 %ptrtoint131, 7
  %entry-point-addr133 = inttoptr i64 %entry-point-addr-uint132 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point134 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr133, align 8
  %105 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point134({}* %30, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest137 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest137:                                   ; preds = %normal-dest130
  %106 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 281), align 8
  %107 = invoke {}* @cc_safe_fdefinition({}* %106)
          to label %normal-dest143 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest143:                                   ; preds = %normal-dest137
  %ptrtoint144 = ptrtoint {}* %107 to i64
  %entry-point-addr-uint145 = add i64 %ptrtoint144, 7
  %entry-point-addr146 = inttoptr i64 %entry-point-addr-uint145 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point147 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr146, align 8
  %108 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point147({}* %107, i64 1, {}* %farg1, {}* null, {}* null, {}* null)
          to label %normal-dest150 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest150:                                   ; preds = %normal-dest143
  %.elt488 = extractvalue { {}*, i64 } %108, 0
  %.elt490 = extractvalue { {}*, i64 } %108, 1
  %cond460 = icmp eq i64 %.elt490, 0
  %109 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150412.0 = select i1 %cond460, {}* %109, {}* %.elt488
  %110 = icmp eq {}* %G150412.0, %109
  br i1 %110, label %tag35, label %tag29

normal-dest157:                                   ; preds = %maybe-more-tests257
  %ptrtoint158 = ptrtoint {}* %127 to i64
  %entry-point-addr-uint159 = add i64 %ptrtoint158, 7
  %entry-point-addr160 = inttoptr i64 %entry-point-addr-uint159 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point161 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr160, align 8
  %111 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point161({}* %127, i64 1, {}* nonnull %14, {}* null, {}* null, {}* null)
          to label %normal-dest164 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest164:                                   ; preds = %normal-dest157
  %.elt522 = extractvalue { {}*, i64 } %111, 0
  %.elt524 = extractvalue { {}*, i64 } %111, 1
  %cond466 = icmp eq i64 %.elt524, 0
  %112 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150334.1 = select i1 %cond466, {}* %112, {}* %.elt522
  br label %tag59

header-check-br182:                               ; preds = %header-check-br207
  %.off602 = add i64 %116, -1001
  %113 = icmp ult i64 %.off602, 5
  br i1 %113, label %maybe-more-tests190, label %tag40

maybe-more-tests190:                              ; preds = %header-check-br182
  %114 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %115 = invoke {}* @cc_safe_fdefinition({}* %114)
          to label %normal-dest299 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest206:                                   ; preds = %tag25
  %ptrtoint208 = ptrtoint {}* %40 to i64
  %tag-only209 = and i64 %ptrtoint208, 7
  %test210 = icmp eq i64 %tag-only209, 1
  br i1 %test210, label %header-check-br207, label %tag40

header-check-br207:                               ; preds = %normal-dest206
  %irc-bit-cast211 = bitcast {}* %40 to i8*
  %gep212 = getelementptr inbounds i8, i8* %irc-bit-cast211, i64 -9
  %irc-bit-cast213 = bitcast i8* %gep212 to i64*
  %116 = load i64, i64* %irc-bit-cast213, align 8
  %.off601 = add i64 %116, -913
  %117 = icmp ult i64 %.off601, 85
  br i1 %117, label %tag45, label %header-check-br182

normal-dest217:                                   ; preds = %tag26
  %118 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 39), align 8
  %119 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 474), align 16
  %120 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 114), align 16
  %ptrtoint218 = ptrtoint {}* %42 to i64
  %entry-point-addr-uint219 = add i64 %ptrtoint218, 7
  %entry-point-addr220 = inttoptr i64 %entry-point-addr-uint219 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point221 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr220, align 8
  %121 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point221({}* %42, i64 5, {}* %farg1, {}* %118, {}* %farg0, {}* %119, {}* %120)
          to label %tag11 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest230:                                   ; preds = %req-bb
  %ptrtoint231 = ptrtoint {}* %73 to i64
  %entry-point-addr-uint232 = add i64 %ptrtoint231, 7
  %entry-point-addr233 = inttoptr i64 %entry-point-addr-uint232 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point234 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr233, align 8
  %122 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point234({}* %73, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest237 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest237:                                   ; preds = %normal-dest230
  %.elt = extractvalue { {}*, i64 } %122, 0
  %.elt475 = extractvalue { {}*, i64 } %122, 1
  %cond459 = icmp eq i64 %.elt475, 0
  %123 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150425.0 = select i1 %cond459, {}* %123, {}* %.elt
  %124 = icmp eq {}* %G150425.0, %123
  br i1 %124, label %tag13, label %tag

header-check-br249:                               ; preds = %header-check-br
  %.off596 = add i64 %83, -1001
  %125 = icmp ult i64 %.off596, 5
  br i1 %125, label %maybe-more-tests257, label %tag32

maybe-more-tests257:                              ; preds = %header-check-br249
  %126 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %127 = invoke {}* @cc_safe_fdefinition({}* %126)
          to label %normal-dest157 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest259:                                   ; preds = %tag32
  %128 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %129 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %130 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %131 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 504), align 16
  %ptrtoint260 = ptrtoint {}* %48 to i64
  %entry-point-addr-uint261 = add i64 %ptrtoint260, 7
  %entry-point-addr262 = inttoptr i64 %entry-point-addr-uint261 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point263 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr262, align 8
  %132 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point263({}* %48, i64 5, {}* %128, {}* %129, {}* %14, {}* %130, {}* %131)
          to label %normal-dest266 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest266:                                   ; preds = %normal-dest259
  %.elt509 = extractvalue { {}*, i64 } %132, 0
  %.elt511 = extractvalue { {}*, i64 } %132, 1
  %cond464 = icmp eq i64 %.elt511, 0
  %133 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150334.2 = select i1 %cond464, {}* %133, {}* %.elt509
  br label %tag59

normal-dest273:                                   ; preds = %tag35
  %134 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 502), align 16
  %135 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 503), align 8
  %ptrtoint274 = ptrtoint {}* %50 to i64
  %entry-point-addr-uint275 = add i64 %ptrtoint274, 7
  %entry-point-addr276 = inttoptr i64 %entry-point-addr-uint275 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point277 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr276, align 8
  %136 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point277({}* %50, i64 3, {}* %134, {}* %135, {}* %farg1, {}* null)
          to label %normal-dest280 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest280:                                   ; preds = %normal-dest273
  %137 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 15), align 8
  %138 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 472), align 16
  %139 = invoke {}* @cc_safe_fdefinition({}* %138)
          to label %normal-dest286 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest286:                                   ; preds = %normal-dest280
  %140 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 15), align 8
  %141 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 39), align 8
  %142 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 474), align 16
  %143 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 114), align 16
  %ptrtoint287 = ptrtoint {}* %139 to i64
  %entry-point-addr-uint288 = add i64 %ptrtoint287, 7
  %entry-point-addr289 = inttoptr i64 %entry-point-addr-uint288 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point290 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr289, align 8
  %144 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point290({}* %139, i64 5, {}* %140, {}* %141, {}* %farg0, {}* %142, {}* %143)
          to label %tag11 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest299:                                   ; preds = %maybe-more-tests190
  %ptrtoint300 = ptrtoint {}* %115 to i64
  %entry-point-addr-uint301 = add i64 %ptrtoint300, 7
  %entry-point-addr302 = inttoptr i64 %entry-point-addr-uint301 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point303 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr302, align 8
  %145 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point303({}* %115, i64 1, {}* nonnull %40, {}* null, {}* null, {}* null)
          to label %normal-dest306 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest306:                                   ; preds = %normal-dest299
  %.elt556 = extractvalue { {}*, i64 } %145, 0
  %.elt558 = extractvalue { {}*, i64 } %145, 1
  %cond473 = icmp eq i64 %.elt558, 0
  %146 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150297.1 = select i1 %cond473, {}* %146, {}* %.elt556
  br label %tag45

normal-dest313:                                   ; preds = %tag39
  %147 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %148 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %149 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %150 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint314 = ptrtoint {}* %52 to i64
  %entry-point-addr-uint315 = add i64 %ptrtoint314, 7
  %entry-point-addr316 = inttoptr i64 %entry-point-addr-uint315 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point317 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr316, align 8
  %151 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point317({}* %52, i64 5, {}* %147, {}* %148, {}* %"%DOLIST-VAR.0606", {}* %149, {}* %150)
          to label %normal-dest320 unwind label %cleanup-lpad.loopexit

normal-dest320:                                   ; preds = %normal-dest313
  %.elt548 = extractvalue { {}*, i64 } %151, 0
  %.elt550 = extractvalue { {}*, i64 } %151, 1
  %cond471 = icmp eq i64 %.elt550, 0
  %152 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %"%DOLIST-VAR.1" = select i1 %cond471, {}* %152, {}* %.elt548
  br label %tag47.backedge

normal-dest327:                                   ; preds = %tag40
  %153 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %154 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %155 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %156 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 505), align 8
  %ptrtoint328 = ptrtoint {}* %54 to i64
  %entry-point-addr-uint329 = add i64 %ptrtoint328, 7
  %entry-point-addr330 = inttoptr i64 %entry-point-addr-uint329 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point331 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr330, align 8
  %157 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point331({}* %54, i64 5, {}* %153, {}* %154, {}* %40, {}* %155, {}* %156)
          to label %normal-dest334 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest334:                                   ; preds = %normal-dest327
  %.elt530 = extractvalue { {}*, i64 } %157, 0
  %.elt532 = extractvalue { {}*, i64 } %157, 1
  %cond469 = icmp eq i64 %.elt532, 0
  %158 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150297.2 = select i1 %cond469, {}* %158, {}* %.elt530
  br label %tag45

normal-dest341:                                   ; preds = %tag41
  %159 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %160 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %161 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %162 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint342 = ptrtoint {}* %56 to i64
  %entry-point-addr-uint343 = add i64 %ptrtoint342, 7
  %entry-point-addr344 = inttoptr i64 %entry-point-addr-uint343 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point345 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr344, align 8
  %163 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point345({}* %56, i64 5, {}* %159, {}* %160, {}* %"%DOLIST-VAR.0606", {}* %161, {}* %162)
          to label %normal-dest348 unwind label %cleanup-lpad.loopexit

normal-dest348:                                   ; preds = %normal-dest341
  %.elt552 = extractvalue { {}*, i64 } %163, 0
  %.elt554 = extractvalue { {}*, i64 } %163, 1
  %cond472 = icmp eq i64 %.elt554, 0
  %164 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %S93.1 = select i1 %cond472, {}* %164, {}* %.elt552
  br label %tag61

normal-dest355:                                   ; preds = %tag42
  %165 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %166 = invoke {}* @cc_safe_fdefinition({}* %165)
          to label %normal-dest357 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest357:                                   ; preds = %normal-dest355
  %167 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 39), align 8
  %ptrtoint358 = ptrtoint {}* %166 to i64
  %entry-point-addr-uint359 = add i64 %ptrtoint358, 7
  %entry-point-addr360 = inttoptr i64 %entry-point-addr-uint359 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point361 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr360, align 8
  %168 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point361({}* %166, i64 2, {}* %farg1, {}* %167, {}* null, {}* null)
          to label %normal-dest364 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest364:                                   ; preds = %normal-dest357
  %.elt492 = extractvalue { {}*, i64 } %168, 0
  %.elt494 = extractvalue { {}*, i64 } %168, 1
  %cond461 = icmp eq i64 %.elt494, 0
  %169 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150402.0 = select i1 %cond461, {}* %169, {}* %.elt492
  %ptrtoint370 = ptrtoint {}* %58 to i64
  %entry-point-addr-uint371 = add i64 %ptrtoint370, 7
  %entry-point-addr372 = inttoptr i64 %entry-point-addr-uint371 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point373 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr372, align 8
  %170 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point373({}* %58, i64 3, {}* %G150402.0, {}* %vorbruder.0, {}* %farg0, {}* null)
          to label %normal-dest376 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest376:                                   ; preds = %normal-dest364
  %171 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 478), align 16
  %172 = invoke {}* @cc_safe_fdefinition({}* %171)
          to label %normal-dest382 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest382:                                   ; preds = %normal-dest376
  %173 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 39), align 8
  %174 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 114), align 16
  %ptrtoint383 = ptrtoint {}* %172 to i64
  %entry-point-addr-uint384 = add i64 %ptrtoint383, 7
  %entry-point-addr385 = inttoptr i64 %entry-point-addr-uint384 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point386 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr385, align 8
  %175 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point386({}* %172, i64 3, {}* %farg1, {}* %173, {}* %174, {}* null)
          to label %tag11 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest400:                                   ; preds = %tag45
  %176 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 480), align 16
  %177 = invoke {}* @cc_safe_fdefinition({}* %176)
          to label %normal-dest406 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest406:                                   ; preds = %normal-dest400
  %178 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 35), align 8
  %179 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 30), align 16
  %180 = invoke {}* @cc_safe_symbol_value({}* %179)
          to label %normal-dest408 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest408:                                   ; preds = %normal-dest406
  %ptrtoint409 = ptrtoint {}* %177 to i64
  %entry-point-addr-uint410 = add i64 %ptrtoint409, 7
  %entry-point-addr411 = inttoptr i64 %entry-point-addr-uint410 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point412 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr411, align 8
  %181 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point412({}* %177, i64 2, {}* %178, {}* %180, {}* null, {}* null)
          to label %normal-dest415 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest415:                                   ; preds = %normal-dest408
  %.elt538 = extractvalue { {}*, i64 } %181, 0
  %.elt540 = extractvalue { {}*, i64 } %181, 1
  %cond470 = icmp eq i64 %.elt540, 0
  %182 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %"%DOLIST-VAR.2" = select i1 %cond470, {}* %182, {}* %.elt538
  %183 = icmp eq {}* %"%DOLIST-VAR.2", %182
  br i1 %183, label %tag48, label %tag17.preheader

tag17.preheader:                                  ; preds = %normal-dest415
  br label %tag17

normal-dest435:                                   ; preds = %tag59
  br i1 %consp-test197, label %tag44, label %tag30

normal-dest444:                                   ; preds = %tag61
  %184 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 114), align 16
  %ptrtoint445 = ptrtoint {}* %70 to i64
  %entry-point-addr-uint446 = add i64 %ptrtoint445, 7
  %entry-point-addr447 = inttoptr i64 %entry-point-addr-uint446 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point448 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr447, align 8
  %185 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point448({}* %70, i64 3, {}* %farg0, {}* %S93.0, {}* %184, {}* null)
          to label %normal-dest451 unwind label %cleanup-lpad.loopexit

normal-dest451:                                   ; preds = %normal-dest444
  br i1 %consp-test, label %tag23, label %tag10
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^322^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !59 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^322^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br59
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest76, %normal-dest17, %header-check-br
  %G150463.0 = phi {}* [ %18, %header-check-br ], [ %G150463.1, %normal-dest17 ], [ %G150463.2, %normal-dest76 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 523), align 8
  %ptrtoint20 = ptrtoint {}* %G150463.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G150463.0, i64 2, {}* %"closure->YAS=KLASSE_WECHSELN", {}* %13, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests67, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag2, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 523), align 8
  %"closure->YAS=KLASSE_WECHSELN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=KLASSE_WECHSELN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=KLASSE_WECHSELN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 12106, i64 322, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br59

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 522), align 16
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150463.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag2

normal-dest26:                                    ; preds = %tag2
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 525), align 8
  %ptrtoint33 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %28, i64 2, {}* %"closure->YAS=KLASSE_WECHSELN", {}* %29, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 528), align 16
  %ptrtoint46 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %32, i64 2, {}* %"closure->YAS=KLASSE_WECHSELN", {}* %33, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %35, {}* inttoptr (i64 1288 to {}*))
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 523), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %37 = insertvalue { {}*, i64 } undef, {}* %36, 0
  %38 = insertvalue { {}*, i64 } %37, i64 1, 1
  ret { {}*, i64 } %38

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %39 = icmp ult i64 %.off106, 5
  br i1 %39, label %maybe-more-tests67, label %tag

maybe-more-tests67:                               ; preds = %header-check-br59
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %maybe-more-tests67
  %ptrtoint70 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %41, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150463.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=KLASSE_WECHSELN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !60 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=KLASSE_WECHSELN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=KLASSE_WECHSELN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc303 unwind label %cleanup-lpad

.noexc303:                                        ; preds = %13
  unreachable

tag3:                                             ; preds = %normal-dest72, %tag8
  %.sink299 = phi { {}*, i64 } [ %20, %tag8 ], [ %53, %normal-dest72 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %.sink299

tag5:                                             ; preds = %normal-dest128, %header-check-br87
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest44 unwind label %cleanup-lpad

tag6:                                             ; preds = %normal-dest222, %header-check-br
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest58 unwind label %cleanup-lpad

tag7:                                             ; preds = %normal-dest23, %tag9
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 468), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest72 unwind label %cleanup-lpad

tag8:                                             ; preds = %normal-dest146, %header-check-br129, %normal-dest51
  %G150487.0 = phi {}* [ %G150487.1, %normal-dest51 ], [ %60, %header-check-br129 ], [ %G150487.2, %normal-dest146 ]
  %ptrtoint80 = ptrtoint {}* %G150487.0 to i64
  %entry-point-addr-uint81 = add i64 %ptrtoint80, 7
  %entry-point-addr82 = inttoptr i64 %entry-point-addr-uint81 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point83 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr82, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point83({}* %G150487.0, i64 3, {}* %farg1, {}* %farg0, {}* %58, {}* null)
          to label %tag3 unwind label %cleanup-lpad

tag9:                                             ; preds = %normal-dest97
  %.elt245 = extractvalue { {}*, i64 } %57, 0
  %.elt247 = extractvalue { {}*, i64 } %57, 1
  %cond232 = icmp eq i64 %.elt247, 0
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150545.1 = select i1 %cond232, {}* %21, {}* %.elt245
  %22 = icmp eq {}* %G150545.1, %21
  br i1 %22, label %tag7, label %tag15

tag11:                                            ; preds = %normal-dest23
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 464), align 16
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest97 unwind label %cleanup-lpad

tag13:                                            ; preds = %header-check-br223, %normal-dest65, %normal-dest37
  %G150505.0 = phi {}* [ %G150505.1, %normal-dest37 ], [ %G150505.2, %normal-dest65 ], [ %90, %header-check-br223 ]
  %ptrtoint110 = ptrtoint {}* %G150505.0 to i64
  %entry-point-addr-uint111 = add i64 %ptrtoint110, 7
  %entry-point-addr112 = inttoptr i64 %entry-point-addr-uint111 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point113 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr112, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point113({}* %G150505.0, i64 3, {}* %G150436150437.0, {}* %G150434.0, {}* %74, {}* null)
          to label %normal-dest116 unwind label %cleanup-lpad

tag15:                                            ; preds = %tag9
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 472), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest153 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest215, %normal-dest203, %normal-dest191, %normal-dest184, %normal-dest182, %normal-dest180, %normal-dest173, %normal-dest166, %normal-dest160, %normal-dest153, %tag15, %normal-dest139, %maybe-more-tests95, %normal-dest116, %tag13, %normal-dest97, %tag11, %tag8, %normal-dest72, %tag7, %normal-dest58, %tag6, %normal-dest44, %tag5, %normal-dest30, %maybe-more-tests, %normal-dest20, %normal-dest
  %28 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %28

normal-dest:                                      ; preds = %11
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 281), align 8
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest20 unwind label %cleanup-lpad

normal-dest20:                                    ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %30 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %30, i64 1, {}* %farg1, {}* null, {}* null, {}* null)
          to label %normal-dest23 unwind label %cleanup-lpad

normal-dest23:                                    ; preds = %normal-dest20
  %.elt = extractvalue { {}*, i64 } %31, 0
  %.elt243 = extractvalue { {}*, i64 } %31, 1
  %cond = icmp eq i64 %.elt243, 0
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150550.0 = select i1 %cond, {}* %32, {}* %.elt
  %33 = icmp eq {}* %G150550.0, %32
  br i1 %33, label %tag7, label %tag11

header-check-br:                                  ; preds = %header-check-br223
  %.off316 = add i64 %91, -1001
  %34 = icmp ult i64 %.off316, 5
  br i1 %34, label %maybe-more-tests, label %tag6

maybe-more-tests:                                 ; preds = %header-check-br
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest30 unwind label %cleanup-lpad

normal-dest30:                                    ; preds = %maybe-more-tests
  %ptrtoint31 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %36, i64 1, {}* nonnull %90, {}* null, {}* null, {}* null)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt292 = extractvalue { {}*, i64 } %37, 0
  %.elt294 = extractvalue { {}*, i64 } %37, 1
  %cond241 = icmp eq i64 %.elt294, 0
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150505.1 = select i1 %cond241, {}* %38, {}* %.elt292
  br label %tag13

normal-dest44:                                    ; preds = %tag5
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 521), align 8
  %ptrtoint45 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint46 = add i64 %ptrtoint45, 7
  %entry-point-addr47 = inttoptr i64 %entry-point-addr-uint46 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point48 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr47, align 8
  %43 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point48({}* %15, i64 5, {}* %39, {}* %40, {}* %60, {}* %41, {}* %42)
          to label %normal-dest51 unwind label %cleanup-lpad

normal-dest51:                                    ; preds = %normal-dest44
  %.elt277 = extractvalue { {}*, i64 } %43, 0
  %.elt279 = extractvalue { {}*, i64 } %43, 1
  %cond239 = icmp eq i64 %.elt279, 0
  %44 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150487.1 = select i1 %cond239, {}* %44, {}* %.elt277
  br label %tag8

normal-dest58:                                    ; preds = %tag6
  %45 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %46 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %47 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %48 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 520), align 16
  %ptrtoint59 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint60 = add i64 %ptrtoint59, 7
  %entry-point-addr61 = inttoptr i64 %entry-point-addr-uint60 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point62 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr61, align 8
  %49 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point62({}* %17, i64 5, {}* %45, {}* %46, {}* %90, {}* %47, {}* %48)
          to label %normal-dest65 unwind label %cleanup-lpad

normal-dest65:                                    ; preds = %normal-dest58
  %.elt269 = extractvalue { {}*, i64 } %49, 0
  %.elt271 = extractvalue { {}*, i64 } %49, 1
  %cond237 = icmp eq i64 %.elt271, 0
  %50 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150505.2 = select i1 %cond237, {}* %50, {}* %.elt269
  br label %tag13

normal-dest72:                                    ; preds = %tag7
  %51 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 516), align 16
  %52 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 517), align 8
  %ptrtoint73 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint74 = add i64 %ptrtoint73, 7
  %entry-point-addr75 = inttoptr i64 %entry-point-addr-uint74 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point76 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr75, align 8
  %53 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point76({}* %19, i64 4, {}* %51, {}* %52, {}* %farg1, {}* %farg0)
          to label %tag3 unwind label %cleanup-lpad

header-check-br87:                                ; preds = %header-check-br129
  %.off314 = add i64 %61, -1001
  %54 = icmp ult i64 %.off314, 5
  br i1 %54, label %maybe-more-tests95, label %tag5

maybe-more-tests95:                               ; preds = %header-check-br87
  %55 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %56 = invoke {}* @cc_safe_fdefinition({}* %55)
          to label %normal-dest139 unwind label %cleanup-lpad

normal-dest97:                                    ; preds = %tag11
  %ptrtoint98 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint99 = add i64 %ptrtoint98, 7
  %entry-point-addr100 = inttoptr i64 %entry-point-addr-uint99 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point101 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr100, align 8
  %57 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point101({}* %24, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %tag9 unwind label %cleanup-lpad

normal-dest116:                                   ; preds = %tag13
  %58 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 37), align 8
  %59 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %60 = invoke {}* @cc_safe_setfdefinition({}* %59)
          to label %normal-dest128 unwind label %cleanup-lpad

normal-dest128:                                   ; preds = %normal-dest116
  %ptrtoint130 = ptrtoint {}* %60 to i64
  %tag-only131 = and i64 %ptrtoint130, 7
  %test132 = icmp eq i64 %tag-only131, 1
  br i1 %test132, label %header-check-br129, label %tag5

header-check-br129:                               ; preds = %normal-dest128
  %irc-bit-cast133 = bitcast {}* %60 to i8*
  %gep134 = getelementptr inbounds i8, i8* %irc-bit-cast133, i64 -9
  %irc-bit-cast135 = bitcast i8* %gep134 to i64*
  %61 = load i64, i64* %irc-bit-cast135, align 8
  %.off = add i64 %61, -913
  %62 = icmp ult i64 %.off, 85
  br i1 %62, label %tag8, label %header-check-br87

normal-dest139:                                   ; preds = %maybe-more-tests95
  %ptrtoint140 = ptrtoint {}* %56 to i64
  %entry-point-addr-uint141 = add i64 %ptrtoint140, 7
  %entry-point-addr142 = inttoptr i64 %entry-point-addr-uint141 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point143 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr142, align 8
  %63 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point143({}* %56, i64 1, {}* nonnull %60, {}* null, {}* null, {}* null)
          to label %normal-dest146 unwind label %cleanup-lpad

normal-dest146:                                   ; preds = %normal-dest139
  %.elt288 = extractvalue { {}*, i64 } %63, 0
  %.elt290 = extractvalue { {}*, i64 } %63, 1
  %cond240 = icmp eq i64 %.elt290, 0
  %64 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150487.2 = select i1 %cond240, {}* %64, {}* %.elt288
  br label %tag8

normal-dest153:                                   ; preds = %tag15
  %65 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 39), align 8
  %66 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 474), align 16
  %67 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 114), align 16
  %ptrtoint154 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint155 = add i64 %ptrtoint154, 7
  %entry-point-addr156 = inttoptr i64 %entry-point-addr-uint155 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point157 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr156, align 8
  %68 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point157({}* %27, i64 5, {}* %farg1, {}* %65, {}* %farg0, {}* %66, {}* %67)
          to label %normal-dest160 unwind label %cleanup-lpad

normal-dest160:                                   ; preds = %normal-dest153
  %69 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %70 = invoke {}* @cc_safe_fdefinition({}* %69)
          to label %normal-dest166 unwind label %cleanup-lpad

normal-dest166:                                   ; preds = %normal-dest160
  %71 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 37), align 8
  %ptrtoint167 = ptrtoint {}* %70 to i64
  %entry-point-addr-uint168 = add i64 %ptrtoint167, 7
  %entry-point-addr169 = inttoptr i64 %entry-point-addr-uint168 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point170 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr169, align 8
  %72 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point170({}* %70, i64 2, {}* %farg0, {}* %71, {}* null, {}* null)
          to label %normal-dest173 unwind label %cleanup-lpad

normal-dest173:                                   ; preds = %normal-dest166
  %.elt253 = extractvalue { {}*, i64 } %72, 0
  %.elt255 = extractvalue { {}*, i64 } %72, 1
  %cond233 = icmp eq i64 %.elt255, 0
  %73 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150434.0 = select i1 %cond233, {}* %73, {}* %.elt253
  %74 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 39), align 8
  %75 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 518), align 16
  %76 = invoke {}* @cc_safe_fdefinition({}* %75)
          to label %normal-dest180 unwind label %cleanup-lpad

normal-dest180:                                   ; preds = %normal-dest173
  %77 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %78 = invoke {}* @cc_safe_fdefinition({}* %77)
          to label %normal-dest182 unwind label %cleanup-lpad

normal-dest182:                                   ; preds = %normal-dest180
  %79 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %80 = invoke {}* @cc_safe_fdefinition({}* %79)
          to label %normal-dest184 unwind label %cleanup-lpad

normal-dest184:                                   ; preds = %normal-dest182
  %81 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 37), align 8
  %ptrtoint185 = ptrtoint {}* %80 to i64
  %entry-point-addr-uint186 = add i64 %ptrtoint185, 7
  %entry-point-addr187 = inttoptr i64 %entry-point-addr-uint186 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point188 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr187, align 8
  %82 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point188({}* %80, i64 2, {}* %farg0, {}* %81, {}* null, {}* null)
          to label %normal-dest191 unwind label %cleanup-lpad

normal-dest191:                                   ; preds = %normal-dest184
  %.elt257 = extractvalue { {}*, i64 } %82, 0
  %.elt259 = extractvalue { {}*, i64 } %82, 1
  %cond234 = icmp eq i64 %.elt259, 0
  %83 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150526.0 = select i1 %cond234, {}* %83, {}* %.elt257
  %84 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 39), align 8
  %ptrtoint197 = ptrtoint {}* %78 to i64
  %entry-point-addr-uint198 = add i64 %ptrtoint197, 7
  %entry-point-addr199 = inttoptr i64 %entry-point-addr-uint198 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point200 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr199, align 8
  %85 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point200({}* %78, i64 2, {}* %G150526.0, {}* %84, {}* null, {}* null)
          to label %normal-dest203 unwind label %cleanup-lpad

normal-dest203:                                   ; preds = %normal-dest191
  %.elt261 = extractvalue { {}*, i64 } %85, 0
  %.elt263 = extractvalue { {}*, i64 } %85, 1
  %cond235 = icmp eq i64 %.elt263, 0
  %86 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150524.0 = select i1 %cond235, {}* %86, {}* %.elt261
  %ptrtoint209 = ptrtoint {}* %76 to i64
  %entry-point-addr-uint210 = add i64 %ptrtoint209, 7
  %entry-point-addr211 = inttoptr i64 %entry-point-addr-uint210 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point212 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr211, align 8
  %87 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point212({}* %76, i64 2, {}* %farg0, {}* %G150524.0, {}* null, {}* null)
          to label %normal-dest215 unwind label %cleanup-lpad

normal-dest215:                                   ; preds = %normal-dest203
  %.elt265 = extractvalue { {}*, i64 } %87, 0
  %.elt267 = extractvalue { {}*, i64 } %87, 1
  %cond236 = icmp eq i64 %.elt267, 0
  %88 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150436150437.0 = select i1 %cond236, {}* %88, {}* %.elt265
  %89 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %90 = invoke {}* @cc_safe_setfdefinition({}* %89)
          to label %normal-dest222 unwind label %cleanup-lpad

normal-dest222:                                   ; preds = %normal-dest215
  %ptrtoint224 = ptrtoint {}* %90 to i64
  %tag-only225 = and i64 %ptrtoint224, 7
  %test226 = icmp eq i64 %tag-only225, 1
  br i1 %test226, label %header-check-br223, label %tag6

header-check-br223:                               ; preds = %normal-dest222
  %irc-bit-cast227 = bitcast {}* %90 to i8*
  %gep228 = getelementptr inbounds i8, i8* %irc-bit-cast227, i64 -9
  %irc-bit-cast229 = bitcast i8* %gep228 to i64*
  %91 = load i64, i64* %irc-bit-cast229, align 8
  %.off315 = add i64 %91, -913
  %92 = icmp ult i64 %.off315, 85
  br i1 %92, label %tag13, label %header-check-br
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^335^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !61 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^335^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br13
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest22 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest76, %normal-dest26, %header-check-br
  %G150572.0 = phi {}* [ %18, %header-check-br ], [ %G150572.1, %normal-dest26 ], [ %G150572.2, %normal-dest76 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 533), align 8
  %ptrtoint29 = ptrtoint {}* %G150572.0 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %G150572.0, i64 2, {}* %"closure->YAS=DER_VATER", {}* %13, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests21, %normal-dest54, %normal-dest48, %normal-dest41, %normal-dest35, %tag2, %normal-dest22, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 533), align 8
  %"closure->YAS=DER_VATER" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=DER_VATER^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=DER_VATER^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 12712, i64 335, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag1

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %tag1
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 532), align 16
  %ptrtoint23 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint23, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %24, {}* %25, {}* %18, {}* %26, {}* %27)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest22
  %.elt = extractvalue { {}*, i64 } %28, 0
  %.elt84 = extractvalue { {}*, i64 } %28, 1
  %cond = icmp eq i64 %.elt84, 0
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150572.1 = select i1 %cond, {}* %29, {}* %.elt
  br label %tag2

normal-dest35:                                    ; preds = %tag2
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 535), align 8
  %ptrtoint42 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %31, i64 2, {}* %"closure->YAS=DER_VATER", {}* %32, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest48
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 536), align 16
  %ptrtoint55 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint56 = add i64 %ptrtoint55, 7
  %entry-point-addr57 = inttoptr i64 %entry-point-addr-uint56 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point58 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr57, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point58({}* %35, i64 2, {}* %"closure->YAS=DER_VATER", {}* %36, {}* null, {}* null)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %38, {}* inttoptr (i64 1340 to {}*))
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 533), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %40 = insertvalue { {}*, i64 } undef, {}* %39, 0
  %41 = insertvalue { {}*, i64 } %40, i64 1, 1
  ret { {}*, i64 } %41

normal-dest69:                                    ; preds = %maybe-more-tests21
  %ptrtoint70 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150572.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=DER_VATER^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !62 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=DER_VATER^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=DER_VATER^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc79 unwind label %cleanup-lpad

.noexc79:                                         ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest50
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest16 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest50
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 468), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest25 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest12
  %15 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest34 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest12
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 312), align 16
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest43 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest16, %normal-dest34, %normal-dest25
  %.sink78 = phi { {}*, i64 } [ %29, %normal-dest25 ], [ %31, %normal-dest34 ], [ %26, %normal-dest16 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %.sink78

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest43, %tag3, %normal-dest34, %tag2, %normal-dest25, %tag1, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %19 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %19

normal-dest:                                      ; preds = %entry
  %20 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 281), align 8
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %21 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %22 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %21, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest9
  %.elt = extractvalue { {}*, i64 } %22, 0
  %.elt58 = extractvalue { {}*, i64 } %22, 1
  %cond = icmp eq i64 %.elt58, 0
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150608.0 = select i1 %cond, {}* %23, {}* %.elt
  %24 = icmp eq {}* %G150608.0, %23
  br i1 %24, label %tag3, label %tag2

normal-dest16:                                    ; preds = %tag
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 37), align 8
  %ptrtoint17 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint18 = add i64 %ptrtoint17, 7
  %entry-point-addr19 = inttoptr i64 %entry-point-addr-uint18 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point20 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr19, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point20({}* %12, i64 2, {}* %farg0, {}* %25, {}* null, {}* null)
          to label %tag4 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %tag1
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 530), align 16
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 531), align 8
  %ptrtoint26 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint27 = add i64 %ptrtoint26, 7
  %entry-point-addr28 = inttoptr i64 %entry-point-addr-uint27 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point29 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr28, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point29({}* %14, i64 3, {}* %27, {}* %28, {}* %farg0, {}* null)
          to label %tag4 unwind label %cleanup-lpad

normal-dest34:                                    ; preds = %tag2
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 35), align 8
  %ptrtoint35 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint36 = add i64 %ptrtoint35, 7
  %entry-point-addr37 = inttoptr i64 %entry-point-addr-uint36 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point38 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr37, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point38({}* %16, i64 2, {}* %farg0, {}* %30, {}* null, {}* null)
          to label %tag4 unwind label %cleanup-lpad

normal-dest43:                                    ; preds = %tag3
  %ptrtoint44 = ptrtoint {}* %18 to i64
  %entry-point-addr-uint45 = add i64 %ptrtoint44, 7
  %entry-point-addr46 = inttoptr i64 %entry-point-addr-uint45 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point47 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr46, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point47({}* %18, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest50 unwind label %cleanup-lpad

normal-dest50:                                    ; preds = %normal-dest43
  %.elt67 = extractvalue { {}*, i64 } %32, 0
  %.elt69 = extractvalue { {}*, i64 } %32, 1
  %cond56 = icmp eq i64 %.elt69, 0
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150599.0 = select i1 %cond56, {}* %33, {}* %.elt67
  %34 = icmp eq {}* %G150599.0, %33
  br i1 %34, label %tag1, label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^344^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !63 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^344^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br13
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest22 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest76, %normal-dest26, %header-check-br
  %G150630.0 = phi {}* [ %18, %header-check-br ], [ %G150630.1, %normal-dest26 ], [ %G150630.2, %normal-dest76 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 549), align 8
  %ptrtoint29 = ptrtoint {}* %G150630.0 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %G150630.0, i64 2, {}* %"closure->YAS=LOESCHE_OBJEKT", {}* %13, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests21, %normal-dest54, %normal-dest48, %normal-dest41, %normal-dest35, %tag2, %normal-dest22, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 549), align 8
  %"closure->YAS=LOESCHE_OBJEKT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=LOESCHE_OBJEKT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=LOESCHE_OBJEKT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 12986, i64 344, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag1

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %tag1
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 548), align 16
  %ptrtoint23 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint23, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %24, {}* %25, {}* %18, {}* %26, {}* %27)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest22
  %.elt = extractvalue { {}*, i64 } %28, 0
  %.elt84 = extractvalue { {}*, i64 } %28, 1
  %cond = icmp eq i64 %.elt84, 0
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150630.1 = select i1 %cond, {}* %29, {}* %.elt
  br label %tag2

normal-dest35:                                    ; preds = %tag2
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 551), align 8
  %ptrtoint42 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %31, i64 2, {}* %"closure->YAS=LOESCHE_OBJEKT", {}* %32, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest48
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 552), align 16
  %ptrtoint55 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint56 = add i64 %ptrtoint55, 7
  %entry-point-addr57 = inttoptr i64 %entry-point-addr-uint56 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point58 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr57, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point58({}* %35, i64 2, {}* %"closure->YAS=LOESCHE_OBJEKT", {}* %36, {}* null, {}* null)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %38, {}* inttoptr (i64 1376 to {}*))
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 549), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %40 = insertvalue { {}*, i64 } undef, {}* %39, 0
  %41 = insertvalue { {}*, i64 } %40, i64 1, 1
  ret { {}*, i64 } %41

normal-dest69:                                    ; preds = %maybe-more-tests21
  %ptrtoint70 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150630.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=LOESCHE_OBJEKT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !64 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=LOESCHE_OBJEKT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=LOESCHE_OBJEKT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc194 unwind label %cleanup-lpad

.noexc194:                                        ; preds = %10
  unreachable

tag5:                                             ; preds = %normal-dest100
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 533), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest30 unwind label %cleanup-lpad

tag7:                                             ; preds = %normal-dest131, %normal-dest37
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 542), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest47 unwind label %cleanup-lpad

tag9:                                             ; preds = %normal-dest100
  %15 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 468), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest70 unwind label %cleanup-lpad

tag11:                                            ; preds = %normal-dest26
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest93 unwind label %cleanup-lpad

tag13:                                            ; preds = %normal-dest26
  %19 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 468), align 16
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest113 unwind label %cleanup-lpad

tag14:                                            ; preds = %normal-dest37
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 540), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest122 unwind label %cleanup-lpad

tag17:                                            ; preds = %normal-dest60, %normal-dest113, %normal-dest79
  %.sink193 = phi { {}*, i64 } [ %46, %normal-dest79 ], [ %54, %normal-dest113 ], [ %38, %normal-dest60 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %.sink193

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest131, %normal-dest124, %normal-dest122, %tag14, %normal-dest113, %tag13, %normal-dest93, %tag11, %normal-dest79, %normal-dest72, %normal-dest70, %tag9, %normal-dest60, %normal-dest54, %normal-dest47, %tag7, %normal-dest30, %tag5, %normal-dest23, %normal-dest
  %23 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %23

normal-dest:                                      ; preds = %entry
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 464), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest23 unwind label %cleanup-lpad

normal-dest23:                                    ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest23
  %.elt = extractvalue { {}*, i64 } %26, 0
  %.elt153 = extractvalue { {}*, i64 } %26, 1
  %cond = icmp eq i64 %.elt153, 0
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %object.0 = select i1 %cond, {}* %27, {}* %.elt
  %28 = icmp eq {}* %object.0, %27
  %.val = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G150699.0 = select i1 %28, {}* %.val, {}* %27
  %29 = icmp eq {}* %G150699.0, %27
  br i1 %29, label %tag11, label %tag13

normal-dest30:                                    ; preds = %tag5
  %ptrtoint31 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %12, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt166 = extractvalue { {}*, i64 } %30, 0
  %.elt168 = extractvalue { {}*, i64 } %30, 1
  %cond149 = icmp eq i64 %.elt168, 0
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x.0 = select i1 %cond149, {}* %31, {}* %.elt166
  %32 = icmp eq {}* %x.0, %31
  %.val202 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %object45.0 = select i1 %32, {}* %.val202, {}* %31
  %33 = icmp eq {}* %object45.0, %31
  %G150672.0 = select i1 %33, {}* %.val202, {}* %31
  %34 = icmp eq {}* %G150672.0, %31
  br i1 %34, label %tag7, label %tag14

normal-dest47:                                    ; preds = %tag7
  %ptrtoint48 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %14, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 544), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest60 unwind label %cleanup-lpad

normal-dest60:                                    ; preds = %normal-dest54
  %ptrtoint61 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %38 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %37, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %tag17 unwind label %cleanup-lpad

normal-dest70:                                    ; preds = %tag9
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 538), align 16
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 539), align 8
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %42 = invoke {}* @cc_safe_fdefinition({}* %41)
          to label %normal-dest72 unwind label %cleanup-lpad

normal-dest72:                                    ; preds = %normal-dest70
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 39), align 8
  %ptrtoint73 = ptrtoint {}* %42 to i64
  %entry-point-addr-uint74 = add i64 %ptrtoint73, 7
  %entry-point-addr75 = inttoptr i64 %entry-point-addr-uint74 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point76 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr75, align 8
  %44 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point76({}* %42, i64 2, {}* %farg0, {}* %43, {}* null, {}* null)
          to label %normal-dest79 unwind label %cleanup-lpad

normal-dest79:                                    ; preds = %normal-dest72
  %.elt186 = extractvalue { {}*, i64 } %44, 0
  %.elt188 = extractvalue { {}*, i64 } %44, 1
  %cond151 = icmp eq i64 %.elt188, 0
  %45 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150652.0 = select i1 %cond151, {}* %45, {}* %.elt186
  %ptrtoint85 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint86 = add i64 %ptrtoint85, 7
  %entry-point-addr87 = inttoptr i64 %entry-point-addr-uint86 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point88 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr87, align 8
  %46 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point88({}* %16, i64 4, {}* %39, {}* %40, {}* %farg0, {}* %G150652.0)
          to label %tag17 unwind label %cleanup-lpad

normal-dest93:                                    ; preds = %tag11
  %47 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 39), align 8
  %ptrtoint94 = ptrtoint {}* %18 to i64
  %entry-point-addr-uint95 = add i64 %ptrtoint94, 7
  %entry-point-addr96 = inttoptr i64 %entry-point-addr-uint95 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point97 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr96, align 8
  %48 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point97({}* %18, i64 2, {}* %farg0, {}* %47, {}* null, {}* null)
          to label %normal-dest100 unwind label %cleanup-lpad

normal-dest100:                                   ; preds = %normal-dest93
  %.elt162 = extractvalue { {}*, i64 } %48, 0
  %.elt164 = extractvalue { {}*, i64 } %48, 1
  %cond148 = icmp eq i64 %.elt164, 0
  %49 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x101.0 = select i1 %cond148, {}* %49, {}* %.elt162
  %50 = icmp eq {}* %x101.0, %49
  %.val200 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G150684.0 = select i1 %50, {}* %.val200, {}* %49
  %51 = icmp eq {}* %G150684.0, %49
  br i1 %51, label %tag9, label %tag5

normal-dest113:                                   ; preds = %tag13
  %52 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 546), align 16
  %53 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 547), align 8
  %ptrtoint114 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint115 = add i64 %ptrtoint114, 7
  %entry-point-addr116 = inttoptr i64 %entry-point-addr-uint115 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point117 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr116, align 8
  %54 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point117({}* %20, i64 3, {}* %52, {}* %53, {}* %farg0, {}* null)
          to label %tag17 unwind label %cleanup-lpad

normal-dest122:                                   ; preds = %tag14
  %55 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 533), align 8
  %56 = invoke {}* @cc_safe_fdefinition({}* %55)
          to label %normal-dest124 unwind label %cleanup-lpad

normal-dest124:                                   ; preds = %normal-dest122
  %ptrtoint125 = ptrtoint {}* %56 to i64
  %entry-point-addr-uint126 = add i64 %ptrtoint125, 7
  %entry-point-addr127 = inttoptr i64 %entry-point-addr-uint126 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point128 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr127, align 8
  %57 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point128({}* %56, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest131 unwind label %cleanup-lpad

normal-dest131:                                   ; preds = %normal-dest124
  %.elt170 = extractvalue { {}*, i64 } %57, 0
  %.elt172 = extractvalue { {}*, i64 } %57, 1
  %cond150 = icmp eq i64 %.elt172, 0
  %58 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150665.0 = select i1 %cond150, {}* %58, {}* %.elt170
  %59 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 39), align 8
  %ptrtoint137 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint138 = add i64 %ptrtoint137, 7
  %entry-point-addr139 = inttoptr i64 %entry-point-addr-uint138 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point140 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr139, align 8
  %60 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point140({}* %22, i64 3, {}* %G150665.0, {}* %59, {}* %farg0, {}* null)
          to label %tag7 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^358^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !65 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^358^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br73
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest67, %normal-dest17, %header-check-br
  %G150726.0 = phi {}* [ %18, %header-check-br ], [ %G150726.1, %normal-dest17 ], [ %G150726.2, %normal-dest67 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 555), align 8
  %ptrtoint20 = ptrtoint {}* %G150726.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G150726.0, i64 2, {}* %"closure->YAS=ALLES_LOESCHEN", {}* %13, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %maybe-more-tests81, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag2, %normal-dest13, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 555), align 8
  %"closure->YAS=ALLES_LOESCHEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=ALLES_LOESCHEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=ALLES_LOESCHEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 13582, i64 358, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br73

normal-dest13:                                    ; preds = %tag1
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 554), align 16
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150726.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag2

normal-dest26:                                    ; preds = %tag2
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %ptrtoint33 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %28, i64 2, {}* %"closure->YAS=ALLES_LOESCHEN", {}* %29, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 557), align 8
  %ptrtoint46 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %32, i64 2, {}* %"closure->YAS=ALLES_LOESCHEN", {}* %33, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %35, {}* inttoptr (i64 1432 to {}*))
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 555), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %37 = insertvalue { {}*, i64 } undef, {}* %36, 0
  %38 = insertvalue { {}*, i64 } %37, i64 1, 1
  ret { {}*, i64 } %38

normal-dest60:                                    ; preds = %maybe-more-tests81
  %ptrtoint61 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt101 = extractvalue { {}*, i64 } %39, 0
  %.elt103 = extractvalue { {}*, i64 } %39, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150726.2 = select i1 %cond82, {}* %40, {}* %.elt101
  br label %tag2

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag1

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest60 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=ALLES_LOESCHEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !66 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=ALLES_LOESCHEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest38
  %11 = add i64 %22, 5
  %12 = inttoptr i64 %11 to {}**
  %13 = load {}*, {}** %12, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %tag.backedge

tag.backedge:                                     ; preds = %tag1, %normal-dest49
  %14 = phi {}* [ %.pre, %tag1 ], [ %43, %normal-dest49 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %13, %tag1 ], [ %"%DOLIST-VAR.1", %normal-dest49 ]
  %15 = icmp eq {}* %"%DOLIST-VAR.0.be", %14
  br i1 %15, label %tag2, label %tag9

tag2:                                             ; preds = %tag11, %tag.backedge, %normal-dest25
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 118), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest26 unwind label %cleanup-lpad.loopexit.split-lp

tag3:                                             ; preds = %normal-dest80, %tag13
  %O.0 = phi {}* [ %29, %tag13 ], [ %O.1, %normal-dest80 ]
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 544), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest31 unwind label %cleanup-lpad.loopexit

tag4:                                             ; preds = %tag11
  %20 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest42 unwind label %cleanup-lpad.loopexit

tag9:                                             ; preds = %tag9.preheader, %tag.backedge
  %.val108 = phi {}* [ %14, %tag.backedge ], [ %34, %tag9.preheader ]
  %"%DOLIST-VAR.0111" = phi {}* [ %"%DOLIST-VAR.0.be", %tag.backedge ], [ %33, %tag9.preheader ]
  %22 = ptrtoint {}* %"%DOLIST-VAR.0111" to i64
  %tag-only6087 = and i64 %22, 7
  %consp-test61 = icmp eq i64 %tag-only6087, 3
  %.val = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G150784.0 = select i1 %consp-test61, {}* %.val, {}* %.val108
  %23 = icmp eq {}* %G150784.0, %.val108
  br i1 %23, label %tag19, label %tag13

tag11:                                            ; preds = %normal-dest38
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %25 = icmp eq {}* %"%DOLIST-VAR.0111", %24
  %.val109 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G150758.0 = select i1 %25, {}* %.val109, {}* %24
  %26 = icmp eq {}* %G150758.0, %24
  br i1 %26, label %tag4, label %tag2

tag13:                                            ; preds = %tag9
  %27 = add i64 %22, -3
  %28 = inttoptr i64 %27 to {}**
  %29 = load {}*, {}** %28, align 8
  br label %tag3

tag19:                                            ; preds = %tag9
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest73 unwind label %cleanup-lpad.loopexit

cleanup-lpad.loopexit:                            ; preds = %tag3, %normal-dest31, %tag4, %normal-dest42, %tag19, %normal-dest73
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %normal-dest, %tag2, %normal-dest26, %10
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 4), align 16
  %33 = invoke {}* @cc_safe_symbol_value({}* %32)
          to label %normal-dest25 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest25:                                    ; preds = %normal-dest
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %35 = icmp eq {}* %33, %34
  br i1 %35, label %tag2, label %tag9.preheader

tag9.preheader:                                   ; preds = %normal-dest25
  br label %tag9

normal-dest26:                                    ; preds = %tag2
  %ptrtoint = ptrtoint {}* %17 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %17, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest29 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest29:                                    ; preds = %normal-dest26
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %36

normal-dest31:                                    ; preds = %tag3
  %ptrtoint32 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint33 = add i64 %ptrtoint32, 7
  %entry-point-addr34 = inttoptr i64 %entry-point-addr-uint33 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point35 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr34, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point35({}* %19, i64 1, {}* %O.0, {}* null, {}* null, {}* null)
          to label %normal-dest38 unwind label %cleanup-lpad.loopexit

normal-dest38:                                    ; preds = %normal-dest31
  br i1 %consp-test61, label %tag1, label %tag11

normal-dest42:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint43 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %21, i64 5, {}* %38, {}* %39, {}* %"%DOLIST-VAR.0111", {}* %40, {}* %41)
          to label %normal-dest49 unwind label %cleanup-lpad.loopexit

normal-dest49:                                    ; preds = %normal-dest42
  %.elt92 = extractvalue { {}*, i64 } %42, 0
  %.elt94 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt94, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %"%DOLIST-VAR.1" = select i1 %cond, {}* %43, {}* %.elt92
  br label %tag.backedge

normal-dest73:                                    ; preds = %tag19
  %44 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %45 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %46 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %47 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint74 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint75 = add i64 %ptrtoint74, 7
  %entry-point-addr76 = inttoptr i64 %entry-point-addr-uint75 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point77 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr76, align 8
  %48 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point77({}* %31, i64 5, {}* %44, {}* %45, {}* %"%DOLIST-VAR.0111", {}* %46, {}* %47)
          to label %normal-dest80 unwind label %cleanup-lpad.loopexit

normal-dest80:                                    ; preds = %normal-dest73
  %.elt96 = extractvalue { {}*, i64 } %48, 0
  %.elt98 = extractvalue { {}*, i64 } %48, 1
  %cond86 = icmp eq i64 %.elt98, 0
  %49 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %O.1 = select i1 %cond86, {}* %49, {}* %.elt96
  br label %tag3
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^364^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !67 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^364^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest76, %normal-dest26, %header-check-br
  %G150809.0 = phi {}* [ %18, %header-check-br ], [ %G150809.1, %normal-dest26 ], [ %G150809.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 565), align 8
  %ptrtoint29 = ptrtoint {}* %G150809.0 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %G150809.0, i64 2, {}* %"closure->YAS=LOESCHE_ALLE_KINDER", {}* %11, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br13
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest54, %normal-dest48, %normal-dest41, %normal-dest35, %tag2, %normal-dest22, %maybe-more-tests21, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 565), align 8
  %"closure->YAS=LOESCHE_ALLE_KINDER" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=LOESCHE_ALLE_KINDER^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=LOESCHE_ALLE_KINDER^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 13697, i64 364, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag4

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %maybe-more-tests21
  %ptrtoint23 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint = add i64 %ptrtoint23, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest22
  %.elt101 = extractvalue { {}*, i64 } %24, 0
  %.elt103 = extractvalue { {}*, i64 } %24, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150809.1 = select i1 %cond82, {}* %25, {}* %.elt101
  br label %tag2

normal-dest35:                                    ; preds = %tag2
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 567), align 8
  %ptrtoint42 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %27, i64 2, {}* %"closure->YAS=LOESCHE_ALLE_KINDER", {}* %28, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest48
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 568), align 16
  %ptrtoint55 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint56 = add i64 %ptrtoint55, 7
  %entry-point-addr57 = inttoptr i64 %entry-point-addr-uint56 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point58 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr57, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point58({}* %31, i64 2, {}* %"closure->YAS=LOESCHE_ALLE_KINDER", {}* %32, {}* null, {}* null)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %34, {}* inttoptr (i64 1456 to {}*))
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 565), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %36 = insertvalue { {}*, i64 } undef, {}* %35, 0
  %37 = insertvalue { {}*, i64 } %36, i64 1, 1
  ret { {}*, i64 } %37

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 564), align 16
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150809.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=LOESCHE_ALLE_KINDER^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !68 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=LOESCHE_ALLE_KINDER^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=LOESCHE_ALLE_KINDER^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc178 unwind label %cleanup-lpad.loopexit.split-lp

.noexc178:                                        ; preds = %10
  unreachable

tag:                                              ; preds = %tag22
  %11 = add i64 %29, -3
  %12 = inttoptr i64 %11 to {}**
  %13 = load {}*, {}** %12, align 8
  br label %tag1

tag1:                                             ; preds = %normal-dest70, %tag
  %KIND.0 = phi {}* [ %13, %tag ], [ %KIND.1, %normal-dest70 ]
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 544), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest35 unwind label %cleanup-lpad.loopexit

tag2:                                             ; preds = %tag6
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest49 unwind label %cleanup-lpad.loopexit

tag3:                                             ; preds = %tag22
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest63 unwind label %cleanup-lpad.loopexit

tag4:                                             ; preds = %normal-dest100, %normal-dest123
  %.sink177 = phi { {}*, i64 } [ %65, %normal-dest123 ], [ %58, %normal-dest100 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %.sink177

tag6:                                             ; preds = %normal-dest42
  %20 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %21 = icmp eq {}* %"%DOLIST-VAR.0185", %20
  %.val183 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G150851.0 = select i1 %21, {}* %.val183, {}* %20
  %22 = icmp eq {}* %G150851.0, %20
  br i1 %22, label %tag2, label %tag10

tag10:                                            ; preds = %tag6, %tag20.backedge, %normal-dest116
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 560), align 16
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest87 unwind label %cleanup-lpad.loopexit.split-lp

tag11:                                            ; preds = %normal-dest31
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest109 unwind label %cleanup-lpad.loopexit.split-lp

tag16:                                            ; preds = %normal-dest31
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 468), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest123 unwind label %cleanup-lpad.loopexit.split-lp

tag22:                                            ; preds = %tag22.preheader, %tag20.backedge
  %.val182 = phi {}* [ %46, %tag20.backedge ], [ %61, %tag22.preheader ]
  %"%DOLIST-VAR.0185" = phi {}* [ %"%DOLIST-VAR.0.be", %tag20.backedge ], [ %G150791.0, %tag22.preheader ]
  %29 = ptrtoint {}* %"%DOLIST-VAR.0185" to i64
  %tag-only136147 = and i64 %29, 7
  %consp-test137 = icmp eq i64 %tag-only136147, 3
  %.val = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G150877.0 = select i1 %consp-test137, {}* %.val, {}* %.val182
  %30 = icmp eq {}* %G150877.0, %.val182
  br i1 %30, label %tag3, label %tag

tag23:                                            ; preds = %normal-dest42
  %31 = add i64 %29, 5
  %32 = inttoptr i64 %31 to {}**
  %33 = load {}*, {}** %32, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %tag20.backedge

cleanup-lpad.loopexit:                            ; preds = %tag1, %normal-dest35, %tag2, %normal-dest49, %tag3, %normal-dest63
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %normal-dest, %normal-dest28, %tag10, %normal-dest87, %normal-dest94, %normal-dest100, %tag11, %normal-dest109, %tag16, %normal-dest123, %9, %10
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 281), align 8
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest28 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest28:                                    ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %35 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %35, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest31 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest31:                                    ; preds = %normal-dest28
  %.elt = extractvalue { {}*, i64 } %36, 0
  %.elt142 = extractvalue { {}*, i64 } %36, 1
  %cond = icmp eq i64 %.elt142, 0
  %37 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150885.0 = select i1 %cond, {}* %37, {}* %.elt
  %38 = icmp eq {}* %G150885.0, %37
  br i1 %38, label %tag16, label %tag11

normal-dest35:                                    ; preds = %tag1
  %ptrtoint36 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint37 = add i64 %ptrtoint36, 7
  %entry-point-addr38 = inttoptr i64 %entry-point-addr-uint37 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point39 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr38, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point39({}* %15, i64 1, {}* %KIND.0, {}* null, {}* null, {}* null)
          to label %normal-dest42 unwind label %cleanup-lpad.loopexit

normal-dest42:                                    ; preds = %normal-dest35
  br i1 %consp-test137, label %tag23, label %tag6

normal-dest49:                                    ; preds = %tag2
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint50 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint51 = add i64 %ptrtoint50, 7
  %entry-point-addr52 = inttoptr i64 %entry-point-addr-uint51 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point53 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr52, align 8
  %44 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point53({}* %17, i64 5, {}* %40, {}* %41, {}* %"%DOLIST-VAR.0185", {}* %42, {}* %43)
          to label %normal-dest56 unwind label %cleanup-lpad.loopexit

normal-dest56:                                    ; preds = %normal-dest49
  %.elt154 = extractvalue { {}*, i64 } %44, 0
  %.elt156 = extractvalue { {}*, i64 } %44, 1
  %cond139 = icmp eq i64 %.elt156, 0
  %45 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %"%DOLIST-VAR.1" = select i1 %cond139, {}* %45, {}* %.elt154
  br label %tag20.backedge

tag20.backedge:                                   ; preds = %normal-dest56, %tag23
  %46 = phi {}* [ %.pre, %tag23 ], [ %45, %normal-dest56 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %33, %tag23 ], [ %"%DOLIST-VAR.1", %normal-dest56 ]
  %47 = icmp eq {}* %"%DOLIST-VAR.0.be", %46
  br i1 %47, label %tag10, label %tag22

normal-dest63:                                    ; preds = %tag3
  %48 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %49 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %50 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %51 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint64 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint65 = add i64 %ptrtoint64, 7
  %entry-point-addr66 = inttoptr i64 %entry-point-addr-uint65 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point67 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr66, align 8
  %52 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point67({}* %19, i64 5, {}* %48, {}* %49, {}* %"%DOLIST-VAR.0185", {}* %50, {}* %51)
          to label %normal-dest70 unwind label %cleanup-lpad.loopexit

normal-dest70:                                    ; preds = %normal-dest63
  %.elt158 = extractvalue { {}*, i64 } %52, 0
  %.elt160 = extractvalue { {}*, i64 } %52, 1
  %cond140 = icmp eq i64 %.elt160, 0
  %53 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %KIND.1 = select i1 %cond140, {}* %53, {}* %.elt158
  br label %tag1

normal-dest87:                                    ; preds = %tag10
  %54 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 39), align 8
  %ptrtoint88 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint89 = add i64 %ptrtoint88, 7
  %entry-point-addr90 = inttoptr i64 %entry-point-addr-uint89 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point91 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr90, align 8
  %55 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point91({}* %24, i64 2, {}* %farg0, {}* %54, {}* null, {}* null)
          to label %normal-dest94 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest94:                                    ; preds = %normal-dest87
  %56 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 562), align 16
  %57 = invoke {}* @cc_safe_fdefinition({}* %56)
          to label %normal-dest100 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest100:                                   ; preds = %normal-dest94
  %ptrtoint101 = ptrtoint {}* %57 to i64
  %entry-point-addr-uint102 = add i64 %ptrtoint101, 7
  %entry-point-addr103 = inttoptr i64 %entry-point-addr-uint102 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point104 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr103, align 8
  %58 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point104({}* %57, i64 1, {}* %G150791.0, {}* null, {}* null, {}* null)
          to label %tag4 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest109:                                   ; preds = %tag11
  %59 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 39), align 8
  %ptrtoint110 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint111 = add i64 %ptrtoint110, 7
  %entry-point-addr112 = inttoptr i64 %entry-point-addr-uint111 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point113 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr112, align 8
  %60 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point113({}* %26, i64 2, {}* %farg0, {}* %59, {}* null, {}* null)
          to label %normal-dest116 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest116:                                   ; preds = %normal-dest109
  %.elt144 = extractvalue { {}*, i64 } %60, 0
  %.elt146 = extractvalue { {}*, i64 } %60, 1
  %cond138 = icmp eq i64 %.elt146, 0
  %61 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150791.0 = select i1 %cond138, {}* %61, {}* %.elt144
  %62 = icmp eq {}* %G150791.0, %61
  br i1 %62, label %tag10, label %tag22.preheader

tag22.preheader:                                  ; preds = %normal-dest116
  br label %tag22

normal-dest123:                                   ; preds = %tag16
  %63 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 558), align 16
  %64 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 559), align 8
  %ptrtoint124 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint125 = add i64 %ptrtoint124, 7
  %entry-point-addr126 = inttoptr i64 %entry-point-addr-uint125 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point127 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr126, align 8
  %65 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point127({}* %28, i64 3, {}* %63, {}* %64, {}* %farg0, {}* null)
          to label %tag4 unwind label %cleanup-lpad.loopexit.split-lp
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^377^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !69 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^377^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest67, %normal-dest54, %header-check-br
  %G150907.0 = phi {}* [ %18, %header-check-br ], [ %G150907.1, %normal-dest54 ], [ %G150907.2, %normal-dest67 ]
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 281), align 8
  %ptrtoint13 = ptrtoint {}* %G150907.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G150907.0, i64 2, {}* %"closure->YAS=EINE_KLASSE_P", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest10, %header-check-br73
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest47 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %maybe-more-tests81, %normal-dest47, %tag1, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 281), align 8
  %"closure->YAS=EINE_KLASSE_P" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=EINE_KLASSE_P^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=EINE_KLASSE_P^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 14101, i64 377, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br73

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 571), align 8
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->YAS=EINE_KLASSE_P", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 572), align 16
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->YAS=EINE_KLASSE_P", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 1508 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 281), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %tag1
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 570), align 16
  %ptrtoint48 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %14, i64 5, {}* %33, {}* %34, {}* %18, {}* %35, {}* %36)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt = extractvalue { {}*, i64 } %37, 0
  %.elt84 = extractvalue { {}*, i64 } %37, 1
  %cond = icmp eq i64 %.elt84, 0
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150907.1 = select i1 %cond, {}* %38, {}* %.elt
  br label %tag

normal-dest60:                                    ; preds = %maybe-more-tests81
  %ptrtoint61 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt101 = extractvalue { {}*, i64 } %39, 0
  %.elt103 = extractvalue { {}*, i64 } %39, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150907.2 = select i1 %cond82, {}* %40, {}* %.elt101
  br label %tag

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag1

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest60 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=EINE_KLASSE_P^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !70 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=EINE_KLASSE_P^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=EINE_KLASSE_P^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc135 unwind label %cleanup-lpad

.noexc135:                                        ; preds = %10
  unreachable

tag:                                              ; preds = %header-check-br65, %header-check-br65, %header-check-br65, %header-check-br65
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 75), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest42 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest34
  %13 = ptrtoint {}* %.in to i64
  %single-float-tag-only = and i64 %13, 7
  %14 = icmp eq i64 %single-float-tag-only, 6
  br i1 %14, label %tag4, label %tag21

tag4:                                             ; preds = %header-check-br58, %header-check-br65, %normal-dest34, %tag22, %tag21, %tag9, %tag3, %normal-dest49
  %15 = phi i64 [ %.pre, %normal-dest49 ], [ %34, %tag21 ], [ %34, %tag3 ], [ %34, %tag22 ], [ %34, %tag9 ], [ %34, %normal-dest34 ], [ %34, %header-check-br65 ], [ %34, %header-check-br58 ]
  %16 = phi {}* [ %36, %normal-dest49 ], [ %29, %tag21 ], [ %29, %tag3 ], [ %29, %tag22 ], [ %29, %tag9 ], [ %29, %normal-dest34 ], [ %29, %header-check-br65 ], [ %29, %header-check-br58 ]
  %object.0 = phi {}* [ %object.1, %normal-dest49 ], [ %29, %tag21 ], [ %29, %tag3 ], [ %29, %tag22 ], [ %29, %tag9 ], [ %.val, %normal-dest34 ], [ %29, %header-check-br65 ], [ %29, %header-check-br58 ]
  %17 = icmp eq {}* %object.0, %16
  %.cast = ptrtoint {}* %16 to i64
  %.sink = select i1 %17, i64 %15, i64 %.cast
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %18 = inttoptr i64 %.sink to {}*
  %19 = insertvalue { {}*, i64 } undef, {}* %18, 0
  %20 = insertvalue { {}*, i64 } %19, i64 1, 1
  ret { {}*, i64 } %20

tag9:                                             ; preds = %header-check-br58, %header-check-br58, %header-check-br58, %header-check-br58
  %21 = ptrtoint {}* %31 to i64
  %single-float-tag-only72 = and i64 %21, 7
  %22 = icmp eq i64 %single-float-tag-only72, 6
  br i1 %22, label %tag4, label %tag22

tag21:                                            ; preds = %tag3
  %fixnum-tag-only100126 = and i64 %13, 3
  %fixnump-test101 = icmp ne i64 %fixnum-tag-only100126, 0
  %test61 = icmp eq i64 %single-float-tag-only, 1
  %or.cond = and i1 %fixnump-test101, %test61
  br i1 %or.cond, label %header-check-br58, label %tag4

tag22:                                            ; preds = %tag9
  %fixnum-tag-only102128 = and i64 %21, 3
  %fixnump-test103 = icmp ne i64 %fixnum-tag-only102128, 0
  %test68 = icmp eq i64 %single-float-tag-only72, 1
  %or.cond137 = and i1 %fixnump-test103, %test68
  br i1 %or.cond137, label %header-check-br65, label %tag4

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest42, %tag, %normal-dest31, %normal-dest
  %23 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %23

normal-dest:                                      ; preds = %entry
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest31 unwind label %cleanup-lpad

normal-dest31:                                    ; preds = %normal-dest
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 35), align 8
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 77), align 8
  %ptrtoint = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 3, {}* %farg0, {}* %26, {}* %27, {}* null)
          to label %normal-dest34 unwind label %cleanup-lpad

normal-dest34:                                    ; preds = %normal-dest31
  %.elt = extractvalue { {}*, i64 } %28, 0
  %.elt122 = extractvalue { {}*, i64 } %28, 1
  %cond = icmp eq i64 %.elt122, 0
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %.in = select i1 %cond, {}* %29, {}* %.elt
  %30 = bitcast {}* %.in to i8*
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 77), align 8
  %32 = icmp eq {}* %.in, %31
  %.val = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G150937.0 = select i1 %32, {}* %.val, {}* %29
  %33 = icmp eq {}* %G150937.0, %29
  %34 = ptrtoint {}* %.val to i64
  br i1 %33, label %tag3, label %tag4

normal-dest42:                                    ; preds = %tag
  %ptrtoint43 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %12, i64 2, {}* nonnull %.in, {}* nonnull %31, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %normal-dest42
  %.elt131 = extractvalue { {}*, i64 } %35, 0
  %.elt133 = extractvalue { {}*, i64 } %35, 1
  %cond120 = icmp eq i64 %.elt133, 0
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %object.1 = select i1 %cond120, {}* %36, {}* %.elt131
  %.pre = load i64, i64* bitcast ({}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13) to i64*), align 8
  br label %tag4

header-check-br58:                                ; preds = %tag21
  %gep63 = getelementptr inbounds i8, i8* %30, i64 -9
  %irc-bit-cast64 = bitcast i8* %gep63 to i64*
  %37 = load i64, i64* %irc-bit-cast64, align 8
  %38 = add i64 %37, -1309
  %39 = lshr i64 %38, 3
  %40 = shl i64 %38, 61
  %41 = or i64 %39, %40
  switch i64 %41, label %tag4 [
    i64 2, label %tag9
    i64 4, label %tag9
    i64 5, label %tag9
    i64 0, label %tag9
  ]

header-check-br65:                                ; preds = %tag22
  %irc-bit-cast69 = bitcast {}* %31 to i8*
  %gep70 = getelementptr inbounds i8, i8* %irc-bit-cast69, i64 -9
  %irc-bit-cast71 = bitcast i8* %gep70 to i64*
  %42 = load i64, i64* %irc-bit-cast71, align 8
  %43 = add i64 %42, -1309
  %44 = lshr i64 %43, 3
  %45 = shl i64 %43, 61
  %46 = or i64 %44, %45
  switch i64 %46, label %tag4 [
    i64 2, label %tag
    i64 4, label %tag
    i64 5, label %tag
    i64 0, label %tag
  ]
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^382^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !71 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^382^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest10, %header-check-br13
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest30 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest37, %normal-dest26, %header-check-br
  %G150964.0 = phi {}* [ %18, %header-check-br ], [ %G150964.1, %normal-dest26 ], [ %G150964.2, %normal-dest37 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 312), align 16
  %ptrtoint43 = ptrtoint {}* %G150964.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G150964.0, i64 2, {}* %"closure->YAS=EINE_INSTANZ_P", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag3, %normal-dest30, %tag2, %normal-dest22, %maybe-more-tests21, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 312), align 16
  %"closure->YAS=EINE_INSTANZ_P" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=EINE_INSTANZ_P^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=EINE_INSTANZ_P^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 14277, i64 382, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag3, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag2

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %maybe-more-tests21
  %ptrtoint23 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint = add i64 %ptrtoint23, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest22
  %.elt101 = extractvalue { {}*, i64 } %24, 0
  %.elt103 = extractvalue { {}*, i64 } %24, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150964.1 = select i1 %cond82, {}* %25, {}* %.elt101
  br label %tag3

normal-dest30:                                    ; preds = %tag2
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 574), align 16
  %ptrtoint31 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %12, i64 5, {}* %26, {}* %27, {}* %18, {}* %28, {}* %29)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt = extractvalue { {}*, i64 } %30, 0
  %.elt84 = extractvalue { {}*, i64 } %30, 1
  %cond = icmp eq i64 %.elt84, 0
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G150964.2 = select i1 %cond, {}* %31, {}* %.elt
  br label %tag3

normal-dest49:                                    ; preds = %tag3
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 575), align 8
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->YAS=EINE_INSTANZ_P", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 576), align 16
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->YAS=EINE_INSTANZ_P", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 1528 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 312), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=EINE_INSTANZ_P^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !72 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=EINE_INSTANZ_P^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=EINE_INSTANZ_P^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc135 unwind label %cleanup-lpad

.noexc135:                                        ; preds = %10
  unreachable

tag8:                                             ; preds = %tag17
  %fixnum-tag-only126 = and i64 %14, 3
  %fixnump-test = icmp ne i64 %fixnum-tag-only126, 0
  %test = icmp eq i64 %single-float-tag-only91, 1
  %or.cond = and i1 %fixnump-test, %test
  br i1 %or.cond, label %header-check-br, label %tag21

tag10:                                            ; preds = %header-check-br92, %header-check-br92, %header-check-br92, %header-check-br92
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 75), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest68 unwind label %cleanup-lpad

tag14:                                            ; preds = %header-check-br, %header-check-br, %header-check-br, %header-check-br
  %13 = ptrtoint {}* %30 to i64
  %single-float-tag-only83 = and i64 %13, 7
  %fixnum-tag-only81128 = and i64 %13, 3
  %fixnump-test82 = icmp ne i64 %fixnum-tag-only81128, 0
  %test95 = icmp eq i64 %single-float-tag-only83, 1
  %or.cond138 = and i1 %fixnump-test82, %test95
  br i1 %or.cond138, label %header-check-br92, label %tag21

tag17:                                            ; preds = %normal-dest34
  %14 = ptrtoint {}* %.in to i64
  %single-float-tag-only91 = and i64 %14, 7
  %15 = icmp eq i64 %single-float-tag-only91, 6
  br i1 %15, label %tag21, label %tag8

tag21:                                            ; preds = %header-check-br92, %header-check-br, %normal-dest34, %tag14, %tag8, %tag17, %normal-dest75
  %16 = phi i64 [ %.pre, %normal-dest75 ], [ %33, %tag14 ], [ %33, %tag17 ], [ %33, %tag8 ], [ %33, %normal-dest34 ], [ %33, %header-check-br ], [ %33, %header-check-br92 ]
  %17 = phi {}* [ %40, %normal-dest75 ], [ %28, %tag14 ], [ %28, %tag17 ], [ %28, %tag8 ], [ %28, %normal-dest34 ], [ %28, %header-check-br ], [ %28, %header-check-br92 ]
  %object.0 = phi {}* [ %object.1, %normal-dest75 ], [ %28, %tag14 ], [ %28, %tag17 ], [ %28, %tag8 ], [ %.val, %normal-dest34 ], [ %28, %header-check-br ], [ %28, %header-check-br92 ]
  %18 = icmp eq {}* %object.0, %17
  %.cast = ptrtoint {}* %17 to i64
  %.sink = select i1 %18, i64 %16, i64 %.cast
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %19 = inttoptr i64 %.sink to {}*
  %20 = insertvalue { {}*, i64 } undef, {}* %19, 0
  %21 = insertvalue { {}*, i64 } %20, i64 1, 1
  ret { {}*, i64 } %21

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest68, %tag10, %normal-dest31, %normal-dest
  %22 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %22

normal-dest:                                      ; preds = %entry
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest31 unwind label %cleanup-lpad

normal-dest31:                                    ; preds = %normal-dest
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 37), align 8
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 77), align 8
  %ptrtoint = ptrtoint {}* %24 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %24, i64 3, {}* %farg0, {}* %25, {}* %26, {}* null)
          to label %normal-dest34 unwind label %cleanup-lpad

normal-dest34:                                    ; preds = %normal-dest31
  %.elt = extractvalue { {}*, i64 } %27, 0
  %.elt122 = extractvalue { {}*, i64 } %27, 1
  %cond = icmp eq i64 %.elt122, 0
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %.in = select i1 %cond, {}* %28, {}* %.elt
  %29 = bitcast {}* %.in to i8*
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 77), align 8
  %31 = icmp eq {}* %.in, %30
  %.val = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G150994.0 = select i1 %31, {}* %.val, {}* %28
  %32 = icmp eq {}* %G150994.0, %28
  %33 = ptrtoint {}* %.val to i64
  br i1 %32, label %tag17, label %tag21

header-check-br:                                  ; preds = %tag8
  %gep = getelementptr inbounds i8, i8* %29, i64 -9
  %irc-bit-cast43 = bitcast i8* %gep to i64*
  %34 = load i64, i64* %irc-bit-cast43, align 8
  %35 = add i64 %34, -1309
  %36 = lshr i64 %35, 3
  %37 = shl i64 %35, 61
  %38 = or i64 %36, %37
  switch i64 %38, label %tag21 [
    i64 2, label %tag14
    i64 4, label %tag14
    i64 5, label %tag14
    i64 0, label %tag14
  ]

normal-dest68:                                    ; preds = %tag10
  %ptrtoint69 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %12, i64 2, {}* nonnull %.in, {}* nonnull %30, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %.elt131 = extractvalue { {}*, i64 } %39, 0
  %.elt133 = extractvalue { {}*, i64 } %39, 1
  %cond120 = icmp eq i64 %.elt133, 0
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %object.1 = select i1 %cond120, {}* %40, {}* %.elt131
  %.pre = load i64, i64* bitcast ({}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13) to i64*), align 8
  br label %tag21

header-check-br92:                                ; preds = %tag14
  %irc-bit-cast96 = bitcast {}* %30 to i8*
  %gep97 = getelementptr inbounds i8, i8* %irc-bit-cast96, i64 -9
  %irc-bit-cast98 = bitcast i8* %gep97 to i64*
  %41 = load i64, i64* %irc-bit-cast98, align 8
  %42 = add i64 %41, -1309
  %43 = lshr i64 %42, 3
  %44 = shl i64 %42, 61
  %45 = or i64 %43, %44
  switch i64 %45, label %tag21 [
    i64 2, label %tag10
    i64 4, label %tag10
    i64 5, label %tag10
    i64 0, label %tag10
  ]
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^387^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !73 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^387^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G151023.0 = phi {}* [ %18, %header-check-br ], [ %G151023.1, %normal-dest63 ], [ %G151023.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 464), align 16
  %ptrtoint22 = ptrtoint {}* %G151023.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint22, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G151023.0, i64 2, {}* %"closure->YAS=EIN_OBJEKT_P", {}* %11, {}* null, {}* null)
          to label %normal-dest25 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br13
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest56, %maybe-more-tests21, %normal-dest41, %normal-dest35, %normal-dest28, %normal-dest25, %tag2, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 464), align 16
  %"closure->YAS=EIN_OBJEKT_P" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=EIN_OBJEKT_P^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=EIN_OBJEKT_P^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 14437, i64 387, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag4

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest56 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %tag2
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest25
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 581), align 8
  %ptrtoint29 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %25, i64 2, {}* %"closure->YAS=EIN_OBJEKT_P", {}* %26, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %normal-dest28
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 582), align 16
  %ptrtoint42 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %29, i64 2, {}* %"closure->YAS=EIN_OBJEKT_P", {}* %30, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %32, {}* inttoptr (i64 1548 to {}*))
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 464), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %34 = insertvalue { {}*, i64 } undef, {}* %33, 0
  %35 = insertvalue { {}*, i64 } %34, i64 1, 1
  ret { {}*, i64 } %35

normal-dest56:                                    ; preds = %maybe-more-tests21
  %ptrtoint57 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt101 = extractvalue { {}*, i64 } %36, 0
  %.elt103 = extractvalue { {}*, i64 } %36, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %37 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151023.1 = select i1 %cond82, {}* %37, {}* %.elt101
  br label %tag2

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 580), align 16
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151023.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=EIN_OBJEKT_P^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !74 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=EIN_OBJEKT_P^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=EIN_OBJEKT_P^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc56 unwind label %cleanup-lpad

.noexc56:                                         ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest12, %normal-dest27, %normal-dest41
  %return-value.sroa.8.0 = phi i64 [ %.elt55, %normal-dest41 ], [ 1, %normal-dest27 ], [ 1, %normal-dest12 ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt53, %normal-dest41 ], [ %G151007.0, %normal-dest27 ], [ %21, %normal-dest12 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %11 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %12 = insertvalue { {}*, i64 } %11, i64 %return-value.sroa.8.0, 1
  ret { {}*, i64 } %12

tag3:                                             ; preds = %normal-dest12
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 312), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest20 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest27
  %15 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 281), align 8
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest34 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest34, %tag4, %normal-dest20, %tag3, %normal-dest9, %normal-dest
  %17 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %17

normal-dest:                                      ; preds = %entry
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 578), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %19 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %19, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest9
  %.elt = extractvalue { {}*, i64 } %20, 0
  %.elt44 = extractvalue { {}*, i64 } %20, 1
  %cond = icmp eq i64 %.elt44, 0
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151051.0 = select i1 %cond, {}* %21, {}* %.elt
  %22 = icmp eq {}* %G151051.0, %21
  br i1 %22, label %tag, label %tag3

normal-dest20:                                    ; preds = %tag3
  %ptrtoint21 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint22 = add i64 %ptrtoint21, 7
  %entry-point-addr23 = inttoptr i64 %entry-point-addr-uint22 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point24 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr23, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point24({}* %14, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest27 unwind label %cleanup-lpad

normal-dest27:                                    ; preds = %normal-dest20
  %.elt46 = extractvalue { {}*, i64 } %23, 0
  %.elt48 = extractvalue { {}*, i64 } %23, 1
  %cond42 = icmp eq i64 %.elt48, 0
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151007.0 = select i1 %cond42, {}* %24, {}* %.elt46
  %25 = icmp eq {}* %G151007.0, %24
  br i1 %25, label %tag4, label %tag

normal-dest34:                                    ; preds = %tag4
  %ptrtoint35 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint36 = add i64 %ptrtoint35, 7
  %entry-point-addr37 = inttoptr i64 %entry-point-addr-uint36 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point38 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr37, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point38({}* %16, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest34
  %.elt53 = extractvalue { {}*, i64 } %26, 0
  %.elt55 = extractvalue { {}*, i64 } %26, 1
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^394^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !75 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^394^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest10, %header-check-br73
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest21 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G151080.0 = phi {}* [ %18, %header-check-br ], [ %G151080.1, %normal-dest17 ], [ %G151080.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 592), align 16
  %ptrtoint34 = ptrtoint {}* %G151080.0 to i64
  %entry-point-addr-uint35 = add i64 %ptrtoint34, 7
  %entry-point-addr36 = inttoptr i64 %entry-point-addr-uint35 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point37 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr36, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point37({}* %G151080.0, i64 2, {}* %"closure->YAS=SORTIERE_KLASSE", {}* %13, {}* null, {}* null)
          to label %normal-dest40 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest59, %normal-dest53, %normal-dest46, %normal-dest40, %tag3, %normal-dest21, %tag2, %normal-dest13, %maybe-more-tests81, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 592), align 16
  %"closure->YAS=SORTIERE_KLASSE" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=SORTIERE_KLASSE^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=SORTIERE_KLASSE^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 14597, i64 394, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag3, label %header-check-br73

normal-dest13:                                    ; preds = %maybe-more-tests81
  %ptrtoint14 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151080.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag3

normal-dest21:                                    ; preds = %tag2
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 591), align 8
  %ptrtoint22 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %12, i64 5, {}* %23, {}* %24, {}* %18, {}* %25, {}* %26)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt = extractvalue { {}*, i64 } %27, 0
  %.elt84 = extractvalue { {}*, i64 } %27, 1
  %cond = icmp eq i64 %.elt84, 0
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151080.2 = select i1 %cond, {}* %28, {}* %.elt
  br label %tag3

normal-dest40:                                    ; preds = %tag3
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest46 unwind label %cleanup-lpad

normal-dest46:                                    ; preds = %normal-dest40
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 594), align 16
  %ptrtoint47 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint48 = add i64 %ptrtoint47, 7
  %entry-point-addr49 = inttoptr i64 %entry-point-addr-uint48 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point50 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr49, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point50({}* %30, i64 2, {}* %"closure->YAS=SORTIERE_KLASSE", {}* %31, {}* null, {}* null)
          to label %normal-dest53 unwind label %cleanup-lpad

normal-dest53:                                    ; preds = %normal-dest46
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest59 unwind label %cleanup-lpad

normal-dest59:                                    ; preds = %normal-dest53
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 595), align 8
  %ptrtoint60 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint61 = add i64 %ptrtoint60, 7
  %entry-point-addr62 = inttoptr i64 %entry-point-addr-uint61 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point63 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr62, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point63({}* %34, i64 2, {}* %"closure->YAS=SORTIERE_KLASSE", {}* %35, {}* null, {}* null)
          to label %normal-dest66 unwind label %cleanup-lpad

normal-dest66:                                    ; preds = %normal-dest59
  %37 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %37, {}* inttoptr (i64 1576 to {}*))
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 592), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %39 = insertvalue { {}*, i64 } undef, {}* %38, 0
  %40 = insertvalue { {}*, i64 } %39, i64 1, 1
  ret { {}*, i64 } %40

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag2

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest13 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=SORTIERE_KLASSE^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !76 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=SORTIERE_KLASSE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=SORTIERE_KLASSE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc139 unwind label %cleanup-lpad

.noexc139:                                        ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest98, %header-check-br72, %normal-dest36
  %G151103.0 = phi {}* [ %G151103.1, %normal-dest36 ], [ %43, %header-check-br72 ], [ %G151103.2, %normal-dest98 ]
  %ptrtoint18 = ptrtoint {}* %G151103.0 to i64
  %entry-point-addr-uint19 = add i64 %ptrtoint18, 7
  %entry-point-addr20 = inttoptr i64 %entry-point-addr-uint19 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point21 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr20, align 8
  %11 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point21({}* %G151103.0, i64 3, {}* %G151060151061.0, {}* %farg0, {}* %14, {}* null)
          to label %tag5 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest71, %header-check-br
  %12 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest29 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest15
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 39), align 8
  %15 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 586), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest43 unwind label %cleanup-lpad

tag5:                                             ; preds = %tag, %normal-dest82
  %.sink137 = phi { {}*, i64 } [ %48, %normal-dest82 ], [ %11, %tag ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %.sink137

tag6:                                             ; preds = %normal-dest15
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 468), align 16
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest82 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest91, %maybe-more-tests, %normal-dest82, %tag6, %normal-dest65, %normal-dest58, %normal-dest52, %normal-dest45, %normal-dest43, %tag3, %normal-dest29, %tag2, %tag, %normal-dest12, %normal-dest
  %19 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %19

normal-dest:                                      ; preds = %entry
  %20 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 281), align 8
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %21 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %22 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %21, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest15 unwind label %cleanup-lpad

normal-dest15:                                    ; preds = %normal-dest12
  %.elt = extractvalue { {}*, i64 } %22, 0
  %.elt109 = extractvalue { {}*, i64 } %22, 1
  %cond = icmp eq i64 %.elt109, 0
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151133.0 = select i1 %cond, {}* %23, {}* %.elt
  %24 = icmp eq {}* %G151133.0, %23
  br i1 %24, label %tag6, label %tag3

header-check-br:                                  ; preds = %header-check-br72
  %.off144 = add i64 %44, -1001
  %25 = icmp ult i64 %.off144, 5
  br i1 %25, label %maybe-more-tests, label %tag2

maybe-more-tests:                                 ; preds = %header-check-br
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest91 unwind label %cleanup-lpad

normal-dest29:                                    ; preds = %tag2
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 590), align 16
  %ptrtoint30 = ptrtoint {}* %13 to i64
  %entry-point-addr-uint31 = add i64 %ptrtoint30, 7
  %entry-point-addr32 = inttoptr i64 %entry-point-addr-uint31 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point33 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr32, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point33({}* %13, i64 5, {}* %28, {}* %29, {}* %43, {}* %30, {}* %31)
          to label %normal-dest36 unwind label %cleanup-lpad

normal-dest36:                                    ; preds = %normal-dest29
  %.elt119 = extractvalue { {}*, i64 } %32, 0
  %.elt121 = extractvalue { {}*, i64 } %32, 1
  %cond106 = icmp eq i64 %.elt121, 0
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151103.1 = select i1 %cond106, {}* %33, {}* %.elt119
  br label %tag

normal-dest43:                                    ; preds = %tag3
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest43
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 39), align 8
  %ptrtoint46 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %35, i64 2, {}* %farg0, {}* %36, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 236), align 16
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %39, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.15", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.15^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 14597, i64 394, i64 0, i64 0)
          to label %normal-dest58 unwind label %cleanup-lpad

normal-dest58:                                    ; preds = %normal-dest52
  %.elt113 = extractvalue { {}*, i64 } %37, 1
  %cond104 = icmp eq i64 %.elt113, 0
  %.elt111 = extractvalue { {}*, i64 } %37, 0
  %G151121.0 = select i1 %cond104, {}* %38, {}* %.elt111
  %ptrtoint59 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint60 = add i64 %ptrtoint59, 7
  %entry-point-addr61 = inttoptr i64 %entry-point-addr-uint60 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point62 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr61, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point62({}* %16, i64 2, {}* %G151121.0, {}* %"closure->LAMBDA", {}* null, {}* null)
          to label %normal-dest65 unwind label %cleanup-lpad

normal-dest65:                                    ; preds = %normal-dest58
  %.elt115 = extractvalue { {}*, i64 } %40, 0
  %.elt117 = extractvalue { {}*, i64 } %40, 1
  %cond105 = icmp eq i64 %.elt117, 0
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151060151061.0 = select i1 %cond105, {}* %41, {}* %.elt115
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %43 = invoke {}* @cc_safe_setfdefinition({}* %42)
          to label %normal-dest71 unwind label %cleanup-lpad

normal-dest71:                                    ; preds = %normal-dest65
  %ptrtoint73 = ptrtoint {}* %43 to i64
  %tag-only74 = and i64 %ptrtoint73, 7
  %test75 = icmp eq i64 %tag-only74, 1
  br i1 %test75, label %header-check-br72, label %tag2

header-check-br72:                                ; preds = %normal-dest71
  %irc-bit-cast76 = bitcast {}* %43 to i8*
  %gep77 = getelementptr inbounds i8, i8* %irc-bit-cast76, i64 -9
  %irc-bit-cast78 = bitcast i8* %gep77 to i64*
  %44 = load i64, i64* %irc-bit-cast78, align 8
  %.off = add i64 %44, -913
  %45 = icmp ult i64 %.off, 85
  br i1 %45, label %tag, label %header-check-br

normal-dest82:                                    ; preds = %tag6
  %46 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 584), align 16
  %47 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 585), align 8
  %ptrtoint83 = ptrtoint {}* %18 to i64
  %entry-point-addr-uint84 = add i64 %ptrtoint83, 7
  %entry-point-addr85 = inttoptr i64 %entry-point-addr-uint84 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point86 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr85, align 8
  %48 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point86({}* %18, i64 3, {}* %46, {}* %47, {}* %farg0, {}* null)
          to label %tag5 unwind label %cleanup-lpad

normal-dest91:                                    ; preds = %maybe-more-tests
  %ptrtoint92 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint93 = add i64 %ptrtoint92, 7
  %entry-point-addr94 = inttoptr i64 %entry-point-addr-uint93 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point95 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr94, align 8
  %49 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point95({}* %27, i64 1, {}* nonnull %43, {}* null, {}* null, {}* null)
          to label %normal-dest98 unwind label %cleanup-lpad

normal-dest98:                                    ; preds = %normal-dest91
  %.elt130 = extractvalue { {}*, i64 } %49, 0
  %.elt132 = extractvalue { {}*, i64 } %49, 1
  %cond107 = icmp eq i64 %.elt132, 0
  %50 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151103.2 = select i1 %cond107, {}* %50, {}* %.elt130
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.15"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !77 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.15^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.15^DESC" to %0*)) #7
          to label %.noexc14 unwind label %cleanup-lpad

.noexc14:                                         ; preds = %13
  unreachable

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest5, %normal-dest
  %14 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %14

normal-dest:                                      ; preds = %11
  %15 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 588), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %16 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %17 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %16, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest8 unwind label %cleanup-lpad

normal-dest8:                                     ; preds = %normal-dest5
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %17
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^403^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !78 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^403^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br59
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest76, %normal-dest17, %header-check-br
  %G151166.0 = phi {}* [ %18, %header-check-br ], [ %G151166.1, %normal-dest17 ], [ %G151166.2, %normal-dest76 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 478), align 16
  %ptrtoint20 = ptrtoint {}* %G151166.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G151166.0, i64 2, {}* %"closure->YAS-SCHREIBE_INFORMANT", {}* %13, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests67, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag1, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 478), align 16
  %"closure->YAS-SCHREIBE_INFORMANT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS-SCHREIBE_INFORMANT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-SCHREIBE_INFORMANT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 14913, i64 403, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br59

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 605), align 8
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151166.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag1

normal-dest26:                                    ; preds = %tag1
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 606), align 16
  %ptrtoint33 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %28, i64 2, {}* %"closure->YAS-SCHREIBE_INFORMANT", {}* %29, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 611), align 8
  %ptrtoint46 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %32, i64 2, {}* %"closure->YAS-SCHREIBE_INFORMANT", {}* %33, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %35, {}* inttoptr (i64 1612 to {}*))
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 478), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %37 = insertvalue { {}*, i64 } undef, {}* %36, 0
  %38 = insertvalue { {}*, i64 } %37, i64 1, 1
  ret { {}*, i64 } %38

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %39 = icmp ult i64 %.off106, 5
  br i1 %39, label %maybe-more-tests67, label %tag

maybe-more-tests67:                               ; preds = %header-check-br59
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %maybe-more-tests67
  %ptrtoint70 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %41, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151166.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS-SCHREIBE_INFORMANT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !79 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 3
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 3, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-SCHREIBE_INFORMANT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 3
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 3, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-SCHREIBE_INFORMANT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc116 unwind label %cleanup-lpad

.noexc116:                                        ; preds = %13
  unreachable

tag2:                                             ; preds = %normal-dest36, %header-check-br81
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest55 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest62, %normal-dest48, %header-check-br
  %G151185.0 = phi {}* [ %28, %header-check-br ], [ %G151185.1, %normal-dest48 ], [ %G151185.2, %normal-dest62 ]
  %ptrtoint68 = ptrtoint {}* %G151185.0 to i64
  %entry-point-addr-uint69 = add i64 %ptrtoint68, 7
  %entry-point-addr70 = inttoptr i64 %entry-point-addr-uint69 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point71 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr70, align 8
  %16 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point71({}* %G151185.0, i64 3, {}* %G151148.0, {}* %farg0, {}* %18, {}* null)
          to label %normal-dest74 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %13, %10, %tag3, %normal-dest55, %tag2, %normal-dest41, %maybe-more-tests89, %normal-dest30, %normal-dest18, %normal-dest15, %normal-dest13, %normal-dest
  %17 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %17

normal-dest:                                      ; preds = %11
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 41), align 8
  %19 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 602), align 16
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest13:                                    ; preds = %normal-dest
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest15 unwind label %cleanup-lpad

normal-dest15:                                    ; preds = %normal-dest13
  %ptrtoint = ptrtoint {}* %22 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %22, i64 2, {}* %farg0, {}* %18, {}* null, {}* null)
          to label %normal-dest18 unwind label %cleanup-lpad

normal-dest18:                                    ; preds = %normal-dest15
  %.elt = extractvalue { {}*, i64 } %23, 0
  %.elt95 = extractvalue { {}*, i64 } %23, 1
  %cond90 = icmp eq i64 %.elt95, 0
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151203.0 = select i1 %cond90, {}* %24, {}* %.elt
  %ptrtoint24 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint25 = add i64 %ptrtoint24, 7
  %entry-point-addr26 = inttoptr i64 %entry-point-addr-uint25 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point27 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr26, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point27({}* %20, i64 3, {}* %G151203.0, {}* %farg2, {}* %farg1, {}* null)
          to label %normal-dest30 unwind label %cleanup-lpad

normal-dest30:                                    ; preds = %normal-dest18
  %.elt97 = extractvalue { {}*, i64 } %25, 0
  %.elt99 = extractvalue { {}*, i64 } %25, 1
  %cond91 = icmp eq i64 %.elt99, 0
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151148.0 = select i1 %cond91, {}* %26, {}* %.elt97
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %28 = invoke {}* @cc_safe_setfdefinition({}* %27)
          to label %normal-dest36 unwind label %cleanup-lpad

normal-dest36:                                    ; preds = %normal-dest30
  %ptrtoint37 = ptrtoint {}* %28 to i64
  %tag-only = and i64 %ptrtoint37, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest36
  %irc-bit-cast38 = bitcast {}* %28 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast38, i64 -9
  %irc-bit-cast39 = bitcast i8* %gep to i64*
  %29 = load i64, i64* %irc-bit-cast39, align 8
  %.off = add i64 %29, -913
  %30 = icmp ult i64 %.off, 85
  br i1 %30, label %tag3, label %header-check-br81

normal-dest41:                                    ; preds = %maybe-more-tests89
  %ptrtoint42 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %43, i64 1, {}* nonnull %28, {}* null, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %.elt112 = extractvalue { {}*, i64 } %31, 0
  %.elt114 = extractvalue { {}*, i64 } %31, 1
  %cond93 = icmp eq i64 %.elt114, 0
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151185.1 = select i1 %cond93, {}* %32, {}* %.elt112
  br label %tag3

normal-dest55:                                    ; preds = %tag2
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 604), align 16
  %ptrtoint56 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %15, i64 5, {}* %33, {}* %34, {}* %28, {}* %35, {}* %36)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %.elt101 = extractvalue { {}*, i64 } %37, 0
  %.elt103 = extractvalue { {}*, i64 } %37, 1
  %cond92 = icmp eq i64 %.elt103, 0
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151185.2 = select i1 %cond92, {}* %38, {}* %.elt101
  br label %tag3

normal-dest74:                                    ; preds = %tag3
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %39 = insertvalue { {}*, i64 } undef, {}* %farg2, 0
  %40 = insertvalue { {}*, i64 } %39, i64 1, 1
  ret { {}*, i64 } %40

header-check-br81:                                ; preds = %header-check-br
  %.off121 = add i64 %29, -1001
  %41 = icmp ult i64 %.off121, 5
  br i1 %41, label %maybe-more-tests89, label %tag2

maybe-more-tests89:                               ; preds = %header-check-br81
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest41 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^410^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !80 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^410^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br59
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest76, %normal-dest17, %header-check-br
  %G151229.0 = phi {}* [ %18, %header-check-br ], [ %G151229.1, %normal-dest17 ], [ %G151229.2, %normal-dest76 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 332), align 16
  %ptrtoint20 = ptrtoint {}* %G151229.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G151229.0, i64 2, {}* %"closure->YAS=LESE_INFORMANT", {}* %13, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests67, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag1, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 332), align 16
  %"closure->YAS=LESE_INFORMANT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=LESE_INFORMANT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=LESE_INFORMANT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 15083, i64 410, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br59

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 615), align 8
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151229.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag1

normal-dest26:                                    ; preds = %tag1
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 616), align 16
  %ptrtoint33 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %28, i64 2, {}* %"closure->YAS=LESE_INFORMANT", {}* %29, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 617), align 8
  %ptrtoint46 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %32, i64 2, {}* %"closure->YAS=LESE_INFORMANT", {}* %33, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %35, {}* inttoptr (i64 1672 to {}*))
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 332), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %37 = insertvalue { {}*, i64 } undef, {}* %36, 0
  %38 = insertvalue { {}*, i64 } %37, i64 1, 1
  ret { {}*, i64 } %38

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %39 = icmp ult i64 %.off106, 5
  br i1 %39, label %maybe-more-tests67, label %tag

maybe-more-tests67:                               ; preds = %header-check-br59
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %maybe-more-tests67
  %ptrtoint70 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %41, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151229.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=LESE_INFORMANT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !81 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=LESE_INFORMANT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=LESE_INFORMANT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc29 unwind label %cleanup-lpad

.noexc29:                                         ; preds = %13
  unreachable

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest10, %normal-dest7, %normal-dest5, %normal-dest
  %14 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %14

normal-dest:                                      ; preds = %11
  %15 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 613), align 8
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest5
  %19 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 41), align 8
  %ptrtoint = ptrtoint {}* %18 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %18, i64 2, {}* %farg0, {}* %19, {}* null, {}* null)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest7
  %.elt = extractvalue { {}*, i64 } %20, 0
  %.elt21 = extractvalue { {}*, i64 } %20, 1
  %cond = icmp eq i64 %.elt21, 0
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151248.0 = select i1 %cond, {}* %21, {}* %.elt
  %ptrtoint13 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint14 = add i64 %ptrtoint13, 7
  %entry-point-addr15 = inttoptr i64 %entry-point-addr-uint14 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point16 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr15, align 8
  %22 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point16({}* %16, i64 2, {}* %G151248.0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest10
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %22
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^422^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !82 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^422^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest54, %header-check-br
  %G151280.0 = phi {}* [ %18, %header-check-br ], [ %G151280.1, %normal-dest54 ], [ %G151280.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 486), align 16
  %ptrtoint13 = ptrtoint {}* %G151280.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G151280.0, i64 2, {}* %"closure->YAS=NEUER_SLOT", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest10, %header-check-br59
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest47 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests67, %normal-dest47, %tag2, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 486), align 16
  %"closure->YAS=NEUER_SLOT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=NEUER_SLOT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=NEUER_SLOT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 15423, i64 422, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br59

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 629), align 8
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->YAS=NEUER_SLOT", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 632), align 16
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->YAS=NEUER_SLOT", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 1692 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 486), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %tag2
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 628), align 16
  %ptrtoint48 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %14, i64 5, {}* %33, {}* %34, {}* %18, {}* %35, {}* %36)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt = extractvalue { {}*, i64 } %37, 0
  %.elt84 = extractvalue { {}*, i64 } %37, 1
  %cond = icmp eq i64 %.elt84, 0
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151280.1 = select i1 %cond, {}* %38, {}* %.elt
  br label %tag

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %39 = icmp ult i64 %.off106, 5
  br i1 %39, label %maybe-more-tests67, label %tag2

maybe-more-tests67:                               ; preds = %header-check-br59
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %maybe-more-tests67
  %ptrtoint70 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %41, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151280.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=NEUER_SLOT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !83 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 3
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %normal-dest43, %normal-dest134, %normal-dest97
  %.sink179 = phi { {}*, i64 } [ %55, %normal-dest97 ], [ %66, %normal-dest134 ], [ %41, %normal-dest43 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %.sink179

tag1:                                             ; preds = %normal-dest79
  %9 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %10 = invoke {}* @cc_safe_setfdefinition({}* %9)
          to label %normal-dest40 unwind label %cleanup-lpad.loopexit.split-lp

tag2:                                             ; preds = %normal-dest79
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 468), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest43 unwind label %cleanup-lpad.loopexit.split-lp

tag10:                                            ; preds = %normal-dest56
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 619), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest72 unwind label %cleanup-lpad.loopexit.split-lp

tag11:                                            ; preds = %normal-dest127, %normal-dest113, %header-check-br
  %G151305.0 = phi {}* [ %10, %header-check-br ], [ %G151305.1, %normal-dest113 ], [ %G151305.2, %normal-dest127 ]
  %ptrtoint85 = ptrtoint {}* %G151305.0 to i64
  %entry-point-addr-uint86 = add i64 %ptrtoint85, 7
  %entry-point-addr87 = inttoptr i64 %entry-point-addr-uint86 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point88 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr87, align 8
  %15 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point88({}* %G151305.0, i64 3, {}* %50, {}* %vaarg, {}* %vaarg21, {}* null)
          to label %normal-dest91 unwind label %cleanup-lpad.loopexit.split-lp

tag13:                                            ; preds = %normal-dest40, %header-check-br62
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest120 unwind label %cleanup-lpad.loopexit.split-lp

tag14:                                            ; preds = %normal-dest56
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 468), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest134 unwind label %cleanup-lpad.loopexit.split-lp

cleanup-lpad.loopexit:                            ; preds = %loop-kw-args
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %error, %loop-cont, %tag1, %tag2, %normal-dest43, %kw-exit-block, %normal-dest49, %tag10, %normal-dest72, %tag11, %normal-dest91, %normal-dest97, %maybe-more-tests70, %normal-dest106, %tag13, %normal-dest120, %tag14, %normal-dest134
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @":::global-str-YAS=NEUER_SLOT^COMMON-LISP-USER^FN^^", i64 0, i64 0), i64 %nargs, i64 3)
          to label %normal-dest unwind label %cleanup-lpad.loopexit.split-lp

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs19 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-120 = add i64 %rem-nargs19, -1
  store i64 %rem-nargs-120, i64* %"remaining-nargs*", align 8
  %vaarg21 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs23 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-124 = add i64 %rem-nargs23, -1
  store i64 %rem-nargs-124, i64* %"remaining-nargs*", align 8
  %vaarg25 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %20 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 304), align 16
  %23 = icmp eq i64 %nargs, 3
  br i1 %23, label %kw-exit-block, label %loop-kw-args.preheader

loop-kw-args.preheader:                           ; preds = %continue
  br label %loop-kw-args

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

loop-kw-args:                                     ; preds = %loop-kw-args.preheader, %advance-arg-idx-block
  %G151264.0 = phi {}* [ %G151264.2, %advance-arg-idx-block ], [ %21, %loop-kw-args.preheader ]
  %informant.1 = phi {}* [ %informant.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %phi-saw-aok = phi i64 [ %phi-this-was-aok, %advance-arg-idx-block ], [ 0, %loop-kw-args.preheader ]
  %phi-reg-arg-idx = phi i64 [ %30, %advance-arg-idx-block ], [ 3, %loop-kw-args.preheader ]
  %phi-bad-kw-idx = phi i64 [ %phi.aok-bad-good.bad-kw-idx, %advance-arg-idx-block ], [ 65536, %loop-kw-args.preheader ]
  %rem-nargs28 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-129 = add i64 %rem-nargs28, -1
  store i64 %rem-nargs-129, i64* %"remaining-nargs*", align 8
  %vaarg30 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs31 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-132 = add i64 %rem-nargs31, -1
  store i64 %rem-nargs-132, i64* %"remaining-nargs*", align 8
  %vaarg33 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  invoke void @cc_ifNotKeywordException({}* %vaarg30, i64 %phi-reg-arg-idx, { i32, i32, i8*, i8* }* nonnull %"va-list*", { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"YAS=NEUER_SLOT^COMMON-LISP-USER^FN^^^DESC")
          to label %normal-dest34 unwind label %cleanup-lpad.loopexit

kw-exit-block:                                    ; preds = %loop-cont.kw-exit-block_crit_edge, %continue
  %24 = phi {}* [ %21, %continue ], [ %.pre, %loop-cont.kw-exit-block_crit_edge ]
  %G151264.1 = phi {}* [ %21, %continue ], [ %G151264.2, %loop-cont.kw-exit-block_crit_edge ]
  %informant.2 = phi {}* [ undef, %continue ], [ %informant.3, %loop-cont.kw-exit-block_crit_edge ]
  %25 = icmp eq {}* %G151264.1, %24
  %informant.0 = select i1 %25, {}* %24, {}* %informant.2
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 464), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest49 unwind label %cleanup-lpad.loopexit.split-lp

loop-cont:                                        ; preds = %advance-arg-idx-block
  invoke void @cc_ifBadKeywordArgumentException(i64 %phi-this-was-aok, i64 %phi.aok-bad-good.bad-kw-idx, {}* %vaarg30, { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"YAS=NEUER_SLOT^COMMON-LISP-USER^FN^^^DESC")
          to label %loop-cont.kw-exit-block_crit_edge unwind label %cleanup-lpad.loopexit.split-lp

loop-cont.kw-exit-block_crit_edge:                ; preds = %loop-cont
  %.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %kw-exit-block

normal-dest34:                                    ; preds = %loop-kw-args
  %28 = icmp eq {}* %22, %vaarg30
  br i1 %28, label %aok-block, label %"kw-:INFORMANT-test"

aok-block:                                        ; preds = %normal-dest34
  %29 = call i64 @cc_allowOtherKeywords(i64 %phi-saw-aok, {}* %vaarg33)
  br label %advance-arg-idx-block

advance-arg-idx-block:                            ; preds = %matched-kw-block, %next-kw-block, %aok-block
  %G151264.2 = phi {}* [ %G151264.0, %aok-block ], [ %G151264.0, %next-kw-block ], [ %G151264.3, %matched-kw-block ]
  %informant.3 = phi {}* [ %informant.1, %aok-block ], [ %informant.1, %next-kw-block ], [ %informant.4, %matched-kw-block ]
  %phi-this-was-aok = phi i64 [ %29, %aok-block ], [ %phi-saw-aok, %next-kw-block ], [ %phi-saw-aok, %matched-kw-block ]
  %phi.aok-bad-good.bad-kw-idx = phi i64 [ %phi-bad-kw-idx, %aok-block ], [ %36, %next-kw-block ], [ %phi-bad-kw-idx, %matched-kw-block ]
  %30 = add i64 %phi-reg-arg-idx, 2
  %31 = icmp slt i64 %30, %nargs
  br i1 %31, label %loop-kw-args, label %loop-cont

"kw-:INFORMANT-test":                             ; preds = %normal-dest34
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 474), align 16
  %33 = call i64 @cc_matchKeywordOnce({}* %32, {}* %vaarg30, {}* %G151264.0)
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %next-kw-block, label %matched-kw-block

matched-kw-block:                                 ; preds = %"kw-:INFORMANT-test"
  %35 = icmp eq i64 %33, 2
  %G151264.3 = select i1 %35, {}* %G151264.0, {}* %20
  %informant.4 = select i1 %35, {}* %informant.1, {}* %vaarg33
  br label %advance-arg-idx-block

next-kw-block:                                    ; preds = %"kw-:INFORMANT-test"
  %36 = call i64 @cc_trackFirstUnexpectedKeyword(i64 %phi-bad-kw-idx, i64 %phi-reg-arg-idx)
  br label %advance-arg-idx-block

normal-dest40:                                    ; preds = %tag1
  %ptrtoint = ptrtoint {}* %10 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag13

header-check-br:                                  ; preds = %normal-dest40
  %irc-bit-cast41 = bitcast {}* %10 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast41, i64 -9
  %irc-bit-cast42 = bitcast i8* %gep to i64*
  %37 = load i64, i64* %irc-bit-cast42, align 8
  %.off = add i64 %37, -913
  %38 = icmp ult i64 %.off, 85
  br i1 %38, label %tag11, label %header-check-br62

normal-dest43:                                    ; preds = %tag2
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 624), align 16
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 625), align 8
  %ptrtoint44 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint44, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %41 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 4, {}* %39, {}* %40, {}* %vaarg21, {}* %vaarg)
          to label %tag unwind label %cleanup-lpad.loopexit.split-lp

normal-dest49:                                    ; preds = %kw-exit-block
  %ptrtoint50 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint51 = add i64 %ptrtoint50, 7
  %entry-point-addr52 = inttoptr i64 %entry-point-addr-uint51 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point53 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr52, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point53({}* %27, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest56 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest56:                                    ; preds = %normal-dest49
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt147 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt147, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %object.0 = select i1 %cond, {}* %43, {}* %.elt
  %44 = icmp eq {}* %object.0, %43
  %.val = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G151340.0 = select i1 %44, {}* %.val, {}* %43
  %45 = icmp eq {}* %G151340.0, %43
  br i1 %45, label %tag10, label %tag14

header-check-br62:                                ; preds = %header-check-br
  %.off186 = add i64 %37, -1001
  %46 = icmp ult i64 %.off186, 5
  br i1 %46, label %maybe-more-tests70, label %tag13

maybe-more-tests70:                               ; preds = %header-check-br62
  %47 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %48 = invoke {}* @cc_safe_fdefinition({}* %47)
          to label %normal-dest106 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest72:                                    ; preds = %tag10
  %ptrtoint73 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint74 = add i64 %ptrtoint73, 7
  %entry-point-addr75 = inttoptr i64 %entry-point-addr-uint74 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point76 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr75, align 8
  %49 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point76({}* %14, i64 2, {}* %vaarg, {}* %vaarg21, {}* null, {}* null)
          to label %normal-dest79 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest79:                                    ; preds = %normal-dest72
  %.elt156 = extractvalue { {}*, i64 } %49, 0
  %.elt158 = extractvalue { {}*, i64 } %49, 1
  %cond142 = icmp eq i64 %.elt158, 0
  %50 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151329.0 = select i1 %cond142, {}* %50, {}* %.elt156
  %51 = icmp eq {}* %G151329.0, %50
  br i1 %51, label %tag1, label %tag2

normal-dest91:                                    ; preds = %tag11
  %52 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 622), align 16
  %53 = invoke {}* @cc_safe_fdefinition({}* %52)
          to label %normal-dest97 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest97:                                    ; preds = %normal-dest91
  %54 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 474), align 16
  %ptrtoint98 = ptrtoint {}* %53 to i64
  %entry-point-addr-uint99 = add i64 %ptrtoint98, 7
  %entry-point-addr100 = inttoptr i64 %entry-point-addr-uint99 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point101 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr100, align 8
  %55 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point101({}* %53, i64 5, {}* %vaarg, {}* %vaarg21, {}* %vaarg25, {}* %54, {}* %informant.0)
          to label %tag unwind label %cleanup-lpad.loopexit.split-lp

normal-dest106:                                   ; preds = %maybe-more-tests70
  %ptrtoint107 = ptrtoint {}* %48 to i64
  %entry-point-addr-uint108 = add i64 %ptrtoint107, 7
  %entry-point-addr109 = inttoptr i64 %entry-point-addr-uint108 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point110 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr109, align 8
  %56 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point110({}* %48, i64 1, {}* nonnull %10, {}* null, {}* null, {}* null)
          to label %normal-dest113 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest113:                                   ; preds = %normal-dest106
  %.elt176 = extractvalue { {}*, i64 } %56, 0
  %.elt178 = extractvalue { {}*, i64 } %56, 1
  %cond145 = icmp eq i64 %.elt178, 0
  %57 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151305.1 = select i1 %cond145, {}* %57, {}* %.elt176
  br label %tag11

normal-dest120:                                   ; preds = %tag13
  %58 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %59 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %60 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %61 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 621), align 8
  %ptrtoint121 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint122 = add i64 %ptrtoint121, 7
  %entry-point-addr123 = inttoptr i64 %entry-point-addr-uint122 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point124 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr123, align 8
  %62 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point124({}* %17, i64 5, {}* %58, {}* %59, {}* %10, {}* %60, {}* %61)
          to label %normal-dest127 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest127:                                   ; preds = %normal-dest120
  %.elt164 = extractvalue { {}*, i64 } %62, 0
  %.elt166 = extractvalue { {}*, i64 } %62, 1
  %cond144 = icmp eq i64 %.elt166, 0
  %63 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151305.2 = select i1 %cond144, {}* %63, {}* %.elt164
  br label %tag11

normal-dest134:                                   ; preds = %tag14
  %64 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 626), align 16
  %65 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 627), align 8
  %ptrtoint135 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint136 = add i64 %ptrtoint135, 7
  %entry-point-addr137 = inttoptr i64 %entry-point-addr-uint136 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point138 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr137, align 8
  %66 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point138({}* %19, i64 3, {}* %64, {}* %65, {}* %vaarg, {}* null)
          to label %tag unwind label %cleanup-lpad.loopexit.split-lp
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^436^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !84 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^436^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br73
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest21 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G151377.0 = phi {}* [ %18, %header-check-br ], [ %G151377.1, %normal-dest17 ], [ %G151377.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 644), align 16
  %ptrtoint34 = ptrtoint {}* %G151377.0 to i64
  %entry-point-addr-uint35 = add i64 %ptrtoint34, 7
  %entry-point-addr36 = inttoptr i64 %entry-point-addr-uint35 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point37 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr36, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point37({}* %G151377.0, i64 2, {}* %"closure->YAS=LOESCHE_SLOT", {}* %13, {}* null, {}* null)
          to label %normal-dest40 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest59, %normal-dest53, %normal-dest46, %normal-dest40, %tag2, %normal-dest21, %tag1, %normal-dest13, %maybe-more-tests81, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 644), align 16
  %"closure->YAS=LOESCHE_SLOT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=LOESCHE_SLOT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=LOESCHE_SLOT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 15870, i64 436, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br73

normal-dest13:                                    ; preds = %maybe-more-tests81
  %ptrtoint14 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151377.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag2

normal-dest21:                                    ; preds = %tag1
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 643), align 8
  %ptrtoint22 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %12, i64 5, {}* %23, {}* %24, {}* %18, {}* %25, {}* %26)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt = extractvalue { {}*, i64 } %27, 0
  %.elt84 = extractvalue { {}*, i64 } %27, 1
  %cond = icmp eq i64 %.elt84, 0
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151377.2 = select i1 %cond, {}* %28, {}* %.elt
  br label %tag2

normal-dest40:                                    ; preds = %tag2
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest46 unwind label %cleanup-lpad

normal-dest46:                                    ; preds = %normal-dest40
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 646), align 16
  %ptrtoint47 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint48 = add i64 %ptrtoint47, 7
  %entry-point-addr49 = inttoptr i64 %entry-point-addr-uint48 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point50 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr49, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point50({}* %30, i64 2, {}* %"closure->YAS=LOESCHE_SLOT", {}* %31, {}* null, {}* null)
          to label %normal-dest53 unwind label %cleanup-lpad

normal-dest53:                                    ; preds = %normal-dest46
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest59 unwind label %cleanup-lpad

normal-dest59:                                    ; preds = %normal-dest53
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 647), align 8
  %ptrtoint60 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint61 = add i64 %ptrtoint60, 7
  %entry-point-addr62 = inttoptr i64 %entry-point-addr-uint61 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point63 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr62, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point63({}* %34, i64 2, {}* %"closure->YAS=LOESCHE_SLOT", {}* %35, {}* null, {}* null)
          to label %normal-dest66 unwind label %cleanup-lpad

normal-dest66:                                    ; preds = %normal-dest59
  %37 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %37, {}* inttoptr (i64 1744 to {}*))
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 644), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %39 = insertvalue { {}*, i64 } undef, {}* %38, 0
  %40 = insertvalue { {}*, i64 } %39, i64 1, 1
  ret { {}*, i64 } %40

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag1

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest13 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=LOESCHE_SLOT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !85 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  %9 = call [0 x {}*]* @cc_multipleValuesArrayAddress()
  %10 = load i64, i64* %"remaining-nargs*", align 8
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %10)
  %11 = icmp ult i64 %nargs, 2
  br i1 %11, label %12, label %13

; <label>:12:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=LOESCHE_SLOT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %12
  unreachable

; <label>:13:                                     ; preds = %entry
  %14 = icmp eq i64 %nargs, 2
  br i1 %14, label %normal-dest, label %15

; <label>:15:                                     ; preds = %13
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=LOESCHE_SLOT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc194 unwind label %cleanup-lpad

.noexc194:                                        ; preds = %15
  unreachable

tag:                                              ; preds = %normal-dest17
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 619), align 8
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest21 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest17
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 468), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest35 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest28
  %20 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 468), align 16
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest44 unwind label %cleanup-lpad

tag5:                                             ; preds = %normal-dest28
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 638), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest56 unwind label %cleanup-lpad

tag7:                                             ; preds = %tag8, %normal-dest51, %normal-dest42
  %return-value.sroa.19.0 = phi i64 [ %.elt192, %normal-dest42 ], [ %.elt188, %normal-dest51 ], [ 1, %tag8 ]
  %return-value.sroa.0.0 = phi {}* [ %.elt190, %normal-dest42 ], [ %.elt186, %normal-dest51 ], [ %FLAG151357.0, %tag8 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %24 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0, 0
  %25 = insertvalue { {}*, i64 } %24, i64 %return-value.sroa.19.0, 1
  ret { {}*, i64 } %25

tag8:                                             ; preds = %normal-dest142, %normal-dest115, %header-check-br98
  %G151407.0 = phi {}* [ %60, %header-check-br98 ], [ %G151407.1, %normal-dest115 ], [ %G151407.2, %normal-dest142 ]
  %ptrtoint121 = ptrtoint {}* %G151407.0 to i64
  %entry-point-addr-uint122 = add i64 %ptrtoint121, 7
  %entry-point-addr123 = inttoptr i64 %entry-point-addr-uint122 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point124 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr123, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point124({}* %G151407.0, i64 3, {}* %G151354151356.0, {}* %farg0, {}* %48, {}* null)
          to label %tag7 unwind label %cleanup-lpad

tag9:                                             ; preds = %normal-dest97, %header-check-br
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest135 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %15, %12, %normal-dest135, %tag9, %tag8, %normal-dest108, %maybe-more-tests, %mvn-final95, %normal-dest78, %normal-dest71, %normal-dest69, %normal-dest63, %normal-dest56, %tag5, %normal-dest44, %tag2, %normal-dest35, %tag1, %normal-dest21, %tag, %normal-dest14, %normal-dest
  %29 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %29

normal-dest:                                      ; preds = %13
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 464), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest14 unwind label %cleanup-lpad

normal-dest14:                                    ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %31 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %31, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest14
  %.elt = extractvalue { {}*, i64 } %32, 0
  %.elt153 = extractvalue { {}*, i64 } %32, 1
  %cond = icmp eq i64 %.elt153, 0
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151442.0 = select i1 %cond, {}* %33, {}* %.elt
  %34 = icmp eq {}* %G151442.0, %33
  br i1 %34, label %tag1, label %tag

normal-dest21:                                    ; preds = %tag
  %ptrtoint22 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %17, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt155 = extractvalue { {}*, i64 } %35, 0
  %.elt157 = extractvalue { {}*, i64 } %35, 1
  %cond148 = icmp eq i64 %.elt157, 0
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151436.0 = select i1 %cond148, {}* %36, {}* %.elt155
  %37 = icmp eq {}* %G151436.0, %36
  br i1 %37, label %tag2, label %tag5

normal-dest35:                                    ; preds = %tag1
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 634), align 16
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 635), align 8
  %ptrtoint36 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint37 = add i64 %ptrtoint36, 7
  %entry-point-addr38 = inttoptr i64 %entry-point-addr-uint37 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point39 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr38, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point39({}* %19, i64 3, {}* %38, {}* %39, {}* %farg0, {}* null)
          to label %normal-dest42 unwind label %cleanup-lpad

normal-dest42:                                    ; preds = %normal-dest35
  %.elt190 = extractvalue { {}*, i64 } %40, 0
  %.elt192 = extractvalue { {}*, i64 } %40, 1
  br label %tag7

normal-dest44:                                    ; preds = %tag2
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 636), align 16
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 637), align 8
  %ptrtoint45 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint46 = add i64 %ptrtoint45, 7
  %entry-point-addr47 = inttoptr i64 %entry-point-addr-uint46 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point48 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr47, align 8
  %43 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point48({}* %21, i64 4, {}* %41, {}* %42, {}* %farg1, {}* %farg0)
          to label %normal-dest51 unwind label %cleanup-lpad

normal-dest51:                                    ; preds = %normal-dest44
  %.elt186 = extractvalue { {}*, i64 } %43, 0
  %.elt188 = extractvalue { {}*, i64 } %43, 1
  br label %tag7

header-check-br:                                  ; preds = %header-check-br98
  %.off201 = add i64 %61, -1001
  %44 = icmp ult i64 %.off201, 5
  br i1 %44, label %maybe-more-tests, label %tag9

maybe-more-tests:                                 ; preds = %header-check-br
  %45 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %46 = invoke {}* @cc_safe_fdefinition({}* %45)
          to label %normal-dest108 unwind label %cleanup-lpad

normal-dest56:                                    ; preds = %tag5
  %ptrtoint57 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %47 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %23, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %48 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 41), align 8
  %49 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 640), align 16
  %50 = invoke {}* @cc_safe_fdefinition({}* %49)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %normal-dest63
  %51 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %52 = invoke {}* @cc_safe_fdefinition({}* %51)
          to label %normal-dest71 unwind label %cleanup-lpad

normal-dest71:                                    ; preds = %normal-dest69
  %ptrtoint72 = ptrtoint {}* %52 to i64
  %entry-point-addr-uint73 = add i64 %ptrtoint72, 7
  %entry-point-addr74 = inttoptr i64 %entry-point-addr-uint73 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point75 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr74, align 8
  %53 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point75({}* %52, i64 2, {}* %farg0, {}* %48, {}* null, {}* null)
          to label %normal-dest78 unwind label %cleanup-lpad

normal-dest78:                                    ; preds = %normal-dest71
  %.elt163 = extractvalue { {}*, i64 } %53, 0
  %.elt165 = extractvalue { {}*, i64 } %53, 1
  %cond149 = icmp eq i64 %.elt165, 0
  %54 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151425.0 = select i1 %cond149, {}* %54, {}* %.elt163
  %ptrtoint84 = ptrtoint {}* %50 to i64
  %entry-point-addr-uint85 = add i64 %ptrtoint84, 7
  %entry-point-addr86 = inttoptr i64 %entry-point-addr-uint85 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point87 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr86, align 8
  %55 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point87({}* %50, i64 2, {}* %G151425.0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest90 unwind label %cleanup-lpad

normal-dest90:                                    ; preds = %normal-dest78
  %.elt167 = extractvalue { {}*, i64 } %55, 0
  %.elt169 = extractvalue { {}*, i64 } %55, 1
  switch i64 %.elt169, label %mvn2- [
    i64 0, label %mvn0-93
    i64 1, label %mvn1-94
  ]

mvn0-93:                                          ; preds = %normal-dest90
  %56 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %mvn-final95

mvn1-94:                                          ; preds = %normal-dest90
  %57 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %mvn-final95

mvn2-:                                            ; preds = %normal-dest90
  %gep96 = getelementptr inbounds [0 x {}*], [0 x {}*]* %9, i64 0, i64 1
  %58 = load {}*, {}** %gep96, align 8
  br label %mvn-final95

mvn-final95:                                      ; preds = %mvn2-, %mvn1-94, %mvn0-93
  %G151354151356.0 = phi {}* [ %.elt167, %mvn2- ], [ %.elt167, %mvn1-94 ], [ %56, %mvn0-93 ]
  %FLAG151357.0 = phi {}* [ %58, %mvn2- ], [ %57, %mvn1-94 ], [ %56, %mvn0-93 ]
  %59 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %60 = invoke {}* @cc_safe_setfdefinition({}* %59)
          to label %normal-dest97 unwind label %cleanup-lpad

normal-dest97:                                    ; preds = %mvn-final95
  %ptrtoint99 = ptrtoint {}* %60 to i64
  %tag-only100 = and i64 %ptrtoint99, 7
  %test101 = icmp eq i64 %tag-only100, 1
  br i1 %test101, label %header-check-br98, label %tag9

header-check-br98:                                ; preds = %normal-dest97
  %irc-bit-cast102 = bitcast {}* %60 to i8*
  %gep103 = getelementptr inbounds i8, i8* %irc-bit-cast102, i64 -9
  %irc-bit-cast104 = bitcast i8* %gep103 to i64*
  %61 = load i64, i64* %irc-bit-cast104, align 8
  %.off = add i64 %61, -913
  %62 = icmp ult i64 %.off, 85
  br i1 %62, label %tag8, label %header-check-br

normal-dest108:                                   ; preds = %maybe-more-tests
  %ptrtoint109 = ptrtoint {}* %46 to i64
  %entry-point-addr-uint110 = add i64 %ptrtoint109, 7
  %entry-point-addr111 = inttoptr i64 %entry-point-addr-uint110 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point112 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr111, align 8
  %63 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point112({}* %46, i64 1, {}* nonnull %60, {}* null, {}* null, {}* null)
          to label %normal-dest115 unwind label %cleanup-lpad

normal-dest115:                                   ; preds = %normal-dest108
  %.elt182 = extractvalue { {}*, i64 } %63, 0
  %.elt184 = extractvalue { {}*, i64 } %63, 1
  %cond151 = icmp eq i64 %.elt184, 0
  %64 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151407.1 = select i1 %cond151, {}* %64, {}* %.elt182
  br label %tag8

normal-dest135:                                   ; preds = %tag9
  %65 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %66 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %67 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %68 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 642), align 16
  %ptrtoint136 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint137 = add i64 %ptrtoint136, 7
  %entry-point-addr138 = inttoptr i64 %entry-point-addr-uint137 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point139 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr138, align 8
  %69 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point139({}* %28, i64 5, {}* %65, {}* %66, {}* %60, {}* %67, {}* %68)
          to label %normal-dest142 unwind label %cleanup-lpad

normal-dest142:                                   ; preds = %normal-dest135
  %.elt171 = extractvalue { {}*, i64 } %69, 0
  %.elt173 = extractvalue { {}*, i64 } %69, 1
  %cond150 = icmp eq i64 %.elt173, 0
  %70 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151407.2 = select i1 %cond150, {}* %70, {}* %.elt171
  br label %tag8
}

; Function Attrs: nounwind
declare [0 x {}*]* @cc_multipleValuesArrayAddress() local_unnamed_addr #1

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^447^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !86 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^447^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br59
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest76, %normal-dest17, %header-check-br
  %G151466.0 = phi {}* [ %18, %header-check-br ], [ %G151466.1, %normal-dest17 ], [ %G151466.2, %normal-dest76 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 619), align 8
  %ptrtoint20 = ptrtoint {}* %G151466.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G151466.0, i64 2, {}* %"closure->YAS=HAT_OBJEKT_SLOT_P", {}* %13, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests67, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag1, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 619), align 8
  %"closure->YAS=HAT_OBJEKT_SLOT_P" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=HAT_OBJEKT_SLOT_P^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=HAT_OBJEKT_SLOT_P^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 16259, i64 447, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br59

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 649), align 8
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151466.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag1

normal-dest26:                                    ; preds = %tag1
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 650), align 16
  %ptrtoint33 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %28, i64 2, {}* %"closure->YAS=HAT_OBJEKT_SLOT_P", {}* %29, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 651), align 8
  %ptrtoint46 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %32, i64 2, {}* %"closure->YAS=HAT_OBJEKT_SLOT_P", {}* %33, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %35, {}* inttoptr (i64 1788 to {}*))
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 619), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %37 = insertvalue { {}*, i64 } undef, {}* %36, 0
  %38 = insertvalue { {}*, i64 } %37, i64 1, 1
  ret { {}*, i64 } %38

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %39 = icmp ult i64 %.off106, 5
  br i1 %39, label %maybe-more-tests67, label %tag

maybe-more-tests67:                               ; preds = %header-check-br59
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %maybe-more-tests67
  %ptrtoint70 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %41, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151466.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=HAT_OBJEKT_SLOT_P^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !87 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=HAT_OBJEKT_SLOT_P^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=HAT_OBJEKT_SLOT_P^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc134 unwind label %cleanup-lpad

.noexc134:                                        ; preds = %13
  unreachable

tag2:                                             ; preds = %normal-dest98
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest34 unwind label %cleanup-lpad

tag13:                                            ; preds = %normal-dest80, %normal-dest55, %normal-dest98
  %return-value.sroa.0.0.in = phi {}* [ %G151450.0, %normal-dest98 ], [ %.val144., %normal-dest80 ], [ %.val142., %normal-dest55 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %16 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %17 = insertvalue { {}*, i64 } %16, i64 1, 1
  ret { {}*, i64 } %17

tag17:                                            ; preds = %normal-dest28
  %18 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest73 unwind label %cleanup-lpad

tag18:                                            ; preds = %normal-dest28
  %19 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest91 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest91, %tag18, %normal-dest73, %tag17, %normal-dest43, %normal-dest36, %normal-dest34, %tag2, %normal-dest25, %normal-dest
  %20 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %20

normal-dest:                                      ; preds = %11
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 312), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest25 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %22 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %22, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest25
  %.elt = extractvalue { {}*, i64 } %23, 0
  %.elt114 = extractvalue { {}*, i64 } %23, 1
  %cond = icmp eq i64 %.elt114, 0
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151528.0 = select i1 %cond, {}* %24, {}* %.elt
  %25 = icmp eq {}* %G151528.0, %24
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  br i1 %25, label %tag17, label %tag18

normal-dest34:                                    ; preds = %tag2
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest36 unwind label %cleanup-lpad

normal-dest36:                                    ; preds = %normal-dest34
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 37), align 8
  %ptrtoint37 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint38 = add i64 %ptrtoint37, 7
  %entry-point-addr39 = inttoptr i64 %entry-point-addr-uint38 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point40 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr39, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point40({}* %28, i64 2, {}* %farg0, {}* %29, {}* null, {}* null)
          to label %normal-dest43 unwind label %cleanup-lpad

normal-dest43:                                    ; preds = %normal-dest36
  %.elt123 = extractvalue { {}*, i64 } %30, 0
  %.elt125 = extractvalue { {}*, i64 } %30, 1
  %cond110 = icmp eq i64 %.elt125, 0
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151506.0 = select i1 %cond110, {}* %31, {}* %.elt123
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 77), align 8
  %ptrtoint49 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint50 = add i64 %ptrtoint49, 7
  %entry-point-addr51 = inttoptr i64 %entry-point-addr-uint50 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point52 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr51, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point52({}* %15, i64 3, {}* %G151506.0, {}* %farg1, {}* %32, {}* null)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest43
  %.elt127 = extractvalue { {}*, i64 } %33, 0
  %.elt129 = extractvalue { {}*, i64 } %33, 1
  %cond111 = icmp eq i64 %.elt129, 0
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x.0 = select i1 %cond111, {}* %34, {}* %.elt127
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 77), align 8
  %36 = icmp eq {}* %x.0, %35
  %.val142 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %object61.0 = select i1 %36, {}* %.val142, {}* %34
  %37 = icmp eq {}* %object61.0, %34
  %.val142. = select i1 %37, {}* %.val142, {}* %34
  br label %tag13

normal-dest73:                                    ; preds = %tag17
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 77), align 8
  %ptrtoint74 = ptrtoint {}* %18 to i64
  %entry-point-addr-uint75 = add i64 %ptrtoint74, 7
  %entry-point-addr76 = inttoptr i64 %entry-point-addr-uint75 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point77 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr76, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point77({}* %18, i64 3, {}* %farg0, {}* %farg1, {}* %38, {}* null)
          to label %normal-dest80 unwind label %cleanup-lpad

normal-dest80:                                    ; preds = %normal-dest73
  %.elt131 = extractvalue { {}*, i64 } %39, 0
  %.elt133 = extractvalue { {}*, i64 } %39, 1
  %cond112 = icmp eq i64 %.elt133, 0
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x81.0 = select i1 %cond112, {}* %40, {}* %.elt131
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 77), align 8
  %42 = icmp eq {}* %x81.0, %41
  %.val144 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %object64.0 = select i1 %42, {}* %.val144, {}* %40
  %43 = icmp eq {}* %object64.0, %40
  %.val144. = select i1 %43, {}* %.val144, {}* %40
  br label %tag13

normal-dest91:                                    ; preds = %tag18
  %44 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 77), align 8
  %ptrtoint92 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint93 = add i64 %ptrtoint92, 7
  %entry-point-addr94 = inttoptr i64 %entry-point-addr-uint93 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point95 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr94, align 8
  %45 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point95({}* %19, i64 3, {}* %farg0, {}* %farg1, {}* %44, {}* null)
          to label %normal-dest98 unwind label %cleanup-lpad

normal-dest98:                                    ; preds = %normal-dest91
  %.elt116 = extractvalue { {}*, i64 } %45, 0
  %.elt118 = extractvalue { {}*, i64 } %45, 1
  %cond109 = icmp eq i64 %.elt118, 0
  %46 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x99.0 = select i1 %cond109, {}* %46, {}* %.elt116
  %47 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 77), align 8
  %48 = icmp eq {}* %x99.0, %47
  %.val = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %object.0 = select i1 %48, {}* %.val, {}* %46
  %49 = icmp eq {}* %object.0, %46
  %G151450.0 = select i1 %49, {}* %.val, {}* %46
  %50 = icmp eq {}* %G151450.0, %46
  br i1 %50, label %tag2, label %tag13
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^456^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !88 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^456^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest76, %normal-dest54, %header-check-br
  %G151555.0 = phi {}* [ %18, %header-check-br ], [ %G151555.1, %normal-dest54 ], [ %G151555.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 328), align 16
  %ptrtoint13 = ptrtoint {}* %G151555.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G151555.0, i64 2, {}* %"closure->YAS=ALLE_SLOTS", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br59
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest47, %maybe-more-tests67, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 328), align 16
  %"closure->YAS=ALLE_SLOTS" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=ALLE_SLOTS^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=ALLE_SLOTS^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 16605, i64 456, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br59

normal-dest16:                                    ; preds = %tag1
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 656), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->YAS=ALLE_SLOTS", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 657), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->YAS=ALLE_SLOTS", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 1824 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 328), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %maybe-more-tests67
  %ptrtoint48 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %37, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt101 = extractvalue { {}*, i64 } %33, 0
  %.elt103 = extractvalue { {}*, i64 } %33, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151555.1 = select i1 %cond82, {}* %34, {}* %.elt101
  br label %tag1

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %35 = icmp ult i64 %.off106, 5
  br i1 %35, label %maybe-more-tests67, label %tag4

maybe-more-tests67:                               ; preds = %header-check-br59
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest47 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 655), align 8
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151555.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=ALLE_SLOTS^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !89 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=ALLE_SLOTS^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=ALLE_SLOTS^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc213 unwind label %cleanup-lpad.loopexit.split-lp

.noexc213:                                        ; preds = %10
  unreachable

tag1:                                             ; preds = %tag30, %normal-dest85, %tag10
  %11 = phi {}* [ %.val219, %tag10 ], [ %68, %normal-dest85 ], [ %.val219, %tag30 ]
  %object.0 = phi {}* [ %.val219, %tag10 ], [ %object.1, %normal-dest85 ], [ %.val, %tag30 ]
  %12 = icmp eq {}* %object.0, %11
  %.val220 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G151580.0 = select i1 %12, {}* %.val220, {}* %11
  %13 = icmp eq {}* %G151580.0, %11
  br i1 %13, label %tag23, label %tag33

tag3:                                             ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 468), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest48 unwind label %cleanup-lpad.loopexit.split-lp

tag4:                                             ; preds = %normal-dest126
  %16 = add i64 %23, 5
  %17 = inttoptr i64 %16 to {}**
  %18 = load {}*, {}** %17, align 8
  br label %tag17

tag8:                                             ; preds = %normal-dest126
  %19 = icmp eq {}* %LISTE.0, %72
  %.val224 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G151626.0 = select i1 %19, {}* %.val224, {}* %72
  %20 = icmp eq {}* %G151626.0, %72
  br i1 %20, label %tag13, label %tag17

tag9:                                             ; preds = %normal-dest112
  %21 = icmp eq {}* %LISTE.0, %.val223
  %G151645.0 = select i1 %21, {}* %.val222, {}* %.val223
  %22 = icmp eq {}* %G151645.0, %.val223
  br i1 %22, label %tag43, label %tag36

tag10:                                            ; preds = %tag10.backedge, %normal-dest99
  %.val219 = phi {}* [ %70, %normal-dest99 ], [ %.val219.be, %tag10.backedge ]
  %LISTE.0 = phi {}* [ %G151535.0, %normal-dest99 ], [ %LISTE.0.be, %tag10.backedge ]
  %ERGEBNIS.0 = phi {}* [ %70, %normal-dest99 ], [ %ERGEBNIS.1, %tag10.backedge ]
  %23 = ptrtoint {}* %LISTE.0 to i64
  %tag-only180 = and i64 %23, 7
  %consp-test = icmp eq i64 %tag-only180, 3
  br i1 %consp-test, label %tag1, label %tag30

tag13:                                            ; preds = %tag8
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest64 unwind label %cleanup-lpad.loopexit

tag17:                                            ; preds = %tag8, %normal-dest71, %tag4
  %26 = phi {}* [ %72, %tag4 ], [ %62, %normal-dest71 ], [ %72, %tag8 ]
  %x.0 = phi {}* [ %18, %tag4 ], [ %x.1, %normal-dest71 ], [ %72, %tag8 ]
  %27 = ptrtoint {}* %x.0 to i64
  %tag-only75187 = and i64 %27, 7
  %consp-test76 = icmp eq i64 %tag-only75187, 3
  br i1 %consp-test76, label %tag22, label %tag37

tag22:                                            ; preds = %tag17
  %28 = add i64 %27, 5
  %29 = inttoptr i64 %28 to {}**
  %30 = load {}*, {}** %29, align 8
  br label %tag10.backedge

tag23:                                            ; preds = %tag1, %normal-dest51
  %return-value.sroa.15.0 = phi i64 [ %.elt210, %normal-dest51 ], [ 1, %tag1 ]
  %return-value.sroa.0.0 = phi {}* [ %.elt208, %normal-dest51 ], [ %ERGEBNIS.0, %tag1 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0, 0
  %32 = insertvalue { {}*, i64 } %31, i64 %return-value.sroa.15.0, 1
  ret { {}*, i64 } %32

tag25:                                            ; preds = %tag30
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest78 unwind label %cleanup-lpad.loopexit

tag28:                                            ; preds = %normal-dest
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 82), align 16
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest92 unwind label %cleanup-lpad.loopexit.split-lp

tag30:                                            ; preds = %tag10
  %37 = icmp eq {}* %LISTE.0, %.val219
  %.val = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G151593.0 = select i1 %37, {}* %.val, {}* %.val219
  %38 = icmp eq {}* %G151593.0, %.val219
  br i1 %38, label %tag25, label %tag1

tag31:                                            ; preds = %normal-dest112
  %39 = add i64 %23, -3
  %40 = inttoptr i64 %39 to {}**
  %41 = load {}*, {}** %40, align 8
  br label %tag36

tag33:                                            ; preds = %tag1
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 157), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest112 unwind label %cleanup-lpad.loopexit

tag36:                                            ; preds = %tag9, %normal-dest167, %tag31
  %G151634.0 = phi {}* [ %41, %tag31 ], [ %G151634.1, %normal-dest167 ], [ %.val223, %tag9 ]
  %ptrtoint120 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint121 = add i64 %ptrtoint120, 7
  %entry-point-addr122 = inttoptr i64 %entry-point-addr-uint121 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point123 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr122, align 8
  %44 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point123({}* %43, i64 2, {}* %G151634.0, {}* %ERGEBNIS.0, {}* null, {}* null)
          to label %normal-dest126 unwind label %cleanup-lpad.loopexit

tag37:                                            ; preds = %tag17
  %45 = icmp eq {}* %x.0, %26
  %.val226 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G151610.0 = select i1 %45, {}* %.val226, {}* %26
  %46 = icmp eq {}* %G151610.0, %26
  br i1 %46, label %tag40, label %tag10.backedge

tag10.backedge:                                   ; preds = %tag37, %normal-dest153, %tag22
  %.val219.be = phi {}* [ %26, %tag22 ], [ %78, %normal-dest153 ], [ %26, %tag37 ]
  %LISTE.0.be = phi {}* [ %30, %tag22 ], [ %G151539.1, %normal-dest153 ], [ %26, %tag37 ]
  br label %tag10

tag40:                                            ; preds = %tag37
  %47 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %48 = invoke {}* @cc_safe_fdefinition({}* %47)
          to label %normal-dest146 unwind label %cleanup-lpad.loopexit

tag43:                                            ; preds = %tag9
  %49 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %50 = invoke {}* @cc_safe_fdefinition({}* %49)
          to label %normal-dest160 unwind label %cleanup-lpad.loopexit

cleanup-lpad.loopexit:                            ; preds = %tag13, %normal-dest64, %tag25, %normal-dest78, %tag33, %tag36, %tag40, %normal-dest146, %tag43, %normal-dest160
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %tag3, %normal-dest48, %tag28, %normal-dest92, %9, %10
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %51 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %52 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %53 = icmp eq {}* %51, %52
  br i1 %53, label %tag3, label %tag28

normal-dest48:                                    ; preds = %tag3
  %54 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 653), align 8
  %55 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 654), align 16
  %ptrtoint = ptrtoint {}* %15 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %56 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %15, i64 3, {}* %54, {}* %55, {}* %farg0, {}* null)
          to label %normal-dest51 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest51:                                    ; preds = %normal-dest48
  %.elt208 = extractvalue { {}*, i64 } %56, 0
  %.elt210 = extractvalue { {}*, i64 } %56, 1
  br label %tag23

normal-dest64:                                    ; preds = %tag13
  %57 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %58 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %59 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %60 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint65 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint66 = add i64 %ptrtoint65, 7
  %entry-point-addr67 = inttoptr i64 %entry-point-addr-uint66 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point68 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr67, align 8
  %61 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point68({}* %25, i64 5, {}* %57, {}* %58, {}* %LISTE.0, {}* %59, {}* %60)
          to label %normal-dest71 unwind label %cleanup-lpad.loopexit

normal-dest71:                                    ; preds = %normal-dest64
  %.elt193 = extractvalue { {}*, i64 } %61, 0
  %.elt195 = extractvalue { {}*, i64 } %61, 1
  %cond175 = icmp eq i64 %.elt195, 0
  %62 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x.1 = select i1 %cond175, {}* %62, {}* %.elt193
  br label %tag17

normal-dest78:                                    ; preds = %tag25
  %63 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %64 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %65 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %66 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint79 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint80 = add i64 %ptrtoint79, 7
  %entry-point-addr81 = inttoptr i64 %entry-point-addr-uint80 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point82 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr81, align 8
  %67 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point82({}* %34, i64 5, {}* %63, {}* %64, {}* %LISTE.0, {}* %65, {}* %66)
          to label %normal-dest85 unwind label %cleanup-lpad.loopexit

normal-dest85:                                    ; preds = %normal-dest78
  %.elt204 = extractvalue { {}*, i64 } %67, 0
  %.elt206 = extractvalue { {}*, i64 } %67, 1
  %cond177 = icmp eq i64 %.elt206, 0
  %68 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %object.1 = select i1 %cond177, {}* %68, {}* %.elt204
  br label %tag1

normal-dest92:                                    ; preds = %tag28
  %ptrtoint93 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint94 = add i64 %ptrtoint93, 7
  %entry-point-addr95 = inttoptr i64 %entry-point-addr-uint94 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point96 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr95, align 8
  %69 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point96({}* %36, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest99 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest99:                                    ; preds = %normal-dest92
  %.elt = extractvalue { {}*, i64 } %69, 0
  %.elt179 = extractvalue { {}*, i64 } %69, 1
  %cond = icmp eq i64 %.elt179, 0
  %70 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151535.0 = select i1 %cond, {}* %70, {}* %.elt
  br label %tag10

normal-dest112:                                   ; preds = %tag33
  %.val222 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %.val223 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151652.0 = select i1 %consp-test, {}* %.val222, {}* %.val223
  %71 = icmp eq {}* %G151652.0, %.val223
  br i1 %71, label %tag9, label %tag31

normal-dest126:                                   ; preds = %tag36
  %.elt183 = extractvalue { {}*, i64 } %44, 0
  %.elt185 = extractvalue { {}*, i64 } %44, 1
  %cond173 = icmp eq i64 %.elt185, 0
  %72 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %ERGEBNIS.1 = select i1 %cond173, {}* %72, {}* %.elt183
  br i1 %consp-test, label %tag4, label %tag8

normal-dest146:                                   ; preds = %tag40
  %73 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %74 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %75 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %76 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint147 = ptrtoint {}* %48 to i64
  %entry-point-addr-uint148 = add i64 %ptrtoint147, 7
  %entry-point-addr149 = inttoptr i64 %entry-point-addr-uint148 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point150 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr149, align 8
  %77 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point150({}* %48, i64 5, {}* %73, {}* %74, {}* %x.0, {}* %75, {}* %76)
          to label %normal-dest153 unwind label %cleanup-lpad.loopexit

normal-dest153:                                   ; preds = %normal-dest146
  %.elt189 = extractvalue { {}*, i64 } %77, 0
  %.elt191 = extractvalue { {}*, i64 } %77, 1
  %cond174 = icmp eq i64 %.elt191, 0
  %78 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151539.1 = select i1 %cond174, {}* %78, {}* %.elt189
  br label %tag10.backedge

normal-dest160:                                   ; preds = %tag43
  %79 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %80 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %81 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %82 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint161 = ptrtoint {}* %50 to i64
  %entry-point-addr-uint162 = add i64 %ptrtoint161, 7
  %entry-point-addr163 = inttoptr i64 %entry-point-addr-uint162 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point164 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr163, align 8
  %83 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point164({}* %50, i64 5, {}* %79, {}* %80, {}* %LISTE.0, {}* %81, {}* %82)
          to label %normal-dest167 unwind label %cleanup-lpad.loopexit

normal-dest167:                                   ; preds = %normal-dest160
  %.elt197 = extractvalue { {}*, i64 } %83, 0
  %.elt199 = extractvalue { {}*, i64 } %83, 1
  %cond176 = icmp eq i64 %.elt199, 0
  %84 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151634.1 = select i1 %cond176, {}* %84, {}* %.elt197
  br label %tag36
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^466^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !90 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^466^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest67, %normal-dest54, %header-check-br
  %G151679.0 = phi {}* [ %18, %header-check-br ], [ %G151679.1, %normal-dest54 ], [ %G151679.2, %normal-dest67 ]
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 662), align 16
  %ptrtoint13 = ptrtoint {}* %G151679.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G151679.0, i64 2, {}* %"closure->YAS=AUCH_ERERBTE_SLOTS", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest10, %header-check-br73
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest60 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %tag3, %normal-dest47, %maybe-more-tests81, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 662), align 16
  %"closure->YAS=AUCH_ERERBTE_SLOTS" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=AUCH_ERERBTE_SLOTS^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=AUCH_ERERBTE_SLOTS^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 16983, i64 466, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br73

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 664), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->YAS=AUCH_ERERBTE_SLOTS", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 665), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->YAS=AUCH_ERERBTE_SLOTS", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 1872 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 662), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %maybe-more-tests81
  %ptrtoint48 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt101 = extractvalue { {}*, i64 } %33, 0
  %.elt103 = extractvalue { {}*, i64 } %33, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151679.1 = select i1 %cond82, {}* %34, {}* %.elt101
  br label %tag

normal-dest60:                                    ; preds = %tag3
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %37 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 661), align 8
  %ptrtoint61 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %14, i64 5, {}* %35, {}* %36, {}* %18, {}* %37, {}* %38)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt = extractvalue { {}*, i64 } %39, 0
  %.elt84 = extractvalue { {}*, i64 } %39, 1
  %cond = icmp eq i64 %.elt84, 0
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151679.2 = select i1 %cond, {}* %40, {}* %.elt
  br label %tag

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag3

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest47 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=AUCH_ERERBTE_SLOTS^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !91 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=AUCH_ERERBTE_SLOTS^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=AUCH_ERERBTE_SLOTS^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc102 unwind label %cleanup-lpad

.noexc102:                                        ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 328), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest14 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest14, %normal-dest60
  %.sink101 = phi { {}*, i64 } [ %35, %normal-dest60 ], [ %21, %normal-dest14 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %.sink101

tag2:                                             ; preds = %normal-dest10
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 659), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest23 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest60, %normal-dest48, %normal-dest41, %normal-dest39, %normal-dest32, %normal-dest25, %normal-dest23, %tag2, %normal-dest14, %tag, %normal-dest7, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 281), align 8
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %17 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %18 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %17, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest7
  %.elt = extractvalue { {}*, i64 } %18, 0
  %.elt77 = extractvalue { {}*, i64 } %18, 1
  %cond = icmp eq i64 %.elt77, 0
  %19 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151714.0 = select i1 %cond, {}* %19, {}* %.elt
  %20 = icmp eq {}* %G151714.0, %19
  br i1 %20, label %tag2, label %tag

normal-dest14:                                    ; preds = %tag
  %ptrtoint15 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint16 = add i64 %ptrtoint15, 7
  %entry-point-addr17 = inttoptr i64 %entry-point-addr-uint16 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point18 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr17, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point18({}* %12, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %tag1 unwind label %cleanup-lpad

normal-dest23:                                    ; preds = %tag2
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 328), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest25 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %normal-dest23
  %ptrtoint26 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint27 = add i64 %ptrtoint26, 7
  %entry-point-addr28 = inttoptr i64 %entry-point-addr-uint27 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point29 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr28, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point29({}* %23, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest25
  %.elt86 = extractvalue { {}*, i64 } %24, 0
  %.elt88 = extractvalue { {}*, i64 } %24, 1
  %cond73 = icmp eq i64 %.elt88, 0
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151698.0 = select i1 %cond73, {}* %25, {}* %.elt86
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 328), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest39
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 37), align 8
  %ptrtoint42 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %29, i64 2, {}* %farg0, {}* %30, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %.elt90 = extractvalue { {}*, i64 } %31, 0
  %.elt92 = extractvalue { {}*, i64 } %31, 1
  %cond74 = icmp eq i64 %.elt92, 0
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151701.0 = select i1 %cond74, {}* %32, {}* %.elt90
  %ptrtoint54 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint55 = add i64 %ptrtoint54, 7
  %entry-point-addr56 = inttoptr i64 %entry-point-addr-uint55 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point57 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr56, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point57({}* %27, i64 1, {}* %G151701.0, {}* null, {}* null, {}* null)
          to label %normal-dest60 unwind label %cleanup-lpad

normal-dest60:                                    ; preds = %normal-dest48
  %.elt94 = extractvalue { {}*, i64 } %33, 0
  %.elt96 = extractvalue { {}*, i64 } %33, 1
  %cond75 = icmp eq i64 %.elt96, 0
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151699.0 = select i1 %cond75, {}* %34, {}* %.elt94
  %ptrtoint66 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint67 = add i64 %ptrtoint66, 7
  %entry-point-addr68 = inttoptr i64 %entry-point-addr-uint67 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point69 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr68, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point69({}* %14, i64 2, {}* %G151698.0, {}* %G151699.0, {}* null, {}* null)
          to label %tag1 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^476^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !92 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^476^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br73
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest67, %normal-dest17, %header-check-br
  %G151736.0 = phi {}* [ %18, %header-check-br ], [ %G151736.1, %normal-dest17 ], [ %G151736.2, %normal-dest67 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 668), align 16
  %ptrtoint20 = ptrtoint {}* %G151736.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G151736.0, i64 2, {}* %"closure->YAS=BENUTZER_+_ERERBETE_SLOTS", {}* %13, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %maybe-more-tests81, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag1, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 668), align 16
  %"closure->YAS=BENUTZER_+_ERERBETE_SLOTS" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=BENUTZER_+_ERERBETE_SLOTS^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=BENUTZER_+_ERERBETE_SLOTS^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 17212, i64 476, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br73

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 667), align 8
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151736.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag1

normal-dest26:                                    ; preds = %tag1
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 670), align 16
  %ptrtoint33 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %28, i64 2, {}* %"closure->YAS=BENUTZER_+_ERERBETE_SLOTS", {}* %29, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 671), align 8
  %ptrtoint46 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %32, i64 2, {}* %"closure->YAS=BENUTZER_+_ERERBETE_SLOTS", {}* %33, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %35, {}* inttoptr (i64 1904 to {}*))
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 668), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %37 = insertvalue { {}*, i64 } undef, {}* %36, 0
  %38 = insertvalue { {}*, i64 } %37, i64 1, 1
  ret { {}*, i64 } %38

normal-dest60:                                    ; preds = %maybe-more-tests81
  %ptrtoint61 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt101 = extractvalue { {}*, i64 } %39, 0
  %.elt103 = extractvalue { {}*, i64 } %39, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151736.2 = select i1 %cond82, {}* %40, {}* %.elt101
  br label %tag1

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest60 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=BENUTZER_+_ERERBETE_SLOTS^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !93 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=BENUTZER_+_ERERBETE_SLOTS^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=BENUTZER_+_ERERBETE_SLOTS^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc30 unwind label %cleanup-lpad

.noexc30:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest13, %normal-dest10, %normal-dest7, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 484), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 662), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest5
  %ptrtoint = ptrtoint {}* %15 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %16 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %15, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest7
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 30), align 16
  %19 = invoke {}* @cc_safe_symbol_value({}* %18)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest13:                                    ; preds = %normal-dest10
  %.elt22 = extractvalue { {}*, i64 } %16, 1
  %cond = icmp eq i64 %.elt22, 0
  %.elt = extractvalue { {}*, i64 } %16, 0
  %G151755.0 = select i1 %cond, {}* %17, {}* %.elt
  %ptrtoint14 = ptrtoint {}* %13 to i64
  %entry-point-addr-uint15 = add i64 %ptrtoint14, 7
  %entry-point-addr16 = inttoptr i64 %entry-point-addr-uint15 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point17 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr16, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point17({}* %13, i64 2, {}* %G151755.0, {}* %19, {}* null, {}* null)
          to label %normal-dest20 unwind label %cleanup-lpad

normal-dest20:                                    ; preds = %normal-dest13
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %20
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^480^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !94 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^480^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br34
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G151779.0 = phi {}* [ %18, %header-check-br ], [ %G151779.1, %normal-dest17 ], [ %G151779.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 674), align 16
  %ptrtoint43 = ptrtoint {}* %G151779.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G151779.0, i64 2, {}* %"closure->YAS=BENUTZER_SLOTS", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest21, %maybe-more-tests42, %normal-dest13, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 674), align 16
  %"closure->YAS=BENUTZER_SLOTS" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=BENUTZER_SLOTS^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=BENUTZER_SLOTS^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 17354, i64 480, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br34

normal-dest13:                                    ; preds = %tag1
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 673), align 8
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151779.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag4

normal-dest21:                                    ; preds = %maybe-more-tests42
  %ptrtoint22 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %31, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt101 = extractvalue { {}*, i64 } %27, 0
  %.elt103 = extractvalue { {}*, i64 } %27, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151779.2 = select i1 %cond82, {}* %28, {}* %.elt101
  br label %tag4

header-check-br34:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %29 = icmp ult i64 %.off106, 5
  br i1 %29, label %maybe-more-tests42, label %tag1

maybe-more-tests42:                               ; preds = %header-check-br34
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest21 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 676), align 16
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->YAS=BENUTZER_SLOTS", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 677), align 8
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->YAS=BENUTZER_SLOTS", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 1920 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 674), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=BENUTZER_SLOTS^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !95 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=BENUTZER_SLOTS^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=BENUTZER_SLOTS^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc30 unwind label %cleanup-lpad

.noexc30:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest13, %normal-dest10, %normal-dest7, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 484), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 328), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest5
  %ptrtoint = ptrtoint {}* %15 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %16 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %15, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest7
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 30), align 16
  %19 = invoke {}* @cc_safe_symbol_value({}* %18)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest13:                                    ; preds = %normal-dest10
  %.elt22 = extractvalue { {}*, i64 } %16, 1
  %cond = icmp eq i64 %.elt22, 0
  %.elt = extractvalue { {}*, i64 } %16, 0
  %G151798.0 = select i1 %cond, {}* %17, {}* %.elt
  %ptrtoint14 = ptrtoint {}* %13 to i64
  %entry-point-addr-uint15 = add i64 %ptrtoint14, 7
  %entry-point-addr16 = inttoptr i64 %entry-point-addr-uint15 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point17 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr16, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point17({}* %13, i64 2, {}* %G151798.0, {}* %19, {}* null, {}* null)
          to label %normal-dest20 unwind label %cleanup-lpad

normal-dest20:                                    ; preds = %normal-dest13
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %20
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^487^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !96 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^487^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G151826.0 = phi {}* [ %18, %header-check-br ], [ %G151826.1, %normal-dest63 ], [ %G151826.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %ptrtoint13 = ptrtoint {}* %G151826.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G151826.0, i64 2, {}* %"closure->YAS=LESE_WERT", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest10, %header-check-br46
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest56 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests54, %normal-dest56, %tag3, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %"closure->YAS=LESE_WERT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=LESE_WERT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=LESE_WERT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 17470, i64 487, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br46

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 680), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->YAS=LESE_WERT", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 681), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->YAS=LESE_WERT", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 2020 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

header-check-br46:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %33 = icmp ult i64 %.off106, 5
  br i1 %33, label %maybe-more-tests54, label %tag3

maybe-more-tests54:                               ; preds = %header-check-br46
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest56:                                    ; preds = %tag3
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %37 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 679), align 8
  %ptrtoint57 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %14, i64 5, {}* %36, {}* %37, {}* %18, {}* %38, {}* %39)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt = extractvalue { {}*, i64 } %40, 0
  %.elt84 = extractvalue { {}*, i64 } %40, 1
  %cond = icmp eq i64 %.elt84, 0
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151826.1 = select i1 %cond, {}* %41, {}* %.elt
  br label %tag

normal-dest69:                                    ; preds = %maybe-more-tests54
  %ptrtoint70 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %35, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151826.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=LESE_WERT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !97 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=LESE_WERT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %tag1.preheader, label %13

tag1.preheader:                                   ; preds = %11
  br label %tag1

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=LESE_WERT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc71 unwind label %cleanup-lpad.loopexit.split-lp

.noexc71:                                         ; preds = %13
  unreachable

tag1:                                             ; preds = %tag1.preheader, %tag9
  %OBJEKT.0 = phi {}* [ %OBJEKT.1, %tag9 ], [ %farg0, %tag1.preheader ]
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest18 unwind label %cleanup-lpad.loopexit

tag7:                                             ; preds = %normal-dest48
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest27 unwind label %cleanup-lpad.loopexit

tag8:                                             ; preds = %tag9, %normal-dest21
  %return-value.sroa.0.0.in = phi {}* [ %WERT.0, %normal-dest21 ], [ %.in, %tag9 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %18 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %19 = insertvalue { {}*, i64 } %18, i64 1, 1
  ret { {}*, i64 } %19

tag9:                                             ; preds = %normal-dest34, %normal-dest48
  %.in = phi {}* [ %35, %normal-dest48 ], [ %32, %normal-dest34 ]
  %OBJEKT.1 = phi {}* [ %G151810.0, %normal-dest48 ], [ %OBJEKT.2, %normal-dest34 ]
  %20 = icmp eq {}* %OBJEKT.1, %.in
  %.val75 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G151848.0 = select i1 %20, {}* %.val75, {}* %.in
  %21 = icmp eq {}* %G151848.0, %.in
  br i1 %21, label %tag1, label %tag8

tag11:                                            ; preds = %normal-dest21
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest41 unwind label %cleanup-lpad.loopexit

cleanup-lpad.loopexit:                            ; preds = %tag1, %normal-dest18, %tag7, %normal-dest27, %tag11, %normal-dest41
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %10, %13
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest18:                                    ; preds = %tag1
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 77), align 8
  %ptrtoint = ptrtoint {}* %15 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %15, i64 3, {}* %OBJEKT.0, {}* %farg1, {}* %24, {}* null)
          to label %normal-dest21 unwind label %cleanup-lpad.loopexit

normal-dest21:                                    ; preds = %normal-dest18
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt59 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt59, 0
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %WERT.0 = select i1 %cond, {}* %26, {}* %.elt
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 77), align 8
  %28 = icmp eq {}* %WERT.0, %27
  %.val = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G151863.0 = select i1 %28, {}* %.val, {}* %26
  %29 = icmp eq {}* %G151863.0, %26
  br i1 %29, label %tag8, label %tag11

normal-dest27:                                    ; preds = %tag7
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 37), align 8
  %ptrtoint28 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint29 = add i64 %ptrtoint28, 7
  %entry-point-addr30 = inttoptr i64 %entry-point-addr-uint29 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point31 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr30, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point31({}* %17, i64 2, {}* %OBJEKT.0, {}* %30, {}* null, {}* null)
          to label %normal-dest34 unwind label %cleanup-lpad.loopexit

normal-dest34:                                    ; preds = %normal-dest27
  %.elt68 = extractvalue { {}*, i64 } %31, 0
  %.elt70 = extractvalue { {}*, i64 } %31, 1
  %cond57 = icmp eq i64 %.elt70, 0
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %OBJEKT.2 = select i1 %cond57, {}* %32, {}* %.elt68
  br label %tag9

normal-dest41:                                    ; preds = %tag11
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 35), align 8
  %ptrtoint42 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %23, i64 2, {}* %OBJEKT.0, {}* %33, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad.loopexit

normal-dest48:                                    ; preds = %normal-dest41
  %.elt61 = extractvalue { {}*, i64 } %34, 0
  %.elt63 = extractvalue { {}*, i64 } %34, 1
  %cond56 = icmp eq i64 %.elt63, 0
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151810.0 = select i1 %cond56, {}* %35, {}* %.elt61
  %36 = icmp eq {}* %G151810.0, %35
  br i1 %36, label %tag7, label %tag9
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^517^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !98 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^517^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest67, %normal-dest17, %header-check-br
  %G151899.0 = phi {}* [ %18, %header-check-br ], [ %G151899.1, %normal-dest17 ], [ %G151899.2, %normal-dest67 ]
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 622), align 16
  %ptrtoint20 = ptrtoint {}* %G151899.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G151899.0, i64 2, {}* %"closure->YAS=SCHREIBE_WERT", {}* %11, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest10, %header-check-br73
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest60 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %tag3, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag2, %normal-dest13, %maybe-more-tests81, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 622), align 16
  %"closure->YAS=SCHREIBE_WERT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=SCHREIBE_WERT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=SCHREIBE_WERT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 18536, i64 517, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br73

normal-dest13:                                    ; preds = %maybe-more-tests81
  %ptrtoint14 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151899.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag2

normal-dest26:                                    ; preds = %tag2
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 689), align 8
  %ptrtoint33 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %24, i64 2, {}* %"closure->YAS=SCHREIBE_WERT", {}* %25, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 692), align 16
  %ptrtoint46 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %28, i64 2, {}* %"closure->YAS=SCHREIBE_WERT", {}* %29, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %31, {}* inttoptr (i64 2128 to {}*))
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 622), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %33 = insertvalue { {}*, i64 } undef, {}* %32, 0
  %34 = insertvalue { {}*, i64 } %33, i64 1, 1
  ret { {}*, i64 } %34

normal-dest60:                                    ; preds = %tag3
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %37 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 688), align 16
  %ptrtoint61 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %14, i64 5, {}* %35, {}* %36, {}* %18, {}* %37, {}* %38)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt = extractvalue { {}*, i64 } %39, 0
  %.elt84 = extractvalue { {}*, i64 } %39, 1
  %cond = icmp eq i64 %.elt84, 0
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151899.2 = select i1 %cond, {}* %40, {}* %.elt
  br label %tag2

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag3

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest13 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=SCHREIBE_WERT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !99 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 3
  br i1 %enough-args, label %error, label %continue

tag4:                                             ; preds = %normal-dest113, %header-check-br, %normal-dest49
  %G151931.0 = phi {}* [ %G151931.1, %normal-dest49 ], [ %11, %header-check-br ], [ %G151931.2, %normal-dest113 ]
  %ptrtoint52 = ptrtoint {}* %G151931.0 to i64
  %entry-point-addr-uint53 = add i64 %ptrtoint52, 7
  %entry-point-addr54 = inttoptr i64 %entry-point-addr-uint53 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point55 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr54, align 8
  %9 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point55({}* %G151931.0, i64 3, {}* %vaarg30, {}* %vaarg, {}* %vaarg26, {}* null)
          to label %normal-dest58 unwind label %cleanup-lpad.loopexit.split-lp

tag7:                                             ; preds = %normal-dest75, %kw-exit-block
  %10 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %11 = invoke {}* @cc_safe_setfdefinition({}* %10)
          to label %normal-dest70 unwind label %cleanup-lpad.loopexit.split-lp

tag8:                                             ; preds = %kw-exit-block
  %12 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 683), align 8
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest75 unwind label %cleanup-lpad.loopexit.split-lp

tag13:                                            ; preds = %normal-dest58, %normal-dest95
  %return-value.sroa.11.0 = phi i64 [ %.elt134, %normal-dest95 ], [ 1, %normal-dest58 ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt132, %normal-dest95 ], [ %.val145, %normal-dest58 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %14 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %15 = insertvalue { {}*, i64 } %14, i64 %return-value.sroa.11.0, 1
  ret { {}*, i64 } %15

tag14:                                            ; preds = %normal-dest58
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 478), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest88 unwind label %cleanup-lpad.loopexit.split-lp

tag18:                                            ; preds = %normal-dest70, %header-check-br96
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest106 unwind label %cleanup-lpad.loopexit.split-lp

cleanup-lpad.loopexit:                            ; preds = %loop-kw-args
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %error, %loop-cont, %maybe-more-tests104, %normal-dest46, %tag4, %tag7, %tag8, %normal-dest75, %tag14, %normal-dest88, %tag18, %normal-dest106
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @":::global-str-YAS=SCHREIBE_WERT^COMMON-LISP-USER^FN^^", i64 0, i64 0), i64 %nargs, i64 3)
          to label %normal-dest unwind label %cleanup-lpad.loopexit.split-lp

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs24 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-125 = add i64 %rem-nargs24, -1
  store i64 %rem-nargs-125, i64* %"remaining-nargs*", align 8
  %vaarg26 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs28 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-129 = add i64 %rem-nargs28, -1
  store i64 %rem-nargs-129, i64* %"remaining-nargs*", align 8
  %vaarg30 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %20 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 304), align 16
  %23 = icmp eq i64 %nargs, 3
  br i1 %23, label %kw-exit-block, label %loop-kw-args.preheader

loop-kw-args.preheader:                           ; preds = %continue
  br label %loop-kw-args

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

loop-kw-args:                                     ; preds = %loop-kw-args.preheader, %advance-arg-idx-block
  %G151882.0 = phi {}* [ %G151882.2, %advance-arg-idx-block ], [ %21, %loop-kw-args.preheader ]
  %informant.1 = phi {}* [ %informant.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %G151883.0 = phi {}* [ %G151883.2, %advance-arg-idx-block ], [ %21, %loop-kw-args.preheader ]
  %sichern.1 = phi {}* [ %sichern.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %phi-saw-aok = phi i64 [ %phi-this-was-aok, %advance-arg-idx-block ], [ 0, %loop-kw-args.preheader ]
  %phi-reg-arg-idx = phi i64 [ %30, %advance-arg-idx-block ], [ 3, %loop-kw-args.preheader ]
  %phi-bad-kw-idx = phi i64 [ %phi.aok-bad-good.bad-kw-idx, %advance-arg-idx-block ], [ 65536, %loop-kw-args.preheader ]
  %rem-nargs33 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-134 = add i64 %rem-nargs33, -1
  store i64 %rem-nargs-134, i64* %"remaining-nargs*", align 8
  %vaarg35 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs36 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-137 = add i64 %rem-nargs36, -1
  store i64 %rem-nargs-137, i64* %"remaining-nargs*", align 8
  %vaarg38 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  invoke void @cc_ifNotKeywordException({}* %vaarg35, i64 %phi-reg-arg-idx, { i32, i32, i8*, i8* }* nonnull %"va-list*", { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"YAS=SCHREIBE_WERT^COMMON-LISP-USER^FN^^^DESC")
          to label %normal-dest39 unwind label %cleanup-lpad.loopexit

kw-exit-block:                                    ; preds = %loop-cont.kw-exit-block_crit_edge, %continue
  %24 = phi {}* [ %21, %continue ], [ %.pre, %loop-cont.kw-exit-block_crit_edge ]
  %G151882.1 = phi {}* [ %21, %continue ], [ %G151882.2, %loop-cont.kw-exit-block_crit_edge ]
  %informant.2 = phi {}* [ undef, %continue ], [ %informant.3, %loop-cont.kw-exit-block_crit_edge ]
  %G151883.1 = phi {}* [ %21, %continue ], [ %G151883.2, %loop-cont.kw-exit-block_crit_edge ]
  %sichern.2 = phi {}* [ undef, %continue ], [ %sichern.3, %loop-cont.kw-exit-block_crit_edge ]
  %25 = icmp eq {}* %G151883.1, %24
  %sichern.0 = select i1 %25, {}* %24, {}* %sichern.2
  %26 = icmp eq {}* %G151882.1, %24
  %.informant.2 = select i1 %26, {}* %24, {}* %informant.2
  %27 = icmp eq {}* %sichern.0, %24
  br i1 %27, label %tag7, label %tag8

loop-cont:                                        ; preds = %advance-arg-idx-block
  invoke void @cc_ifBadKeywordArgumentException(i64 %phi-this-was-aok, i64 %phi.aok-bad-good.bad-kw-idx, {}* %vaarg35, { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"YAS=SCHREIBE_WERT^COMMON-LISP-USER^FN^^^DESC")
          to label %loop-cont.kw-exit-block_crit_edge unwind label %cleanup-lpad.loopexit.split-lp

loop-cont.kw-exit-block_crit_edge:                ; preds = %loop-cont
  %.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %kw-exit-block

normal-dest39:                                    ; preds = %loop-kw-args
  %28 = icmp eq {}* %22, %vaarg35
  br i1 %28, label %aok-block, label %"kw-:SICHERN-test"

aok-block:                                        ; preds = %normal-dest39
  %29 = call i64 @cc_allowOtherKeywords(i64 %phi-saw-aok, {}* %vaarg38)
  br label %advance-arg-idx-block

advance-arg-idx-block:                            ; preds = %"kw-:INFORMANT-test", %"kw-:SICHERN-test", %not-seen-before-kw-block, %not-seen-before-kw-block41, %next-kw-block42, %aok-block
  %G151882.2 = phi {}* [ %G151882.0, %aok-block ], [ %G151882.0, %next-kw-block42 ], [ %20, %not-seen-before-kw-block41 ], [ %G151882.0, %not-seen-before-kw-block ], [ %G151882.0, %"kw-:SICHERN-test" ], [ %G151882.0, %"kw-:INFORMANT-test" ]
  %informant.3 = phi {}* [ %informant.1, %aok-block ], [ %informant.1, %next-kw-block42 ], [ %vaarg38, %not-seen-before-kw-block41 ], [ %informant.1, %not-seen-before-kw-block ], [ %informant.1, %"kw-:SICHERN-test" ], [ %informant.1, %"kw-:INFORMANT-test" ]
  %G151883.2 = phi {}* [ %G151883.0, %aok-block ], [ %G151883.0, %next-kw-block42 ], [ %G151883.0, %not-seen-before-kw-block41 ], [ %20, %not-seen-before-kw-block ], [ %G151883.0, %"kw-:SICHERN-test" ], [ %G151883.0, %"kw-:INFORMANT-test" ]
  %sichern.3 = phi {}* [ %sichern.1, %aok-block ], [ %sichern.1, %next-kw-block42 ], [ %sichern.1, %not-seen-before-kw-block41 ], [ %vaarg38, %not-seen-before-kw-block ], [ %sichern.1, %"kw-:SICHERN-test" ], [ %sichern.1, %"kw-:INFORMANT-test" ]
  %phi-this-was-aok = phi i64 [ %29, %aok-block ], [ %phi-saw-aok, %next-kw-block42 ], [ %phi-saw-aok, %not-seen-before-kw-block41 ], [ %phi-saw-aok, %not-seen-before-kw-block ], [ %phi-saw-aok, %"kw-:SICHERN-test" ], [ %phi-saw-aok, %"kw-:INFORMANT-test" ]
  %phi.aok-bad-good.bad-kw-idx = phi i64 [ %phi-bad-kw-idx, %aok-block ], [ %36, %next-kw-block42 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block41 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block ], [ %phi-bad-kw-idx, %"kw-:SICHERN-test" ], [ %phi-bad-kw-idx, %"kw-:INFORMANT-test" ]
  %30 = add i64 %phi-reg-arg-idx, 2
  %31 = icmp slt i64 %30, %nargs
  br i1 %31, label %loop-kw-args, label %loop-cont

"kw-:SICHERN-test":                               ; preds = %normal-dest39
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 694), align 16
  %33 = call i64 @cc_matchKeywordOnce({}* %32, {}* %vaarg35, {}* %G151883.0)
  switch i64 %33, label %not-seen-before-kw-block [
    i64 0, label %"kw-:INFORMANT-test"
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block:                         ; preds = %"kw-:SICHERN-test"
  br label %advance-arg-idx-block

"kw-:INFORMANT-test":                             ; preds = %"kw-:SICHERN-test"
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 474), align 16
  %35 = call i64 @cc_matchKeywordOnce({}* %34, {}* %vaarg35, {}* %G151882.0)
  switch i64 %35, label %not-seen-before-kw-block41 [
    i64 0, label %next-kw-block42
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block41:                       ; preds = %"kw-:INFORMANT-test"
  br label %advance-arg-idx-block

next-kw-block42:                                  ; preds = %"kw-:INFORMANT-test"
  %36 = call i64 @cc_trackFirstUnexpectedKeyword(i64 %phi-bad-kw-idx, i64 %phi-reg-arg-idx)
  br label %advance-arg-idx-block

normal-dest46:                                    ; preds = %maybe-more-tests104
  %ptrtoint = ptrtoint {}* %49 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %49, i64 1, {}* nonnull %11, {}* null, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest49:                                    ; preds = %normal-dest46
  %.elt139 = extractvalue { {}*, i64 } %37, 0
  %.elt141 = extractvalue { {}*, i64 } %37, 1
  %cond120 = icmp eq i64 %.elt141, 0
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151931.1 = select i1 %cond120, {}* %38, {}* %.elt139
  br label %tag4

normal-dest58:                                    ; preds = %tag4
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 686), align 16
  %40 = icmp eq {}* %.informant.2, %39
  %.val = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %.val145 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %object.0 = select i1 %40, {}* %.val, {}* %.val145
  %41 = icmp eq {}* %object.0, %.val145
  %G151923.0 = select i1 %41, {}* %.val, {}* %.val145
  %42 = icmp eq {}* %G151923.0, %.val145
  br i1 %42, label %tag13, label %tag14

normal-dest70:                                    ; preds = %tag7
  %ptrtoint71 = ptrtoint {}* %11 to i64
  %tag-only = and i64 %ptrtoint71, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag18

header-check-br:                                  ; preds = %normal-dest70
  %irc-bit-cast72 = bitcast {}* %11 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast72, i64 -9
  %irc-bit-cast73 = bitcast i8* %gep to i64*
  %43 = load i64, i64* %irc-bit-cast73, align 8
  %.off = add i64 %43, -913
  %44 = icmp ult i64 %.off, 85
  br i1 %44, label %tag4, label %header-check-br96

normal-dest75:                                    ; preds = %tag8
  %ptrtoint76 = ptrtoint {}* %13 to i64
  %entry-point-addr-uint77 = add i64 %ptrtoint76, 7
  %entry-point-addr78 = inttoptr i64 %entry-point-addr-uint77 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point79 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr78, align 8
  %45 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point79({}* %13, i64 2, {}* %vaarg, {}* %vaarg26, {}* null, {}* null)
          to label %tag7 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest88:                                    ; preds = %tag14
  %ptrtoint89 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint90 = add i64 %ptrtoint89, 7
  %entry-point-addr91 = inttoptr i64 %entry-point-addr-uint90 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point92 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr91, align 8
  %46 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point92({}* %17, i64 3, {}* %vaarg, {}* %vaarg26, {}* %.informant.2, {}* null)
          to label %normal-dest95 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest95:                                    ; preds = %normal-dest88
  %.elt132 = extractvalue { {}*, i64 } %46, 0
  %.elt134 = extractvalue { {}*, i64 } %46, 1
  br label %tag13

header-check-br96:                                ; preds = %header-check-br
  %.off148 = add i64 %43, -1001
  %47 = icmp ult i64 %.off148, 5
  br i1 %47, label %maybe-more-tests104, label %tag18

maybe-more-tests104:                              ; preds = %header-check-br96
  %48 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %49 = invoke {}* @cc_safe_fdefinition({}* %48)
          to label %normal-dest46 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest106:                                   ; preds = %tag18
  %50 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %51 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %52 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %53 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 685), align 8
  %ptrtoint107 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint108 = add i64 %ptrtoint107, 7
  %entry-point-addr109 = inttoptr i64 %entry-point-addr-uint108 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point110 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr109, align 8
  %54 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point110({}* %19, i64 5, {}* %50, {}* %51, {}* %11, {}* %52, {}* %53)
          to label %normal-dest113 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest113:                                   ; preds = %normal-dest106
  %.elt124 = extractvalue { {}*, i64 } %54, 0
  %.elt126 = extractvalue { {}*, i64 } %54, 1
  %cond119 = icmp eq i64 %.elt126, 0
  %55 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151931.2 = select i1 %cond119, {}* %55, {}* %.elt124
  br label %tag4
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^539^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !100 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^539^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag3:                                             ; preds = %normal-dest10, %header-check-br20
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest30 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest37, %normal-dest17, %header-check-br
  %G151983.0 = phi {}* [ %18, %header-check-br ], [ %G151983.1, %normal-dest17 ], [ %G151983.2, %normal-dest37 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 699), align 8
  %ptrtoint43 = ptrtoint {}* %G151983.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G151983.0, i64 2, {}* %"closure->YAS-ENTHALTEN", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest30, %tag3, %normal-dest13, %maybe-more-tests28, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 699), align 8
  %"closure->YAS-ENTHALTEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS-ENTHALTEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-ENTHALTEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 19248, i64 539, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br20

normal-dest13:                                    ; preds = %maybe-more-tests28
  %ptrtoint14 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151983.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag4

header-check-br20:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %23 = icmp ult i64 %.off106, 5
  br i1 %23, label %maybe-more-tests28, label %tag3

maybe-more-tests28:                               ; preds = %header-check-br20
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest30:                                    ; preds = %tag3
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 698), align 16
  %ptrtoint31 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %12, i64 5, {}* %26, {}* %27, {}* %18, {}* %28, {}* %29)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt = extractvalue { {}*, i64 } %30, 0
  %.elt84 = extractvalue { {}*, i64 } %30, 1
  %cond = icmp eq i64 %.elt84, 0
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G151983.2 = select i1 %cond, {}* %31, {}* %.elt
  br label %tag4

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 701), align 8
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->YAS-ENTHALTEN", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 704), align 16
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->YAS-ENTHALTEN", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 2156 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 699), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS-ENTHALTEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !101 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-ENTHALTEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-ENTHALTEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc282 unwind label %cleanup-lpad.loopexit.split-lp

.noexc282:                                        ; preds = %13
  unreachable

tag1:                                             ; preds = %tag16.tag1_crit_edge, %header-check-br147, %header-check-br82, %tag32, %tag52
  %.val289 = phi {}* [ %.val289.pre, %tag16.tag1_crit_edge ], [ %38, %tag52 ], [ %38, %tag32 ], [ %38, %header-check-br82 ], [ %38, %header-check-br147 ]
  %14 = phi {}* [ %29, %tag16.tag1_crit_edge ], [ %.val294, %tag52 ], [ %.val294, %tag32 ], [ %.val294, %header-check-br82 ], [ %.val294, %header-check-br147 ]
  %15 = phi i64 [ %28, %tag16.tag1_crit_edge ], [ %37, %tag52 ], [ %37, %tag32 ], [ %37, %header-check-br82 ], [ %37, %header-check-br147 ]
  %16 = add i64 %47, 5
  %17 = inttoptr i64 %16 to {}**
  %18 = load {}*, {}** %17, align 8
  %19 = icmp eq {}* %18, %14
  %object.0 = select i1 %19, {}* %.val289, {}* %14
  %20 = icmp eq {}* %object.0, %14
  %G152003.0 = select i1 %20, {}* %.val289, {}* %14
  %21 = icmp eq {}* %G152003.0, %14
  br i1 %21, label %tag12, label %tag44

tag2:                                             ; preds = %tag44
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest74 unwind label %cleanup-lpad.loopexit.split-lp

tag5:                                             ; preds = %tag44
  %24 = icmp eq {}* %G152058.0, %46
  br i1 %24, label %tag41, label %tag48

tag12:                                            ; preds = %tag1, %tag16, %tag57, %tag26, %normal-dest118
  %return-value.sroa.14.0 = phi i64 [ %.elt254, %normal-dest118 ], [ 1, %tag26 ], [ 1, %tag57 ], [ 1, %tag16 ], [ 1, %tag1 ]
  %return-value.sroa.0.0 = phi i64 [ %78, %normal-dest118 ], [ %35, %tag26 ], [ %90, %tag57 ], [ %15, %tag1 ], [ %47, %tag16 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %25 = inttoptr i64 %return-value.sroa.0.0 to {}*
  %26 = insertvalue { {}*, i64 } undef, {}* %25, 0
  %27 = insertvalue { {}*, i64 } %26, i64 %return-value.sroa.14.0, 1
  ret { {}*, i64 } %27

tag16:                                            ; preds = %tag35, %normal-dest177
  %28 = phi i64 [ %86, %normal-dest177 ], [ %37, %tag35 ]
  %29 = phi {}* [ %85, %normal-dest177 ], [ %.val294, %tag35 ]
  %G152029.0 = phi {}* [ %G152029.1, %normal-dest177 ], [ %38, %tag35 ]
  %30 = icmp eq {}* %G152029.0, %29
  br i1 %30, label %tag16.tag1_crit_edge, label %tag12

tag16.tag1_crit_edge:                             ; preds = %tag16
  %.val289.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  br label %tag1

tag18:                                            ; preds = %tag41
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest103 unwind label %cleanup-lpad.loopexit

tag19:                                            ; preds = %normal-dest207
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 330), align 16
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest111 unwind label %cleanup-lpad.loopexit.split-lp

tag26:                                            ; preds = %normal-dest
  %35 = ptrtoint {}* %57 to i64
  br label %tag12

tag32:                                            ; preds = %header-check-br82, %header-check-br82, %header-check-br82, %header-check-br82
  %36 = ptrtoint {}* %.in270 to i64
  %single-float-tag-only155 = and i64 %36, 7
  %fixnum-tag-only126268 = and i64 %36, 3
  %fixnump-test127 = icmp ne i64 %fixnum-tag-only126268, 0
  %test150 = icmp eq i64 %single-float-tag-only155, 1
  %or.cond287 = and i1 %fixnump-test127, %test150
  br i1 %or.cond287, label %header-check-br147, label %tag1

tag35:                                            ; preds = %tag41, %normal-dest107, %tag48
  %37 = phi i64 [ %44, %tag48 ], [ %76, %normal-dest107 ], [ %44, %tag41 ]
  %.val294 = phi {}* [ %46, %tag48 ], [ %75, %normal-dest107 ], [ %G152058.0, %tag41 ]
  %38 = phi {}* [ %G152058.0, %tag48 ], [ %.val293.pre, %normal-dest107 ], [ %G152058.0, %tag41 ]
  %.in270 = phi {}* [ %50, %tag48 ], [ %.in, %normal-dest107 ], [ %G152058.0, %tag41 ]
  %39 = bitcast {}* %.in270 to i8*
  %40 = icmp eq {}* %.in270, %farg0
  %G152038.0 = select i1 %40, {}* %38, {}* %.val294
  %41 = icmp eq {}* %G152038.0, %.val294
  br i1 %41, label %tag52, label %tag16

tag36:                                            ; preds = %header-check-br147, %header-check-br147, %header-check-br147, %header-check-br147
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 75), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest170 unwind label %cleanup-lpad.loopexit

tag41:                                            ; preds = %tag5
  br i1 %45, label %tag18, label %tag35

tag44:                                            ; preds = %tag44.lr.ph, %tag1
  %44 = phi i64 [ %90, %tag44.lr.ph ], [ %15, %tag1 ]
  %G152058.0 = phi {}* [ %.val289300, %tag44.lr.ph ], [ %.val289, %tag1 ]
  %45 = phi i1 [ %54, %tag44.lr.ph ], [ %20, %tag1 ]
  %46 = phi {}* [ %88, %tag44.lr.ph ], [ %14, %tag1 ]
  %"%SUBLIST151962.0303" = phi {}* [ %farg1, %tag44.lr.ph ], [ %18, %tag1 ]
  %47 = ptrtoint {}* %"%SUBLIST151962.0303" to i64
  %tag-only194255 = and i64 %47, 7
  %consp-test195 = icmp eq i64 %tag-only194255, 3
  br i1 %consp-test195, label %tag5, label %tag2

tag48:                                            ; preds = %tag5
  %48 = add i64 %47, -3
  %49 = inttoptr i64 %48 to {}**
  %50 = load {}*, {}** %49, align 8
  br label %tag35

tag52:                                            ; preds = %tag35
  br i1 %brmerge, label %tag1, label %header-check-br82

tag53:                                            ; preds = %normal-dest
  %51 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 696), align 16
  %52 = invoke {}* @cc_safe_fdefinition({}* %51)
          to label %normal-dest200 unwind label %cleanup-lpad.loopexit.split-lp

tag57:                                            ; preds = %normal-dest207
  %53 = icmp eq {}* %88, %farg1
  %.val289300 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %object.0301 = select i1 %53, {}* %.val289300, {}* %88
  %54 = icmp eq {}* %object.0301, %88
  %G152003.0302 = select i1 %54, {}* %.val289300, {}* %88
  %55 = icmp eq {}* %G152003.0302, %88
  br i1 %55, label %tag12, label %tag44.lr.ph

tag44.lr.ph:                                      ; preds = %tag57
  %56 = ptrtoint {}* %farg0 to i64
  %single-float-tag-only198 = and i64 %56, 7
  %fixnum-tag-only196266 = and i64 %56, 3
  %fixnump-test197 = icmp eq i64 %fixnum-tag-only196266, 0
  %test85 = icmp ne i64 %single-float-tag-only198, 1
  %irc-bit-cast86 = bitcast {}* %farg0 to i8*
  %gep87 = getelementptr inbounds i8, i8* %irc-bit-cast86, i64 -9
  %irc-bit-cast88 = bitcast i8* %gep87 to i64*
  %brmerge = or i1 %test85, %fixnump-test197
  br label %tag44

cleanup-lpad.loopexit:                            ; preds = %tag18, %normal-dest103, %tag36, %normal-dest170
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %tag2, %tag19, %normal-dest111, %tag53, %normal-dest200, %normal-dest74, %10, %13
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %11
  %57 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %58 = icmp eq {}* %57, %farg1
  %.val = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G152072.0 = select i1 %58, {}* %.val, {}* %57
  %59 = icmp eq {}* %G152072.0, %57
  br i1 %59, label %tag53, label %tag26

normal-dest74:                                    ; preds = %tag2
  %60 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %61 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %62 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %63 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 157), align 8
  %ptrtoint220 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint221 = add i64 %ptrtoint220, 7
  %entry-point-addr222 = inttoptr i64 %entry-point-addr-uint221 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point223 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr222, align 8
  %64 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point223({}* %23, i64 5, {}* %60, {}* %61, {}* %"%SUBLIST151962.0303", {}* %62, {}* %63)
          to label %normal-dest226 unwind label %cleanup-lpad.loopexit.split-lp

header-check-br82:                                ; preds = %tag52
  %65 = load i64, i64* %irc-bit-cast88, align 8
  %66 = add i64 %65, -1309
  %67 = lshr i64 %66, 3
  %68 = shl i64 %66, 61
  %69 = or i64 %67, %68
  switch i64 %69, label %tag1 [
    i64 2, label %tag32
    i64 4, label %tag32
    i64 5, label %tag32
    i64 0, label %tag32
  ]

normal-dest103:                                   ; preds = %tag18
  %70 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %71 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %72 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %73 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint104 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint = add i64 %ptrtoint104, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %74 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %32, i64 5, {}* %70, {}* %71, {}* %"%SUBLIST151962.0303", {}* %72, {}* %73)
          to label %normal-dest107 unwind label %cleanup-lpad.loopexit

normal-dest107:                                   ; preds = %normal-dest103
  %.elt276 = extractvalue { {}*, i64 } %74, 0
  %.elt278 = extractvalue { {}*, i64 } %74, 1
  %cond245 = icmp eq i64 %.elt278, 0
  %75 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %.in = select i1 %cond245, {}* %75, {}* %.elt276
  %.val293.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %76 = ptrtoint {}* %75 to i64
  br label %tag35

normal-dest111:                                   ; preds = %tag19
  %ptrtoint112 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint113 = add i64 %ptrtoint112, 7
  %entry-point-addr114 = inttoptr i64 %entry-point-addr-uint113 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point115 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr114, align 8
  %77 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point115({}* %34, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest118 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest118:                                   ; preds = %normal-dest111
  %.elt252 = extractvalue { {}*, i64 } %77, 0
  %78 = ptrtoint {}* %.elt252 to i64
  %.elt254 = extractvalue { {}*, i64 } %77, 1
  br label %tag12

header-check-br147:                               ; preds = %tag32
  %gep152 = getelementptr inbounds i8, i8* %39, i64 -9
  %irc-bit-cast153 = bitcast i8* %gep152 to i64*
  %79 = load i64, i64* %irc-bit-cast153, align 8
  %80 = add i64 %79, -1309
  %81 = lshr i64 %80, 3
  %82 = shl i64 %80, 61
  %83 = or i64 %81, %82
  switch i64 %83, label %tag1 [
    i64 2, label %tag36
    i64 4, label %tag36
    i64 5, label %tag36
    i64 0, label %tag36
  ]

normal-dest170:                                   ; preds = %tag36
  %ptrtoint171 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint172 = add i64 %ptrtoint171, 7
  %entry-point-addr173 = inttoptr i64 %entry-point-addr-uint172 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point174 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr173, align 8
  %84 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point174({}* %43, i64 2, {}* nonnull %farg0, {}* nonnull %.in270, {}* null, {}* null)
          to label %normal-dest177 unwind label %cleanup-lpad.loopexit

normal-dest177:                                   ; preds = %normal-dest170
  %.elt272 = extractvalue { {}*, i64 } %84, 0
  %.elt274 = extractvalue { {}*, i64 } %84, 1
  %cond244 = icmp eq i64 %.elt274, 0
  %85 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152029.1 = select i1 %cond244, {}* %85, {}* %.elt272
  %86 = ptrtoint {}* %85 to i64
  br label %tag16

normal-dest200:                                   ; preds = %tag53
  %ptrtoint201 = ptrtoint {}* %52 to i64
  %entry-point-addr-uint202 = add i64 %ptrtoint201, 7
  %entry-point-addr203 = inttoptr i64 %entry-point-addr-uint202 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point204 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr203, align 8
  %87 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point204({}* %52, i64 1, {}* %farg1, {}* null, {}* null, {}* null)
          to label %normal-dest207 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest207:                                   ; preds = %normal-dest200
  %.elt248 = extractvalue { {}*, i64 } %87, 0
  %.elt250 = extractvalue { {}*, i64 } %87, 1
  %cond = icmp eq i64 %.elt250, 0
  %88 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152066.0 = select i1 %cond, {}* %88, {}* %.elt248
  %89 = icmp eq {}* %G152066.0, %88
  %90 = ptrtoint {}* %88 to i64
  br i1 %89, label %tag57, label %tag19

normal-dest226:                                   ; preds = %normal-dest74
  call void @unreachableError()
  unreachable
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^547^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !102 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^547^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest67, %normal-dest54, %header-check-br
  %G152111.0 = phi {}* [ %18, %header-check-br ], [ %G152111.1, %normal-dest54 ], [ %G152111.2, %normal-dest67 ]
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 472), align 16
  %ptrtoint13 = ptrtoint {}* %G152111.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G152111.0, i64 2, {}* %"closure->YAS=SCHREIBE_ZUSAETZLICHEN_WERT", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest10, %header-check-br73
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest60 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %tag3, %normal-dest47, %maybe-more-tests81, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 472), align 16
  %"closure->YAS=SCHREIBE_ZUSAETZLICHEN_WERT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=SCHREIBE_ZUSAETZLICHEN_WERT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=SCHREIBE_ZUSAETZLICHEN_WERT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 19384, i64 547, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br73

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 712), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->YAS=SCHREIBE_ZUSAETZLICHEN_WERT", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 713), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->YAS=SCHREIBE_ZUSAETZLICHEN_WERT", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 2188 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 472), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %maybe-more-tests81
  %ptrtoint48 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt101 = extractvalue { {}*, i64 } %33, 0
  %.elt103 = extractvalue { {}*, i64 } %33, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152111.1 = select i1 %cond82, {}* %34, {}* %.elt101
  br label %tag

normal-dest60:                                    ; preds = %tag3
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %37 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 711), align 8
  %ptrtoint61 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %14, i64 5, {}* %35, {}* %36, {}* %18, {}* %37, {}* %38)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt = extractvalue { {}*, i64 } %39, 0
  %.elt84 = extractvalue { {}*, i64 } %39, 1
  %cond = icmp eq i64 %.elt84, 0
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152111.2 = select i1 %cond, {}* %40, {}* %.elt
  br label %tag

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag3

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest47 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=SCHREIBE_ZUSAETZLICHEN_WERT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !103 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 3
  br i1 %enough-args, label %error, label %continue

tag1:                                             ; preds = %normal-dest76, %normal-dest219, %normal-dest99
  %.sink334 = phi { {}*, i64 } [ %66, %normal-dest99 ], [ %96, %normal-dest219 ], [ %61, %normal-dest76 ]
  %.elt292 = extractvalue { {}*, i64 } %.sink334, 0
  %.elt294 = extractvalue { {}*, i64 } %.sink334, 1
  %cond264 = icmp eq i64 %.elt294, 0
  %9 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152088152089.0 = select i1 %cond264, {}* %9, {}* %.elt292
  %10 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %11 = invoke {}* @cc_safe_setfdefinition({}* %10)
          to label %normal-dest53 unwind label %cleanup-lpad.loopexit.split-lp

tag5:                                             ; preds = %normal-dest159
  %12 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 708), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest67 unwind label %cleanup-lpad.loopexit.split-lp

tag6:                                             ; preds = %tag9
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 157), align 8
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest90 unwind label %cleanup-lpad.loopexit.split-lp

tag7:                                             ; preds = %normal-dest53, %header-check-br128
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest113 unwind label %cleanup-lpad.loopexit.split-lp

tag8:                                             ; preds = %normal-dest203, %normal-dest259, %normal-dest217
  %return-value.sroa.26.0 = phi i64 [ %.elt333, %normal-dest217 ], [ %.elt306, %normal-dest259 ], [ 1, %normal-dest203 ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt331, %normal-dest217 ], [ %.elt304, %normal-dest259 ], [ %90, %normal-dest203 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %18 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %19 = insertvalue { {}*, i64 } %18, i64 %return-value.sroa.26.0, 1
  ret { {}*, i64 } %19

tag9:                                             ; preds = %normal-dest159
  %20 = icmp eq {}* %G152090.0, %81
  %.val347 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G152175.0 = select i1 %20, {}* %.val347, {}* %81
  %21 = icmp eq {}* %G152175.0, %81
  br i1 %21, label %tag6, label %tag22

tag11:                                            ; preds = %normal-dest228, %tag19
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest138 unwind label %cleanup-lpad.loopexit.split-lp

tag18:                                            ; preds = %normal-dest60
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 699), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest182 unwind label %cleanup-lpad.loopexit.split-lp

tag19:                                            ; preds = %normal-dest203
  %26 = icmp eq {}* %sichern.0, %90
  br i1 %26, label %tag11, label %tag24

tag20:                                            ; preds = %normal-dest60
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 468), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest210 unwind label %cleanup-lpad.loopexit.split-lp

tag22:                                            ; preds = %tag9
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest219 unwind label %cleanup-lpad.loopexit.split-lp

tag24:                                            ; preds = %tag19
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 683), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest228 unwind label %cleanup-lpad.loopexit.split-lp

tag26:                                            ; preds = %normal-dest175, %normal-dest120, %header-check-br
  %G152141.0 = phi {}* [ %11, %header-check-br ], [ %G152141.1, %normal-dest120 ], [ %G152141.2, %normal-dest175 ]
  %ptrtoint240 = ptrtoint {}* %G152141.0 to i64
  %entry-point-addr-uint241 = add i64 %ptrtoint240, 7
  %entry-point-addr242 = inttoptr i64 %entry-point-addr-uint241 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point243 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr242, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point243({}* %G152141.0, i64 3, {}* %G152088152089.0, {}* %vaarg, {}* %vaarg33, {}* null)
          to label %normal-dest246 unwind label %cleanup-lpad.loopexit.split-lp

cleanup-lpad.loopexit:                            ; preds = %loop-kw-args
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %error, %loop-cont, %tag1, %kw-exit-block, %normal-dest56, %tag5, %normal-dest67, %normal-dest69, %normal-dest76, %tag6, %normal-dest90, %normal-dest92, %normal-dest99, %tag7, %normal-dest113, %tag11, %normal-dest138, %normal-dest145, %normal-dest152, %maybe-more-tests136, %normal-dest168, %tag18, %normal-dest182, %normal-dest184, %normal-dest191, %tag20, %normal-dest210, %tag22, %normal-dest219, %tag24, %normal-dest228, %tag26, %normal-dest246, %normal-dest252
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @":::global-str-YAS=SCHREIBE_ZUSAETZLICHEN_WERT^COMMON-LISP-USER^FN^^", i64 0, i64 0), i64 %nargs, i64 3)
          to label %normal-dest unwind label %cleanup-lpad.loopexit.split-lp

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs31 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-132 = add i64 %rem-nargs31, -1
  store i64 %rem-nargs-132, i64* %"remaining-nargs*", align 8
  %vaarg33 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs35 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-136 = add i64 %rem-nargs35, -1
  store i64 %rem-nargs-136, i64* %"remaining-nargs*", align 8
  %vaarg37 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 304), align 16
  %37 = icmp eq i64 %nargs, 3
  br i1 %37, label %kw-exit-block, label %loop-kw-args.preheader

loop-kw-args.preheader:                           ; preds = %continue
  br label %loop-kw-args

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

loop-kw-args:                                     ; preds = %loop-kw-args.preheader, %advance-arg-idx-block
  %G152094.0 = phi {}* [ %G152094.2, %advance-arg-idx-block ], [ %35, %loop-kw-args.preheader ]
  %informant.1 = phi {}* [ %informant.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %G152095.0 = phi {}* [ %G152095.2, %advance-arg-idx-block ], [ %35, %loop-kw-args.preheader ]
  %sichern.1 = phi {}* [ %sichern.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %phi-saw-aok = phi i64 [ %phi-this-was-aok, %advance-arg-idx-block ], [ 0, %loop-kw-args.preheader ]
  %phi-reg-arg-idx = phi i64 [ %45, %advance-arg-idx-block ], [ 3, %loop-kw-args.preheader ]
  %phi-bad-kw-idx = phi i64 [ %phi.aok-bad-good.bad-kw-idx, %advance-arg-idx-block ], [ 65536, %loop-kw-args.preheader ]
  %rem-nargs40 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-141 = add i64 %rem-nargs40, -1
  store i64 %rem-nargs-141, i64* %"remaining-nargs*", align 8
  %vaarg42 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs43 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-144 = add i64 %rem-nargs43, -1
  store i64 %rem-nargs-144, i64* %"remaining-nargs*", align 8
  %vaarg45 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  invoke void @cc_ifNotKeywordException({}* %vaarg42, i64 %phi-reg-arg-idx, { i32, i32, i8*, i8* }* nonnull %"va-list*", { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"YAS=SCHREIBE_ZUSAETZLICHEN_WERT^COMMON-LISP-USER^FN^^^DESC")
          to label %normal-dest46 unwind label %cleanup-lpad.loopexit

kw-exit-block:                                    ; preds = %loop-cont.kw-exit-block_crit_edge, %continue
  %38 = phi {}* [ %35, %continue ], [ %.pre, %loop-cont.kw-exit-block_crit_edge ]
  %G152094.1 = phi {}* [ %35, %continue ], [ %G152094.2, %loop-cont.kw-exit-block_crit_edge ]
  %informant.2 = phi {}* [ undef, %continue ], [ %informant.3, %loop-cont.kw-exit-block_crit_edge ]
  %G152095.1 = phi {}* [ %35, %continue ], [ %G152095.2, %loop-cont.kw-exit-block_crit_edge ]
  %sichern.2 = phi {}* [ undef, %continue ], [ %sichern.3, %loop-cont.kw-exit-block_crit_edge ]
  %39 = icmp eq {}* %G152095.1, %38
  %sichern.0 = select i1 %39, {}* %38, {}* %sichern.2
  %40 = icmp eq {}* %G152094.1, %38
  %informant.0 = select i1 %40, {}* %38, {}* %informant.2
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 619), align 8
  %42 = invoke {}* @cc_safe_fdefinition({}* %41)
          to label %normal-dest56 unwind label %cleanup-lpad.loopexit.split-lp

loop-cont:                                        ; preds = %advance-arg-idx-block
  invoke void @cc_ifBadKeywordArgumentException(i64 %phi-this-was-aok, i64 %phi.aok-bad-good.bad-kw-idx, {}* %vaarg42, { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"YAS=SCHREIBE_ZUSAETZLICHEN_WERT^COMMON-LISP-USER^FN^^^DESC")
          to label %loop-cont.kw-exit-block_crit_edge unwind label %cleanup-lpad.loopexit.split-lp

loop-cont.kw-exit-block_crit_edge:                ; preds = %loop-cont
  %.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %kw-exit-block

normal-dest46:                                    ; preds = %loop-kw-args
  %43 = icmp eq {}* %36, %vaarg42
  br i1 %43, label %aok-block, label %"kw-:SICHERN-test"

aok-block:                                        ; preds = %normal-dest46
  %44 = call i64 @cc_allowOtherKeywords(i64 %phi-saw-aok, {}* %vaarg45)
  br label %advance-arg-idx-block

advance-arg-idx-block:                            ; preds = %"kw-:INFORMANT-test", %"kw-:SICHERN-test", %not-seen-before-kw-block, %not-seen-before-kw-block48, %next-kw-block49, %aok-block
  %G152094.2 = phi {}* [ %G152094.0, %aok-block ], [ %G152094.0, %next-kw-block49 ], [ %34, %not-seen-before-kw-block48 ], [ %G152094.0, %not-seen-before-kw-block ], [ %G152094.0, %"kw-:SICHERN-test" ], [ %G152094.0, %"kw-:INFORMANT-test" ]
  %informant.3 = phi {}* [ %informant.1, %aok-block ], [ %informant.1, %next-kw-block49 ], [ %vaarg45, %not-seen-before-kw-block48 ], [ %informant.1, %not-seen-before-kw-block ], [ %informant.1, %"kw-:SICHERN-test" ], [ %informant.1, %"kw-:INFORMANT-test" ]
  %G152095.2 = phi {}* [ %G152095.0, %aok-block ], [ %G152095.0, %next-kw-block49 ], [ %G152095.0, %not-seen-before-kw-block48 ], [ %34, %not-seen-before-kw-block ], [ %G152095.0, %"kw-:SICHERN-test" ], [ %G152095.0, %"kw-:INFORMANT-test" ]
  %sichern.3 = phi {}* [ %sichern.1, %aok-block ], [ %sichern.1, %next-kw-block49 ], [ %sichern.1, %not-seen-before-kw-block48 ], [ %vaarg45, %not-seen-before-kw-block ], [ %sichern.1, %"kw-:SICHERN-test" ], [ %sichern.1, %"kw-:INFORMANT-test" ]
  %phi-this-was-aok = phi i64 [ %44, %aok-block ], [ %phi-saw-aok, %next-kw-block49 ], [ %phi-saw-aok, %not-seen-before-kw-block48 ], [ %phi-saw-aok, %not-seen-before-kw-block ], [ %phi-saw-aok, %"kw-:SICHERN-test" ], [ %phi-saw-aok, %"kw-:INFORMANT-test" ]
  %phi.aok-bad-good.bad-kw-idx = phi i64 [ %phi-bad-kw-idx, %aok-block ], [ %51, %next-kw-block49 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block48 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block ], [ %phi-bad-kw-idx, %"kw-:SICHERN-test" ], [ %phi-bad-kw-idx, %"kw-:INFORMANT-test" ]
  %45 = add i64 %phi-reg-arg-idx, 2
  %46 = icmp slt i64 %45, %nargs
  br i1 %46, label %loop-kw-args, label %loop-cont

"kw-:SICHERN-test":                               ; preds = %normal-dest46
  %47 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 694), align 16
  %48 = call i64 @cc_matchKeywordOnce({}* %47, {}* %vaarg42, {}* %G152095.0)
  switch i64 %48, label %not-seen-before-kw-block [
    i64 0, label %"kw-:INFORMANT-test"
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block:                         ; preds = %"kw-:SICHERN-test"
  br label %advance-arg-idx-block

"kw-:INFORMANT-test":                             ; preds = %"kw-:SICHERN-test"
  %49 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 474), align 16
  %50 = call i64 @cc_matchKeywordOnce({}* %49, {}* %vaarg42, {}* %G152094.0)
  switch i64 %50, label %not-seen-before-kw-block48 [
    i64 0, label %next-kw-block49
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block48:                       ; preds = %"kw-:INFORMANT-test"
  br label %advance-arg-idx-block

next-kw-block49:                                  ; preds = %"kw-:INFORMANT-test"
  %51 = call i64 @cc_trackFirstUnexpectedKeyword(i64 %phi-bad-kw-idx, i64 %phi-reg-arg-idx)
  br label %advance-arg-idx-block

normal-dest53:                                    ; preds = %tag1
  %ptrtoint = ptrtoint {}* %11 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag7

header-check-br:                                  ; preds = %normal-dest53
  %irc-bit-cast54 = bitcast {}* %11 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast54, i64 -9
  %irc-bit-cast55 = bitcast i8* %gep to i64*
  %52 = load i64, i64* %irc-bit-cast55, align 8
  %.off = add i64 %52, -913
  %53 = icmp ult i64 %.off, 85
  br i1 %53, label %tag26, label %header-check-br128

normal-dest56:                                    ; preds = %kw-exit-block
  %ptrtoint57 = ptrtoint {}* %42 to i64
  %entry-point-addr-uint = add i64 %ptrtoint57, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %54 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %42, i64 2, {}* %vaarg, {}* %vaarg33, {}* null, {}* null)
          to label %normal-dest60 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest60:                                    ; preds = %normal-dest56
  %.elt = extractvalue { {}*, i64 } %54, 0
  %.elt270 = extractvalue { {}*, i64 } %54, 1
  %cond = icmp eq i64 %.elt270, 0
  %55 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152209.0 = select i1 %cond, {}* %55, {}* %.elt
  %56 = icmp eq {}* %G152209.0, %55
  br i1 %56, label %tag20, label %tag18

normal-dest67:                                    ; preds = %tag5
  %57 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %58 = invoke {}* @cc_safe_fdefinition({}* %57)
          to label %normal-dest69 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest69:                                    ; preds = %normal-dest67
  %ptrtoint70 = ptrtoint {}* %58 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %59 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %58, i64 1, {}* %vaarg37, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest76:                                    ; preds = %normal-dest69
  %.elt323 = extractvalue { {}*, i64 } %59, 0
  %.elt325 = extractvalue { {}*, i64 } %59, 1
  %cond268 = icmp eq i64 %.elt325, 0
  %60 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152160.0 = select i1 %cond268, {}* %60, {}* %.elt323
  %ptrtoint82 = ptrtoint {}* %13 to i64
  %entry-point-addr-uint83 = add i64 %ptrtoint82, 7
  %entry-point-addr84 = inttoptr i64 %entry-point-addr-uint83 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point85 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr84, align 8
  %61 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point85({}* %13, i64 2, {}* %G152090.0, {}* %G152160.0, {}* null, {}* null)
          to label %tag1 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest90:                                    ; preds = %tag6
  %62 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %63 = invoke {}* @cc_safe_fdefinition({}* %62)
          to label %normal-dest92 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest92:                                    ; preds = %normal-dest90
  %ptrtoint93 = ptrtoint {}* %63 to i64
  %entry-point-addr-uint94 = add i64 %ptrtoint93, 7
  %entry-point-addr95 = inttoptr i64 %entry-point-addr-uint94 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point96 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr95, align 8
  %64 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point96({}* %63, i64 1, {}* %vaarg37, {}* null, {}* null, {}* null)
          to label %normal-dest99 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest99:                                    ; preds = %normal-dest92
  %.elt315 = extractvalue { {}*, i64 } %64, 0
  %.elt317 = extractvalue { {}*, i64 } %64, 1
  %cond267 = icmp eq i64 %.elt317, 0
  %65 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152167.0 = select i1 %cond267, {}* %65, {}* %.elt315
  %ptrtoint105 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint106 = add i64 %ptrtoint105, 7
  %entry-point-addr107 = inttoptr i64 %entry-point-addr-uint106 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point108 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr107, align 8
  %66 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point108({}* %15, i64 2, {}* %G152090.0, {}* %G152167.0, {}* null, {}* null)
          to label %tag1 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest113:                                   ; preds = %tag7
  %67 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %68 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %69 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %70 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 710), align 16
  %ptrtoint114 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint115 = add i64 %ptrtoint114, 7
  %entry-point-addr116 = inttoptr i64 %entry-point-addr-uint115 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point117 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr116, align 8
  %71 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point117({}* %17, i64 5, {}* %67, {}* %68, {}* %11, {}* %69, {}* %70)
          to label %normal-dest120 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest120:                                   ; preds = %normal-dest113
  %.elt296 = extractvalue { {}*, i64 } %71, 0
  %.elt298 = extractvalue { {}*, i64 } %71, 1
  %cond265 = icmp eq i64 %.elt298, 0
  %72 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152141.1 = select i1 %cond265, {}* %72, {}* %.elt296
  br label %tag26

header-check-br128:                               ; preds = %header-check-br
  %.off349 = add i64 %52, -1001
  %73 = icmp ult i64 %.off349, 5
  br i1 %73, label %maybe-more-tests136, label %tag7

maybe-more-tests136:                              ; preds = %header-check-br128
  %74 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %75 = invoke {}* @cc_safe_fdefinition({}* %74)
          to label %normal-dest168 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest138:                                   ; preds = %tag11
  %ptrtoint139 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint140 = add i64 %ptrtoint139, 7
  %entry-point-addr141 = inttoptr i64 %entry-point-addr-uint140 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point142 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr141, align 8
  %76 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point142({}* %23, i64 2, {}* %vaarg, {}* %vaarg33, {}* null, {}* null)
          to label %normal-dest145 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest145:                                   ; preds = %normal-dest138
  %.elt284 = extractvalue { {}*, i64 } %76, 0
  %.elt286 = extractvalue { {}*, i64 } %76, 1
  %cond262 = icmp eq i64 %.elt286, 0
  %77 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152090.0 = select i1 %cond262, {}* %77, {}* %.elt284
  %78 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 696), align 16
  %79 = invoke {}* @cc_safe_fdefinition({}* %78)
          to label %normal-dest152 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest152:                                   ; preds = %normal-dest145
  %ptrtoint153 = ptrtoint {}* %79 to i64
  %entry-point-addr-uint154 = add i64 %ptrtoint153, 7
  %entry-point-addr155 = inttoptr i64 %entry-point-addr-uint154 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point156 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr155, align 8
  %80 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point156({}* %79, i64 1, {}* %G152090.0, {}* null, {}* null, {}* null)
          to label %normal-dest159 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest159:                                   ; preds = %normal-dest152
  %.elt288 = extractvalue { {}*, i64 } %80, 0
  %.elt290 = extractvalue { {}*, i64 } %80, 1
  %cond263 = icmp eq i64 %.elt290, 0
  %81 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152181.0 = select i1 %cond263, {}* %81, {}* %.elt288
  %82 = icmp eq {}* %G152181.0, %81
  br i1 %82, label %tag5, label %tag9

normal-dest168:                                   ; preds = %maybe-more-tests136
  %ptrtoint169 = ptrtoint {}* %75 to i64
  %entry-point-addr-uint170 = add i64 %ptrtoint169, 7
  %entry-point-addr171 = inttoptr i64 %entry-point-addr-uint170 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point172 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr171, align 8
  %83 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point172({}* %75, i64 1, {}* nonnull %11, {}* null, {}* null, {}* null)
          to label %normal-dest175 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest175:                                   ; preds = %normal-dest168
  %.elt311 = extractvalue { {}*, i64 } %83, 0
  %.elt313 = extractvalue { {}*, i64 } %83, 1
  %cond266 = icmp eq i64 %.elt313, 0
  %84 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152141.2 = select i1 %cond266, {}* %84, {}* %.elt311
  br label %tag26

normal-dest182:                                   ; preds = %tag18
  %85 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %86 = invoke {}* @cc_safe_fdefinition({}* %85)
          to label %normal-dest184 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest184:                                   ; preds = %normal-dest182
  %ptrtoint185 = ptrtoint {}* %86 to i64
  %entry-point-addr-uint186 = add i64 %ptrtoint185, 7
  %entry-point-addr187 = inttoptr i64 %entry-point-addr-uint186 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point188 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr187, align 8
  %87 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point188({}* %86, i64 2, {}* %vaarg, {}* %vaarg33, {}* null, {}* null)
          to label %normal-dest191 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest191:                                   ; preds = %normal-dest184
  %.elt272 = extractvalue { {}*, i64 } %87, 0
  %.elt274 = extractvalue { {}*, i64 } %87, 1
  %cond260 = icmp eq i64 %.elt274, 0
  %88 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152203.0 = select i1 %cond260, {}* %88, {}* %.elt272
  %ptrtoint197 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint198 = add i64 %ptrtoint197, 7
  %entry-point-addr199 = inttoptr i64 %entry-point-addr-uint198 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point200 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr199, align 8
  %89 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point200({}* %25, i64 2, {}* %vaarg37, {}* %G152203.0, {}* null, {}* null)
          to label %normal-dest203 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest203:                                   ; preds = %normal-dest191
  %.elt276 = extractvalue { {}*, i64 } %89, 0
  %.elt278 = extractvalue { {}*, i64 } %89, 1
  %cond261 = icmp eq i64 %.elt278, 0
  %90 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %object.0 = select i1 %cond261, {}* %90, {}* %.elt276
  %91 = icmp eq {}* %object.0, %90
  %.val = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G152196.0 = select i1 %91, {}* %.val, {}* %90
  %92 = icmp eq {}* %G152196.0, %90
  br i1 %92, label %tag8, label %tag19

normal-dest210:                                   ; preds = %tag20
  %93 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 706), align 16
  %94 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 707), align 8
  %ptrtoint211 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint212 = add i64 %ptrtoint211, 7
  %entry-point-addr213 = inttoptr i64 %entry-point-addr-uint212 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point214 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr213, align 8
  %95 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point214({}* %28, i64 4, {}* %93, {}* %94, {}* %vaarg, {}* %vaarg33)
          to label %normal-dest217 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest217:                                   ; preds = %normal-dest210
  %.elt331 = extractvalue { {}*, i64 } %95, 0
  %.elt333 = extractvalue { {}*, i64 } %95, 1
  br label %tag8

normal-dest219:                                   ; preds = %tag22
  %ptrtoint220 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint221 = add i64 %ptrtoint220, 7
  %entry-point-addr222 = inttoptr i64 %entry-point-addr-uint221 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point223 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr222, align 8
  %96 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point223({}* %30, i64 1, {}* %vaarg37, {}* null, {}* null, {}* null)
          to label %tag1 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest228:                                   ; preds = %tag24
  %ptrtoint229 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint230 = add i64 %ptrtoint229, 7
  %entry-point-addr231 = inttoptr i64 %entry-point-addr-uint230 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point232 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr231, align 8
  %97 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point232({}* %32, i64 2, {}* %vaarg, {}* %vaarg33, {}* null, {}* null)
          to label %tag11 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest246:                                   ; preds = %tag26
  %98 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 478), align 16
  %99 = invoke {}* @cc_safe_fdefinition({}* %98)
          to label %normal-dest252 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest252:                                   ; preds = %normal-dest246
  %ptrtoint253 = ptrtoint {}* %99 to i64
  %entry-point-addr-uint254 = add i64 %ptrtoint253, 7
  %entry-point-addr255 = inttoptr i64 %entry-point-addr-uint254 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point256 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr255, align 8
  %100 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point256({}* %99, i64 3, {}* %vaarg, {}* %vaarg33, {}* %informant.0, {}* null)
          to label %normal-dest259 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest259:                                   ; preds = %normal-dest252
  %.elt304 = extractvalue { {}*, i64 } %100, 0
  %.elt306 = extractvalue { {}*, i64 } %100, 1
  br label %tag8
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^565^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !104 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^565^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest10, %header-check-br73
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest21 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G152237.0 = phi {}* [ %18, %header-check-br ], [ %G152237.1, %normal-dest17 ], [ %G152237.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 560), align 16
  %ptrtoint34 = ptrtoint {}* %G152237.0 to i64
  %entry-point-addr-uint35 = add i64 %ptrtoint34, 7
  %entry-point-addr36 = inttoptr i64 %entry-point-addr-uint35 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point37 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr36, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point37({}* %G152237.0, i64 2, {}* %"closure->YAS=LOESCHE_WERT", {}* %13, {}* null, {}* null)
          to label %normal-dest40 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest59, %normal-dest53, %normal-dest46, %normal-dest40, %tag3, %normal-dest21, %tag2, %normal-dest13, %maybe-more-tests81, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 560), align 16
  %"closure->YAS=LOESCHE_WERT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=LOESCHE_WERT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=LOESCHE_WERT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 20129, i64 565, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag3, label %header-check-br73

normal-dest13:                                    ; preds = %maybe-more-tests81
  %ptrtoint14 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152237.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag3

normal-dest21:                                    ; preds = %tag2
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 723), align 8
  %ptrtoint22 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %12, i64 5, {}* %23, {}* %24, {}* %18, {}* %25, {}* %26)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt = extractvalue { {}*, i64 } %27, 0
  %.elt84 = extractvalue { {}*, i64 } %27, 1
  %cond = icmp eq i64 %.elt84, 0
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152237.2 = select i1 %cond, {}* %28, {}* %.elt
  br label %tag3

normal-dest40:                                    ; preds = %tag3
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest46 unwind label %cleanup-lpad

normal-dest46:                                    ; preds = %normal-dest40
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 724), align 16
  %ptrtoint47 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint48 = add i64 %ptrtoint47, 7
  %entry-point-addr49 = inttoptr i64 %entry-point-addr-uint48 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point50 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr49, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point50({}* %30, i64 2, {}* %"closure->YAS=LOESCHE_WERT", {}* %31, {}* null, {}* null)
          to label %normal-dest53 unwind label %cleanup-lpad

normal-dest53:                                    ; preds = %normal-dest46
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest59 unwind label %cleanup-lpad

normal-dest59:                                    ; preds = %normal-dest53
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 727), align 8
  %ptrtoint60 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint61 = add i64 %ptrtoint60, 7
  %entry-point-addr62 = inttoptr i64 %entry-point-addr-uint61 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point63 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr62, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point63({}* %34, i64 2, {}* %"closure->YAS=LOESCHE_WERT", {}* %35, {}* null, {}* null)
          to label %normal-dest66 unwind label %cleanup-lpad

normal-dest66:                                    ; preds = %normal-dest59
  %37 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %37, {}* inttoptr (i64 2328 to {}*))
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 560), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %39 = insertvalue { {}*, i64 } undef, {}* %38, 0
  %40 = insertvalue { {}*, i64 } %39, i64 1, 1
  ret { {}*, i64 } %40

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag2

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest13 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=LOESCHE_WERT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !105 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 2
  br i1 %enough-args, label %error, label %continue

tag1:                                             ; preds = %kw-exit-block
  %9 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest22 unwind label %cleanup-lpad.loopexit.split-lp

tag2:                                             ; preds = %kw-exit-block
  %10 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest65 unwind label %cleanup-lpad.loopexit.split-lp

tag4:                                             ; preds = %normal-dest56, %normal-dest65
  %.sink95 = phi { {}*, i64 } [ %44, %normal-dest65 ], [ %40, %normal-dest56 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %.sink95

cleanup-lpad.loopexit:                            ; preds = %loop-kw-args
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %error, %loop-cont, %tag1, %normal-dest22, %normal-dest24, %normal-dest27, %normal-dest31, %normal-dest38, %normal-dest50, %normal-dest56, %tag2, %normal-dest65
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @":::global-str-YAS=LOESCHE_WERT^COMMON-LISP-USER^FN^^", i64 0, i64 0), i64 %nargs, i64 2)
          to label %normal-dest unwind label %cleanup-lpad.loopexit.split-lp

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs9 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-110 = add i64 %rem-nargs9, -1
  store i64 %rem-nargs-110, i64* %"remaining-nargs*", align 8
  %vaarg11 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %12 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 304), align 16
  %14 = icmp eq i64 %nargs, 2
  br i1 %14, label %kw-exit-block, label %loop-kw-args.preheader

loop-kw-args.preheader:                           ; preds = %continue
  br label %loop-kw-args

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

loop-kw-args:                                     ; preds = %loop-kw-args.preheader, %advance-arg-idx-block
  %G152221.0 = phi {}* [ %G152221.2, %advance-arg-idx-block ], [ %12, %loop-kw-args.preheader ]
  %zurueck.1 = phi {}* [ %zurueck.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %phi-saw-aok = phi i64 [ %phi-this-was-aok, %advance-arg-idx-block ], [ 0, %loop-kw-args.preheader ]
  %phi-reg-arg-idx = phi i64 [ %21, %advance-arg-idx-block ], [ 2, %loop-kw-args.preheader ]
  %phi-bad-kw-idx = phi i64 [ %phi.aok-bad-good.bad-kw-idx, %advance-arg-idx-block ], [ 65536, %loop-kw-args.preheader ]
  %rem-nargs14 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-115 = add i64 %rem-nargs14, -1
  store i64 %rem-nargs-115, i64* %"remaining-nargs*", align 8
  %vaarg16 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs17 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-118 = add i64 %rem-nargs17, -1
  store i64 %rem-nargs-118, i64* %"remaining-nargs*", align 8
  %vaarg19 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  invoke void @cc_ifNotKeywordException({}* %vaarg16, i64 %phi-reg-arg-idx, { i32, i32, i8*, i8* }* nonnull %"va-list*", { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"YAS=LOESCHE_WERT^COMMON-LISP-USER^FN^^^DESC")
          to label %normal-dest20 unwind label %cleanup-lpad.loopexit

kw-exit-block:                                    ; preds = %loop-cont.kw-exit-block_crit_edge, %continue
  %15 = phi {}* [ %12, %continue ], [ %.pre, %loop-cont.kw-exit-block_crit_edge ]
  %G152221.1 = phi {}* [ %12, %continue ], [ %G152221.2, %loop-cont.kw-exit-block_crit_edge ]
  %zurueck.2 = phi {}* [ undef, %continue ], [ %zurueck.3, %loop-cont.kw-exit-block_crit_edge ]
  %16 = icmp eq {}* %G152221.1, %15
  %zurueck.0 = select i1 %16, {}* %15, {}* %zurueck.2
  %17 = icmp eq {}* %zurueck.0, %15
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 622), align 16
  br i1 %17, label %tag2, label %tag1

loop-cont:                                        ; preds = %advance-arg-idx-block
  invoke void @cc_ifBadKeywordArgumentException(i64 %phi-this-was-aok, i64 %phi.aok-bad-good.bad-kw-idx, {}* %vaarg16, { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"YAS=LOESCHE_WERT^COMMON-LISP-USER^FN^^^DESC")
          to label %loop-cont.kw-exit-block_crit_edge unwind label %cleanup-lpad.loopexit.split-lp

loop-cont.kw-exit-block_crit_edge:                ; preds = %loop-cont
  %.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %kw-exit-block

normal-dest20:                                    ; preds = %loop-kw-args
  %19 = icmp eq {}* %13, %vaarg16
  br i1 %19, label %aok-block, label %"kw-:ZURUECK-test"

aok-block:                                        ; preds = %normal-dest20
  %20 = call i64 @cc_allowOtherKeywords(i64 %phi-saw-aok, {}* %vaarg19)
  br label %advance-arg-idx-block

advance-arg-idx-block:                            ; preds = %matched-kw-block, %next-kw-block, %aok-block
  %G152221.2 = phi {}* [ %G152221.0, %aok-block ], [ %G152221.0, %next-kw-block ], [ %G152221.3, %matched-kw-block ]
  %zurueck.3 = phi {}* [ %zurueck.1, %aok-block ], [ %zurueck.1, %next-kw-block ], [ %zurueck.4, %matched-kw-block ]
  %phi-this-was-aok = phi i64 [ %20, %aok-block ], [ %phi-saw-aok, %next-kw-block ], [ %phi-saw-aok, %matched-kw-block ]
  %phi.aok-bad-good.bad-kw-idx = phi i64 [ %phi-bad-kw-idx, %aok-block ], [ %27, %next-kw-block ], [ %phi-bad-kw-idx, %matched-kw-block ]
  %21 = add i64 %phi-reg-arg-idx, 2
  %22 = icmp slt i64 %21, %nargs
  br i1 %22, label %loop-kw-args, label %loop-cont

"kw-:ZURUECK-test":                               ; preds = %normal-dest20
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 729), align 8
  %24 = call i64 @cc_matchKeywordOnce({}* %23, {}* %vaarg16, {}* %G152221.0)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %next-kw-block, label %matched-kw-block

matched-kw-block:                                 ; preds = %"kw-:ZURUECK-test"
  %26 = icmp eq i64 %24, 2
  %G152221.3 = select i1 %26, {}* %G152221.0, {}* %11
  %zurueck.4 = select i1 %26, {}* %zurueck.1, {}* %vaarg19
  br label %advance-arg-idx-block

next-kw-block:                                    ; preds = %"kw-:ZURUECK-test"
  %27 = call i64 @cc_trackFirstUnexpectedKeyword(i64 %phi-bad-kw-idx, i64 %phi-reg-arg-idx)
  br label %advance-arg-idx-block

normal-dest22:                                    ; preds = %tag1
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 717), align 8
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest24 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest24:                                    ; preds = %normal-dest22
  %ptrtoint = ptrtoint {}* %29 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %29, i64 2, {}* %vaarg, {}* %vaarg11, {}* null, {}* null)
          to label %normal-dest27 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest27:                                    ; preds = %normal-dest24
  %.elt = extractvalue { {}*, i64 } %30, 0
  %.elt75 = extractvalue { {}*, i64 } %30, 1
  %cond = icmp eq i64 %.elt75, 0
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152269.0 = select i1 %cond, {}* %31, {}* %.elt
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 474), align 16
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 719), align 8
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest31 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest31:                                    ; preds = %normal-dest27
  %ptrtoint32 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint33 = add i64 %ptrtoint32, 7
  %entry-point-addr34 = inttoptr i64 %entry-point-addr-uint33 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point35 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr34, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point35({}* %34, i64 2, {}* %vaarg, {}* %vaarg11, {}* null, {}* null)
          to label %normal-dest38 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest38:                                    ; preds = %normal-dest31
  %.elt77 = extractvalue { {}*, i64 } %35, 0
  %.elt79 = extractvalue { {}*, i64 } %35, 1
  %cond73 = icmp eq i64 %.elt79, 0
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152271.0 = select i1 %cond73, {}* %36, {}* %.elt77
  %ptrtoint44 = ptrtoint {}* %9 to i64
  %entry-point-addr-uint45 = add i64 %ptrtoint44, 7
  %entry-point-addr46 = inttoptr i64 %entry-point-addr-uint45 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point47 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr46, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point47({}* %9, i64 5, {}* %vaarg, {}* %vaarg11, {}* %G152269.0, {}* %32, {}* %G152271.0)
          to label %normal-dest50 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest50:                                    ; preds = %normal-dest38
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 721), align 8
  %39 = invoke {}* @cc_safe_fdefinition({}* %38)
          to label %normal-dest56 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest56:                                    ; preds = %normal-dest50
  %ptrtoint57 = ptrtoint {}* %39 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %39, i64 2, {}* %vaarg, {}* %vaarg11, {}* null, {}* null)
          to label %tag4 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest65:                                    ; preds = %tag2
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 474), align 16
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 715), align 8
  %ptrtoint66 = ptrtoint {}* %10 to i64
  %entry-point-addr-uint67 = add i64 %ptrtoint66, 7
  %entry-point-addr68 = inttoptr i64 %entry-point-addr-uint67 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point69 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr68, align 8
  %44 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point69({}* %10, i64 5, {}* %vaarg, {}* %vaarg11, {}* %41, {}* %42, {}* %43)
          to label %tag4 unwind label %cleanup-lpad.loopexit.split-lp
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^591^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !106 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^591^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest67, %normal-dest17, %header-check-br
  %G152309.0 = phi {}* [ %18, %header-check-br ], [ %G152309.1, %normal-dest17 ], [ %G152309.2, %normal-dest67 ]
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 540), align 16
  %ptrtoint20 = ptrtoint {}* %G152309.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G152309.0, i64 2, {}* %"closure->YAS=LOESCHE_EINEN_WERT", {}* %11, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest10, %header-check-br73
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest60 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %tag2, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag1, %normal-dest13, %maybe-more-tests81, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 540), align 16
  %"closure->YAS=LOESCHE_EINEN_WERT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=LOESCHE_EINEN_WERT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=LOESCHE_EINEN_WERT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 21007, i64 591, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br73

normal-dest13:                                    ; preds = %maybe-more-tests81
  %ptrtoint14 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152309.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag1

normal-dest26:                                    ; preds = %tag1
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 736), align 16
  %ptrtoint33 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %24, i64 2, {}* %"closure->YAS=LOESCHE_EINEN_WERT", {}* %25, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 737), align 8
  %ptrtoint46 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %28, i64 2, {}* %"closure->YAS=LOESCHE_EINEN_WERT", {}* %29, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %31, {}* inttoptr (i64 2372 to {}*))
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 540), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %33 = insertvalue { {}*, i64 } undef, {}* %32, 0
  %34 = insertvalue { {}*, i64 } %33, i64 1, 1
  ret { {}*, i64 } %34

normal-dest60:                                    ; preds = %tag2
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %37 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 735), align 8
  %ptrtoint61 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %14, i64 5, {}* %35, {}* %36, {}* %18, {}* %37, {}* %38)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt = extractvalue { {}*, i64 } %39, 0
  %.elt84 = extractvalue { {}*, i64 } %39, 1
  %cond = icmp eq i64 %.elt84, 0
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152309.2 = select i1 %cond, {}* %40, {}* %.elt
  br label %tag1

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag2

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest13 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=LOESCHE_EINEN_WERT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !107 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 3
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 3, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=LOESCHE_EINEN_WERT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 3
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 3, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=LOESCHE_EINEN_WERT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc397 unwind label %cleanup-lpad.loopexit.split-lp

.noexc397:                                        ; preds = %13
  unreachable

tag:                                              ; preds = %header-check-br189, %header-check-br189, %header-check-br189, %header-check-br189
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 75), align 8
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest81 unwind label %cleanup-lpad.loopexit

tag3:                                             ; preds = %tag46, %normal-dest323, %tag55
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 468), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest95 unwind label %cleanup-lpad.loopexit.split-lp

tag5:                                             ; preds = %tag55
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 622), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest104 unwind label %cleanup-lpad.loopexit.split-lp

tag11:                                            ; preds = %tag47
  %20 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest175 unwind label %cleanup-lpad.loopexit

tag22:                                            ; preds = %normal-dest152
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 622), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest218 unwind label %cleanup-lpad.loopexit.split-lp

tag23:                                            ; preds = %tag27
  %24 = add i64 %52, -3
  %25 = inttoptr i64 %24 to {}**
  %26 = load {}*, {}** %25, align 8
  br label %tag33

tag27:                                            ; preds = %tag66
  %27 = icmp eq {}* %G152430.0, %51
  br i1 %27, label %tag47, label %tag23

tag31:                                            ; preds = %normal-dest152, %normal-dest283, %normal-dest225, %normal-dest102
  %return-value.sroa.23.0 = phi i64 [ %.elt396, %normal-dest283 ], [ %.elt374, %normal-dest102 ], [ %.elt367, %normal-dest225 ], [ 1, %normal-dest152 ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt394, %normal-dest283 ], [ %.elt372, %normal-dest102 ], [ %.elt365, %normal-dest225 ], [ %79, %normal-dest152 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %28 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %29 = insertvalue { {}*, i64 } %28, i64 %return-value.sroa.23.0, 1
  ret { {}*, i64 } %29

tag33:                                            ; preds = %tag47, %normal-dest183, %tag23
  %.val410 = phi {}* [ %51, %tag23 ], [ %87, %normal-dest183 ], [ %G152430.0, %tag47 ]
  %30 = phi {}* [ %G152430.0, %tag23 ], [ %.val409.pre, %normal-dest183 ], [ %G152430.0, %tag47 ]
  %.in384 = phi {}* [ %26, %tag23 ], [ %.in, %normal-dest183 ], [ %G152430.0, %tag47 ]
  %31 = bitcast {}* %.in384 to i8*
  %32 = icmp eq {}* %.in384, %farg2
  %G152410.0 = select i1 %32, {}* %30, {}* %.val410
  %33 = icmp eq {}* %G152410.0, %.val410
  br i1 %33, label %tag54, label %tag64

tag35:                                            ; preds = %header-check-br237, %header-check-br237, %header-check-br237, %header-check-br237
  %34 = ptrtoint {}* %.in384 to i64
  %single-float-tag-only250 = and i64 %34, 7
  %35 = icmp eq i64 %single-float-tag-only250, 6
  br i1 %35, label %tag46, label %tag53

tag46:                                            ; preds = %tag64.tag46_crit_edge, %header-check-br237, %header-check-br189, %tag35, %tag53, %tag54
  %.val = phi {}* [ %.val.pre, %tag64.tag46_crit_edge ], [ %30, %tag54 ], [ %30, %tag53 ], [ %30, %tag35 ], [ %30, %header-check-br189 ], [ %30, %header-check-br237 ]
  %36 = phi {}* [ %48, %tag64.tag46_crit_edge ], [ %.val410, %tag54 ], [ %.val410, %tag53 ], [ %.val410, %tag35 ], [ %.val410, %header-check-br189 ], [ %.val410, %header-check-br237 ]
  %37 = add i64 %52, 5
  %38 = inttoptr i64 %37 to {}**
  %39 = load {}*, {}** %38, align 8
  %40 = icmp eq {}* %39, %36
  %object.0 = select i1 %40, {}* %.val, {}* %36
  %41 = icmp eq {}* %object.0, %36
  %G152376.0 = select i1 %41, {}* %.val, {}* %36
  %42 = icmp eq {}* %G152376.0, %36
  br i1 %42, label %tag3, label %tag66

tag47:                                            ; preds = %tag27
  br i1 %50, label %tag11, label %tag33

tag48:                                            ; preds = %normal-dest77
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 468), align 16
  %44 = invoke {}* @cc_safe_fdefinition({}* %43)
          to label %normal-dest276 unwind label %cleanup-lpad.loopexit.split-lp

tag53:                                            ; preds = %tag35
  %fixnum-tag-only298382 = and i64 %34, 3
  %fixnump-test299 = icmp ne i64 %fixnum-tag-only298382, 0
  %test192 = icmp eq i64 %single-float-tag-only250, 1
  %or.cond = and i1 %fixnump-test299, %test192
  br i1 %or.cond, label %header-check-br189, label %tag46

tag54:                                            ; preds = %tag33
  br i1 %brmerge, label %tag46, label %header-check-br237

tag55:                                            ; preds = %tag64
  %45 = icmp eq {}* %"%SUBLIST152288.0418", %48
  br i1 %45, label %tag3, label %tag5

tag57:                                            ; preds = %tag66
  %46 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %47 = invoke {}* @cc_safe_fdefinition({}* %46)
          to label %normal-dest304 unwind label %cleanup-lpad.loopexit.split-lp

tag64:                                            ; preds = %tag33, %normal-dest88
  %48 = phi {}* [ %61, %normal-dest88 ], [ %.val410, %tag33 ]
  %G152401.0 = phi {}* [ %G152401.1, %normal-dest88 ], [ %30, %tag33 ]
  %49 = icmp eq {}* %G152401.0, %48
  br i1 %49, label %tag64.tag46_crit_edge, label %tag55

tag64.tag46_crit_edge:                            ; preds = %tag64
  %.val.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  br label %tag46

tag66:                                            ; preds = %tag66.lr.ph, %tag46
  %G152430.0 = phi {}* [ %.val415, %tag66.lr.ph ], [ %.val, %tag46 ]
  %50 = phi i1 [ %113, %tag66.lr.ph ], [ %41, %tag46 ]
  %51 = phi {}* [ %111, %tag66.lr.ph ], [ %36, %tag46 ]
  %"%SUBLIST152288.0418" = phi {}* [ %"%SUBLIST152288.2", %tag66.lr.ph ], [ %39, %tag46 ]
  %52 = ptrtoint {}* %"%SUBLIST152288.0418" to i64
  %tag-only313342 = and i64 %52, 7
  %consp-test314 = icmp eq i64 %tag-only313342, 3
  br i1 %consp-test314, label %tag27, label %tag57

tag69:                                            ; preds = %normal-dest77
  %53 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %54 = invoke {}* @cc_safe_fdefinition({}* %53)
          to label %normal-dest316 unwind label %cleanup-lpad.loopexit.split-lp

cleanup-lpad.loopexit:                            ; preds = %tag, %normal-dest81, %tag11, %normal-dest175
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %normal-dest, %normal-dest74, %tag3, %normal-dest95, %tag5, %normal-dest104, %normal-dest106, %normal-dest108, %normal-dest115, %normal-dest127, %normal-dest139, %normal-dest145, %tag22, %normal-dest218, %tag48, %normal-dest276, %tag57, %normal-dest304, %tag69, %normal-dest316, %10, %13
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %11
  %55 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 619), align 8
  %56 = invoke {}* @cc_safe_fdefinition({}* %55)
          to label %normal-dest74 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest74:                                    ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %56 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %57 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %56, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest77 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest77:                                    ; preds = %normal-dest74
  %.elt = extractvalue { {}*, i64 } %57, 0
  %.elt337 = extractvalue { {}*, i64 } %57, 1
  %cond = icmp eq i64 %.elt337, 0
  %58 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152438.0 = select i1 %cond, {}* %58, {}* %.elt
  %59 = icmp eq {}* %G152438.0, %58
  br i1 %59, label %tag48, label %tag69

normal-dest81:                                    ; preds = %tag
  %ptrtoint82 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint83 = add i64 %ptrtoint82, 7
  %entry-point-addr84 = inttoptr i64 %entry-point-addr-uint83 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point85 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr84, align 8
  %60 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point85({}* %15, i64 2, {}* nonnull %farg2, {}* nonnull %.in384, {}* null, {}* null)
          to label %normal-dest88 unwind label %cleanup-lpad.loopexit

normal-dest88:                                    ; preds = %normal-dest81
  %.elt386 = extractvalue { {}*, i64 } %60, 0
  %.elt388 = extractvalue { {}*, i64 } %60, 1
  %cond334 = icmp eq i64 %.elt388, 0
  %61 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152401.1 = select i1 %cond334, {}* %61, {}* %.elt386
  br label %tag64

normal-dest95:                                    ; preds = %tag3
  %62 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 733), align 8
  %63 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 734), align 16
  %ptrtoint96 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint97 = add i64 %ptrtoint96, 7
  %entry-point-addr98 = inttoptr i64 %entry-point-addr-uint97 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point99 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr98, align 8
  %64 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point99({}* %17, i64 5, {}* %62, {}* %63, {}* %farg2, {}* %farg1, {}* %farg0)
          to label %normal-dest102 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest102:                                   ; preds = %normal-dest95
  %.elt372 = extractvalue { {}*, i64 } %64, 0
  %.elt374 = extractvalue { {}*, i64 } %64, 1
  br label %tag31

normal-dest104:                                   ; preds = %tag5
  %65 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 480), align 16
  %66 = invoke {}* @cc_safe_fdefinition({}* %65)
          to label %normal-dest106 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest106:                                   ; preds = %normal-dest104
  %67 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %68 = invoke {}* @cc_safe_fdefinition({}* %67)
          to label %normal-dest108 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest108:                                   ; preds = %normal-dest106
  %ptrtoint109 = ptrtoint {}* %68 to i64
  %entry-point-addr-uint110 = add i64 %ptrtoint109, 7
  %entry-point-addr111 = inttoptr i64 %entry-point-addr-uint110 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point112 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr111, align 8
  %69 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point112({}* %68, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest115 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest115:                                   ; preds = %normal-dest108
  %.elt349 = extractvalue { {}*, i64 } %69, 0
  %.elt351 = extractvalue { {}*, i64 } %69, 1
  %cond330 = icmp eq i64 %.elt351, 0
  %70 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152366.0 = select i1 %cond330, {}* %70, {}* %.elt349
  %ptrtoint121 = ptrtoint {}* %66 to i64
  %entry-point-addr-uint122 = add i64 %ptrtoint121, 7
  %entry-point-addr123 = inttoptr i64 %entry-point-addr-uint122 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point124 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr123, align 8
  %71 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point124({}* %66, i64 2, {}* %farg2, {}* %G152366.0, {}* null, {}* null)
          to label %normal-dest127 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest127:                                   ; preds = %normal-dest115
  %.elt353 = extractvalue { {}*, i64 } %71, 0
  %.elt355 = extractvalue { {}*, i64 } %71, 1
  %cond331 = icmp eq i64 %.elt355, 0
  %72 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152361.0 = select i1 %cond331, {}* %72, {}* %.elt353
  %73 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 474), align 16
  %74 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 686), align 16
  %ptrtoint133 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint134 = add i64 %ptrtoint133, 7
  %entry-point-addr135 = inttoptr i64 %entry-point-addr-uint134 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point136 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr135, align 8
  %75 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point136({}* %19, i64 5, {}* %farg0, {}* %farg1, {}* %G152361.0, {}* %73, {}* %74)
          to label %normal-dest139 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest139:                                   ; preds = %normal-dest127
  %76 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %77 = invoke {}* @cc_safe_fdefinition({}* %76)
          to label %normal-dest145 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest145:                                   ; preds = %normal-dest139
  %ptrtoint146 = ptrtoint {}* %77 to i64
  %entry-point-addr-uint147 = add i64 %ptrtoint146, 7
  %entry-point-addr148 = inttoptr i64 %entry-point-addr-uint147 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point149 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr148, align 8
  %78 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point149({}* %77, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest152 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest152:                                   ; preds = %normal-dest145
  %.elt361 = extractvalue { {}*, i64 } %78, 0
  %.elt363 = extractvalue { {}*, i64 } %78, 1
  %cond332 = icmp eq i64 %.elt363, 0
  %79 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x.0 = select i1 %cond332, {}* %79, {}* %.elt361
  %80 = icmp eq {}* %x.0, %79
  %.val411 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G152348.0 = select i1 %80, {}* %.val411, {}* %79
  %81 = icmp eq {}* %G152348.0, %79
  br i1 %81, label %tag31, label %tag22

normal-dest175:                                   ; preds = %tag11
  %82 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %83 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %84 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %85 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint177 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint178 = add i64 %ptrtoint177, 7
  %entry-point-addr179 = inttoptr i64 %entry-point-addr-uint178 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point180 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr179, align 8
  %86 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point180({}* %21, i64 5, {}* %82, {}* %83, {}* %"%SUBLIST152288.0418", {}* %84, {}* %85)
          to label %normal-dest183 unwind label %cleanup-lpad.loopexit

normal-dest183:                                   ; preds = %normal-dest175
  %.elt390 = extractvalue { {}*, i64 } %86, 0
  %.elt392 = extractvalue { {}*, i64 } %86, 1
  %cond335 = icmp eq i64 %.elt392, 0
  %87 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %.in = select i1 %cond335, {}* %87, {}* %.elt390
  %.val409.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  br label %tag33

header-check-br189:                               ; preds = %tag53
  %gep194 = getelementptr inbounds i8, i8* %31, i64 -9
  %irc-bit-cast195 = bitcast i8* %gep194 to i64*
  %88 = load i64, i64* %irc-bit-cast195, align 8
  %89 = add i64 %88, -1309
  %90 = lshr i64 %89, 3
  %91 = shl i64 %89, 61
  %92 = or i64 %90, %91
  switch i64 %92, label %tag46 [
    i64 2, label %tag
    i64 4, label %tag
    i64 5, label %tag
    i64 0, label %tag
  ]

normal-dest218:                                   ; preds = %tag22
  %93 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %94 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 474), align 16
  %95 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 715), align 8
  %ptrtoint219 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint220 = add i64 %ptrtoint219, 7
  %entry-point-addr221 = inttoptr i64 %entry-point-addr-uint220 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point222 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr221, align 8
  %96 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point222({}* %23, i64 5, {}* %farg0, {}* %farg1, {}* %93, {}* %94, {}* %95)
          to label %normal-dest225 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest225:                                   ; preds = %normal-dest218
  %.elt365 = extractvalue { {}*, i64 } %96, 0
  %.elt367 = extractvalue { {}*, i64 } %96, 1
  br label %tag31

header-check-br237:                               ; preds = %tag54
  %97 = load i64, i64* %irc-bit-cast243, align 8
  %98 = add i64 %97, -1309
  %99 = lshr i64 %98, 3
  %100 = shl i64 %98, 61
  %101 = or i64 %99, %100
  switch i64 %101, label %tag46 [
    i64 2, label %tag35
    i64 4, label %tag35
    i64 5, label %tag35
    i64 0, label %tag35
  ]

normal-dest276:                                   ; preds = %tag48
  %102 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 731), align 8
  %103 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 732), align 16
  %ptrtoint277 = ptrtoint {}* %44 to i64
  %entry-point-addr-uint278 = add i64 %ptrtoint277, 7
  %entry-point-addr279 = inttoptr i64 %entry-point-addr-uint278 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point280 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr279, align 8
  %104 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point280({}* %44, i64 4, {}* %102, {}* %103, {}* %farg0, {}* %farg1)
          to label %normal-dest283 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest283:                                   ; preds = %normal-dest276
  %.elt394 = extractvalue { {}*, i64 } %104, 0
  %.elt396 = extractvalue { {}*, i64 } %104, 1
  br label %tag31

normal-dest304:                                   ; preds = %tag57
  %105 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %106 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %107 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %108 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 157), align 8
  %ptrtoint306 = ptrtoint {}* %47 to i64
  %entry-point-addr-uint307 = add i64 %ptrtoint306, 7
  %entry-point-addr308 = inttoptr i64 %entry-point-addr-uint307 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point309 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr308, align 8
  %109 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point309({}* %47, i64 5, {}* %105, {}* %106, {}* %"%SUBLIST152288.0418", {}* %107, {}* %108)
          to label %normal-dest312 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest312:                                   ; preds = %normal-dest304
  call void @unreachableError()
  unreachable

normal-dest316:                                   ; preds = %tag69
  %ptrtoint317 = ptrtoint {}* %54 to i64
  %entry-point-addr-uint318 = add i64 %ptrtoint317, 7
  %entry-point-addr319 = inttoptr i64 %entry-point-addr-uint318 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point320 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr319, align 8
  %110 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point320({}* %54, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest323 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest323:                                   ; preds = %normal-dest316
  %.elt339 = extractvalue { {}*, i64 } %110, 0
  %.elt341 = extractvalue { {}*, i64 } %110, 1
  %cond329 = icmp eq i64 %.elt341, 0
  %111 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %"%SUBLIST152288.2" = select i1 %cond329, {}* %111, {}* %.elt339
  %112 = icmp eq {}* %"%SUBLIST152288.2", %111
  %.val415 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %object.0416 = select i1 %112, {}* %.val415, {}* %111
  %113 = icmp eq {}* %object.0416, %111
  %G152376.0417 = select i1 %113, {}* %.val415, {}* %111
  %114 = icmp eq {}* %G152376.0417, %111
  br i1 %114, label %tag3, label %tag66.lr.ph

tag66.lr.ph:                                      ; preds = %normal-dest323
  %115 = ptrtoint {}* %farg2 to i64
  %single-float-tag-only300 = and i64 %115, 7
  %fixnum-tag-only257380 = and i64 %115, 3
  %fixnump-test258 = icmp eq i64 %fixnum-tag-only257380, 0
  %test240 = icmp ne i64 %single-float-tag-only300, 1
  %irc-bit-cast241 = bitcast {}* %farg2 to i8*
  %gep242 = getelementptr inbounds i8, i8* %irc-bit-cast241, i64 -9
  %irc-bit-cast243 = bitcast i8* %gep242 to i64*
  %brmerge = or i1 %test240, %fixnump-test258
  br label %tag66
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^609^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !108 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^609^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest10, %header-check-br34
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest21 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G152467.0 = phi {}* [ %18, %header-check-br ], [ %G152467.1, %normal-dest17 ], [ %G152467.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 744), align 16
  %ptrtoint43 = ptrtoint {}* %G152467.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G152467.0, i64 2, {}* %"closure->YAS=DEFINIERE_METHODE", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest21, %tag2, %normal-dest13, %maybe-more-tests42, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 744), align 16
  %"closure->YAS=DEFINIERE_METHODE" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=DEFINIERE_METHODE^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=DEFINIERE_METHODE^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 21732, i64 609, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br34

normal-dest13:                                    ; preds = %maybe-more-tests42
  %ptrtoint14 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %31, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152467.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag4

normal-dest21:                                    ; preds = %tag2
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 743), align 8
  %ptrtoint22 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %12, i64 5, {}* %23, {}* %24, {}* %18, {}* %25, {}* %26)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt = extractvalue { {}*, i64 } %27, 0
  %.elt84 = extractvalue { {}*, i64 } %27, 1
  %cond = icmp eq i64 %.elt84, 0
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152467.2 = select i1 %cond, {}* %28, {}* %.elt
  br label %tag4

header-check-br34:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %29 = icmp ult i64 %.off106, 5
  br i1 %29, label %maybe-more-tests42, label %tag2

maybe-more-tests42:                               ; preds = %header-check-br34
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 746), align 16
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->YAS=DEFINIERE_METHODE", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 751), align 8
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->YAS=DEFINIERE_METHODE", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 2436 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 744), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=DEFINIERE_METHODE^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !109 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 3
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 3, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=DEFINIERE_METHODE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 3
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 3, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=DEFINIERE_METHODE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc79 unwind label %cleanup-lpad

.noexc79:                                         ; preds = %13
  unreachable

tag:                                              ; preds = %normal-dest30, %normal-dest48, %normal-dest39
  %.sink78 = phi { {}*, i64 } [ %34, %normal-dest39 ], [ %37, %normal-dest48 ], [ %31, %normal-dest30 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %.sink78

tag1:                                             ; preds = %normal-dest12
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 619), align 8
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest16 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest23
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 486), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest30 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest23
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 468), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest39 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest12
  %20 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 468), align 16
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest48 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest48, %tag4, %normal-dest39, %tag3, %normal-dest30, %tag2, %normal-dest16, %tag1, %normal-dest9, %normal-dest
  %22 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %22

normal-dest:                                      ; preds = %11
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 464), align 16
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %24 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %24, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest9
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt58 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt58, 0
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152507.0 = select i1 %cond, {}* %26, {}* %.elt
  %27 = icmp eq {}* %G152507.0, %26
  br i1 %27, label %tag4, label %tag1

normal-dest16:                                    ; preds = %tag1
  %ptrtoint17 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint18 = add i64 %ptrtoint17, 7
  %entry-point-addr19 = inttoptr i64 %entry-point-addr-uint18 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point20 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr19, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point20({}* %15, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest23 unwind label %cleanup-lpad

normal-dest23:                                    ; preds = %normal-dest16
  %.elt60 = extractvalue { {}*, i64 } %28, 0
  %.elt62 = extractvalue { {}*, i64 } %28, 1
  %cond56 = icmp eq i64 %.elt62, 0
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152501.0 = select i1 %cond56, {}* %29, {}* %.elt60
  %30 = icmp eq {}* %G152501.0, %29
  br i1 %30, label %tag2, label %tag3

normal-dest30:                                    ; preds = %tag2
  %ptrtoint31 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %17, i64 3, {}* %farg0, {}* %farg1, {}* %farg2, {}* null)
          to label %tag unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %tag3
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 741), align 8
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 742), align 16
  %ptrtoint40 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint41 = add i64 %ptrtoint40, 7
  %entry-point-addr42 = inttoptr i64 %entry-point-addr-uint41 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point43 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr42, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point43({}* %19, i64 4, {}* %32, {}* %33, {}* %farg1, {}* %farg0)
          to label %tag unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %tag4
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 739), align 8
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 740), align 16
  %ptrtoint49 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint50 = add i64 %ptrtoint49, 7
  %entry-point-addr51 = inttoptr i64 %entry-point-addr-uint50 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point52 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr51, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point52({}* %21, i64 3, {}* %35, {}* %36, {}* %farg0, {}* null)
          to label %tag unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^617^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !110 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^617^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest54, %header-check-br
  %G152529.0 = phi {}* [ %18, %header-check-br ], [ %G152529.1, %normal-dest54 ], [ %G152529.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 758), align 16
  %ptrtoint13 = ptrtoint {}* %G152529.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G152529.0, i64 2, {}* %"closure->YAS=DEFINIERE_METHODE_NEU", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest10, %header-check-br59
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest47 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests67, %normal-dest47, %tag1, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 758), align 16
  %"closure->YAS=DEFINIERE_METHODE_NEU" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=DEFINIERE_METHODE_NEU^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=DEFINIERE_METHODE_NEU^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 22083, i64 617, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br59

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 760), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->YAS=DEFINIERE_METHODE_NEU", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 761), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->YAS=DEFINIERE_METHODE_NEU", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 2468 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 758), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %tag1
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 757), align 8
  %ptrtoint48 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %14, i64 5, {}* %33, {}* %34, {}* %18, {}* %35, {}* %36)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt = extractvalue { {}*, i64 } %37, 0
  %.elt84 = extractvalue { {}*, i64 } %37, 1
  %cond = icmp eq i64 %.elt84, 0
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152529.1 = select i1 %cond, {}* %38, {}* %.elt
  br label %tag

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %39 = icmp ult i64 %.off106, 5
  br i1 %39, label %maybe-more-tests67, label %tag1

maybe-more-tests67:                               ; preds = %header-check-br59
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %maybe-more-tests67
  %ptrtoint70 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %41, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152529.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=DEFINIERE_METHODE_NEU^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !111 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 3
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 3, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=DEFINIERE_METHODE_NEU^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 3
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 3, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=DEFINIERE_METHODE_NEU^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc79 unwind label %cleanup-lpad

.noexc79:                                         ; preds = %13
  unreachable

tag:                                              ; preds = %normal-dest50
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 468), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest16 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest50
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 622), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest25 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest12
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 468), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest34 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest12
  %20 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 619), align 8
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest43 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest16, %normal-dest34, %normal-dest25
  %.sink78 = phi { {}*, i64 } [ %31, %normal-dest25 ], [ %34, %normal-dest34 ], [ %30, %normal-dest16 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %.sink78

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest43, %tag3, %normal-dest34, %tag2, %normal-dest25, %tag1, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %22 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %22

normal-dest:                                      ; preds = %11
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 464), align 16
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %24 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %24, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest9
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt58 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt58, 0
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152569.0 = select i1 %cond, {}* %26, {}* %.elt
  %27 = icmp eq {}* %G152569.0, %26
  br i1 %27, label %tag2, label %tag3

normal-dest16:                                    ; preds = %tag
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 755), align 8
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 756), align 16
  %ptrtoint17 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint18 = add i64 %ptrtoint17, 7
  %entry-point-addr19 = inttoptr i64 %entry-point-addr-uint18 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point20 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr19, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point20({}* %15, i64 4, {}* %28, {}* %29, {}* %farg0, {}* %farg1)
          to label %tag4 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %tag1
  %ptrtoint26 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint27 = add i64 %ptrtoint26, 7
  %entry-point-addr28 = inttoptr i64 %entry-point-addr-uint27 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point29 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr28, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point29({}* %17, i64 3, {}* %farg0, {}* %farg1, {}* %farg2, {}* null)
          to label %tag4 unwind label %cleanup-lpad

normal-dest34:                                    ; preds = %tag2
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 753), align 8
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 754), align 16
  %ptrtoint35 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint36 = add i64 %ptrtoint35, 7
  %entry-point-addr37 = inttoptr i64 %entry-point-addr-uint36 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point38 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr37, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point38({}* %19, i64 3, {}* %32, {}* %33, {}* %farg0, {}* null)
          to label %tag4 unwind label %cleanup-lpad

normal-dest43:                                    ; preds = %tag3
  %ptrtoint44 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint45 = add i64 %ptrtoint44, 7
  %entry-point-addr46 = inttoptr i64 %entry-point-addr-uint45 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point47 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr46, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point47({}* %21, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest50 unwind label %cleanup-lpad

normal-dest50:                                    ; preds = %normal-dest43
  %.elt60 = extractvalue { {}*, i64 } %35, 0
  %.elt62 = extractvalue { {}*, i64 } %35, 1
  %cond56 = icmp eq i64 %.elt62, 0
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152563.0 = select i1 %cond56, {}* %36, {}* %.elt60
  %37 = icmp eq {}* %G152563.0, %36
  br i1 %37, label %tag, label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^626^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !112 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^626^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br73
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest67, %normal-dest17, %header-check-br
  %G152591.0 = phi {}* [ %18, %header-check-br ], [ %G152591.1, %normal-dest17 ], [ %G152591.2, %normal-dest67 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 766), align 16
  %ptrtoint20 = ptrtoint {}* %G152591.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G152591.0, i64 2, {}* %"closure->YAS=TUE_METHODE", {}* %13, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %maybe-more-tests81, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag2, %normal-dest13, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 766), align 16
  %"closure->YAS=TUE_METHODE" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=TUE_METHODE^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=TUE_METHODE^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 22448, i64 626, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br73

normal-dest13:                                    ; preds = %tag1
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 765), align 8
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152591.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag2

normal-dest26:                                    ; preds = %tag2
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 768), align 16
  %ptrtoint33 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %28, i64 2, {}* %"closure->YAS=TUE_METHODE", {}* %29, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 773), align 8
  %ptrtoint46 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %32, i64 2, {}* %"closure->YAS=TUE_METHODE", {}* %33, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %35, {}* inttoptr (i64 2552 to {}*))
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 766), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %37 = insertvalue { {}*, i64 } undef, {}* %36, 0
  %38 = insertvalue { {}*, i64 } %37, i64 1, 1
  ret { {}*, i64 } %38

normal-dest60:                                    ; preds = %maybe-more-tests81
  %ptrtoint61 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt101 = extractvalue { {}*, i64 } %39, 0
  %.elt103 = extractvalue { {}*, i64 } %39, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152591.2 = select i1 %cond82, {}* %40, {}* %.elt101
  br label %tag2

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag1

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest60 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=TUE_METHODE^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !113 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 2
  br i1 %enough-args, label %error, label %continue

cleanup-lpad:                                     ; preds = %normal-dest14, %normal-dest11, %normal-dest9, %continue, %error
  %9 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %9

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @":::global-str-YAS=TUE_METHODE^COMMON-LISP-USER^FN^^", i64 0, i64 0), i64 %nargs, i64 2)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs5 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-16 = add i64 %rem-nargs5, -1
  store i64 %rem-nargs-16, i64* %"remaining-nargs*", align 8
  %vaarg7 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %10 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* %"remaining-nargs*")
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 763), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

normal-dest9:                                     ; preds = %continue
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest11 unwind label %cleanup-lpad

normal-dest11:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %14 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %15 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %14, i64 2, {}* %vaarg, {}* %vaarg7, {}* null, {}* null)
          to label %normal-dest14 unwind label %cleanup-lpad

normal-dest14:                                    ; preds = %normal-dest11
  %.elt = extractvalue { {}*, i64 } %15, 0
  %.elt25 = extractvalue { {}*, i64 } %15, 1
  %cond = icmp eq i64 %.elt25, 0
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152610.0 = select i1 %cond, {}* %16, {}* %.elt
  %ptrtoint17 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint18 = add i64 %ptrtoint17, 7
  %entry-point-addr19 = inttoptr i64 %entry-point-addr-uint18 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point20 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr19, align 8
  %17 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point20({}* %12, i64 2, {}* %G152610.0, {}* %10, {}* null, {}* null)
          to label %normal-dest23 unwind label %cleanup-lpad

normal-dest23:                                    ; preds = %normal-dest14
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %17
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^643^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !114 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^643^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag3:                                             ; preds = %normal-dest10, %header-check-br20
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest30 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest37, %normal-dest17, %header-check-br
  %G152634.0 = phi {}* [ %18, %header-check-br ], [ %G152634.1, %normal-dest17 ], [ %G152634.2, %normal-dest37 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 717), align 8
  %ptrtoint43 = ptrtoint {}* %G152634.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G152634.0, i64 2, {}* %"closure->YAS=ALTER_WERT", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest30, %tag3, %normal-dest13, %maybe-more-tests28, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 717), align 8
  %"closure->YAS=ALTER_WERT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=ALTER_WERT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=ALTER_WERT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 23023, i64 643, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br20

normal-dest13:                                    ; preds = %maybe-more-tests28
  %ptrtoint14 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152634.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag4

header-check-br20:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %23 = icmp ult i64 %.off106, 5
  br i1 %23, label %maybe-more-tests28, label %tag3

maybe-more-tests28:                               ; preds = %header-check-br20
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest30:                                    ; preds = %tag3
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 775), align 8
  %ptrtoint31 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %12, i64 5, {}* %26, {}* %27, {}* %18, {}* %28, {}* %29)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt = extractvalue { {}*, i64 } %30, 0
  %.elt84 = extractvalue { {}*, i64 } %30, 1
  %cond = icmp eq i64 %.elt84, 0
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152634.2 = select i1 %cond, {}* %31, {}* %.elt
  br label %tag4

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 776), align 16
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->YAS=ALTER_WERT", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 777), align 8
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->YAS=ALTER_WERT", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 2604 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 717), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=ALTER_WERT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !115 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=ALTER_WERT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=ALTER_WERT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc116 unwind label %cleanup-lpad

.noexc116:                                        ; preds = %13
  unreachable

tag:                                              ; preds = %tag12
  %14 = add i64 %23, -3
  %15 = inttoptr i64 %14 to i64*
  %16 = load i64, i64* %15, align 8
  br label %tag4

tag4:                                             ; preds = %tag20, %normal-dest88, %tag
  %return-value.sroa.10.0 = phi i64 [ %.elt111, %normal-dest88 ], [ 1, %tag ], [ 1, %tag20 ]
  %return-value.sroa.0.0 = phi i64 [ %59, %normal-dest88 ], [ %16, %tag ], [ %22, %tag20 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %17 = inttoptr i64 %return-value.sroa.0.0 to {}*
  %18 = insertvalue { {}*, i64 } undef, {}* %17, 0
  %19 = insertvalue { {}*, i64 } %18, i64 %return-value.sroa.10.0, 1
  ret { {}*, i64 } %19

tag9:                                             ; preds = %tag15
  %20 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest56 unwind label %cleanup-lpad

tag12:                                            ; preds = %tag15, %normal-dest63, %tag16
  %22 = phi i64 [ %46, %tag16 ], [ %53, %normal-dest63 ], [ %46, %tag15 ]
  %.val123 = phi {}* [ %43, %tag16 ], [ %52, %normal-dest63 ], [ %43, %tag15 ]
  %.val122 = phi {}* [ %.val, %tag16 ], [ %.val120.pre, %normal-dest63 ], [ %.val, %tag15 ]
  %x64.0 = phi {}* [ %29, %tag16 ], [ %x64.1, %normal-dest63 ], [ %43, %tag15 ]
  %23 = ptrtoint {}* %x64.0 to i64
  %tag-only74104 = and i64 %23, 7
  %consp-test75 = icmp eq i64 %tag-only74104, 3
  %G152670.0 = select i1 %consp-test75, {}* %.val122, {}* %.val123
  %24 = icmp eq {}* %G152670.0, %.val123
  br i1 %24, label %tag20, label %tag

tag15:                                            ; preds = %normal-dest40
  %25 = icmp eq {}* %x.0, %43
  %G152683.0 = select i1 %25, {}* %.val, {}* %43
  %26 = icmp eq {}* %G152683.0, %43
  br i1 %26, label %tag9, label %tag12

tag16:                                            ; preds = %normal-dest40
  %27 = add i64 %44, -3
  %28 = inttoptr i64 %27 to {}**
  %29 = load {}*, {}** %28, align 8
  br label %tag12

tag18:                                            ; preds = %tag20
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest81 unwind label %cleanup-lpad

tag20:                                            ; preds = %tag12
  %32 = icmp eq {}* %x64.0, %.val123
  %G152662.0 = select i1 %32, {}* %.val122, {}* %.val123
  %33 = icmp eq {}* %G152662.0, %.val123
  br i1 %33, label %tag18, label %tag4

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest81, %tag18, %normal-dest56, %tag9, %normal-dest31, %normal-dest28, %normal-dest26, %normal-dest
  %34 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %34

normal-dest:                                      ; preds = %11
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 613), align 8
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest
  %37 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %38 = invoke {}* @cc_safe_fdefinition({}* %37)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest26
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 33), align 8
  %ptrtoint = ptrtoint {}* %38 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %38, i64 2, {}* %farg0, {}* %39, {}* null, {}* null)
          to label %normal-dest31 unwind label %cleanup-lpad

normal-dest31:                                    ; preds = %normal-dest28
  %.elt = extractvalue { {}*, i64 } %40, 0
  %.elt98 = extractvalue { {}*, i64 } %40, 1
  %cond = icmp eq i64 %.elt98, 0
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152695.0 = select i1 %cond, {}* %41, {}* %.elt
  %ptrtoint34 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint35 = add i64 %ptrtoint34, 7
  %entry-point-addr36 = inttoptr i64 %entry-point-addr-uint35 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point37 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr36, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point37({}* %36, i64 2, {}* %G152695.0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest40 unwind label %cleanup-lpad

normal-dest40:                                    ; preds = %normal-dest31
  %.elt100 = extractvalue { {}*, i64 } %42, 0
  %.elt102 = extractvalue { {}*, i64 } %42, 1
  %cond95 = icmp eq i64 %.elt102, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x.0 = select i1 %cond95, {}* %43, {}* %.elt100
  %44 = ptrtoint {}* %x.0 to i64
  %tag-only103 = and i64 %44, 7
  %consp-test = icmp eq i64 %tag-only103, 3
  %.val = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G152690.0 = select i1 %consp-test, {}* %.val, {}* %43
  %45 = icmp eq {}* %G152690.0, %43
  %46 = ptrtoint {}* %43 to i64
  br i1 %45, label %tag15, label %tag16

normal-dest56:                                    ; preds = %tag9
  %47 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %48 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %49 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %50 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint57 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %51 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %21, i64 5, {}* %47, {}* %48, {}* %x.0, {}* %49, {}* %50)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt113 = extractvalue { {}*, i64 } %51, 0
  %.elt115 = extractvalue { {}*, i64 } %51, 1
  %cond96 = icmp eq i64 %.elt115, 0
  %52 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x64.1 = select i1 %cond96, {}* %52, {}* %.elt113
  %.val120.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %53 = ptrtoint {}* %52 to i64
  br label %tag12

normal-dest81:                                    ; preds = %tag18
  %54 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %55 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %56 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %57 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint82 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint83 = add i64 %ptrtoint82, 7
  %entry-point-addr84 = inttoptr i64 %entry-point-addr-uint83 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point85 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr84, align 8
  %58 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point85({}* %31, i64 5, {}* %54, {}* %55, {}* %x64.0, {}* %56, {}* %57)
          to label %normal-dest88 unwind label %cleanup-lpad

normal-dest88:                                    ; preds = %normal-dest81
  %.elt109 = extractvalue { {}*, i64 } %58, 0
  %59 = ptrtoint {}* %.elt109 to i64
  %.elt111 = extractvalue { {}*, i64 } %58, 1
  br label %tag4
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^655^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !116 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^655^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G152719.0 = phi {}* [ %18, %header-check-br ], [ %G152719.1, %normal-dest63 ], [ %G152719.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 719), align 8
  %ptrtoint13 = ptrtoint {}* %G152719.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G152719.0, i64 2, {}* %"closure->YAS-ALTER_INFORMANT", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br46
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest56, %maybe-more-tests54, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 719), align 8
  %"closure->YAS-ALTER_INFORMANT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS-ALTER_INFORMANT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-ALTER_INFORMANT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 23385, i64 655, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br46

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 780), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->YAS-ALTER_INFORMANT", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 781), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->YAS-ALTER_INFORMANT", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 2652 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 719), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

header-check-br46:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %33 = icmp ult i64 %.off106, 5
  br i1 %33, label %maybe-more-tests54, label %tag4

maybe-more-tests54:                               ; preds = %header-check-br46
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest56 unwind label %cleanup-lpad

normal-dest56:                                    ; preds = %maybe-more-tests54
  %ptrtoint57 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %35, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt101 = extractvalue { {}*, i64 } %36, 0
  %.elt103 = extractvalue { {}*, i64 } %36, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %37 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152719.1 = select i1 %cond82, {}* %37, {}* %.elt101
  br label %tag

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 779), align 8
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152719.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS-ALTER_INFORMANT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !117 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-ALTER_INFORMANT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-ALTER_INFORMANT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc155 unwind label %cleanup-lpad

.noexc155:                                        ; preds = %13
  unreachable

tag3:                                             ; preds = %normal-dest48
  %14 = add i64 %54, -3
  %15 = inttoptr i64 %14 to {}**
  %16 = load {}*, {}** %15, align 8
  br label %tag18

tag4:                                             ; preds = %tag12
  %17 = add i64 %26, -3
  %18 = inttoptr i64 %17 to i64*
  %19 = load i64, i64* %18, align 8
  br label %tag19

tag9:                                             ; preds = %tag18
  %20 = add i64 %30, 5
  %21 = inttoptr i64 %20 to {}**
  %22 = load {}*, {}** %21, align 8
  br label %tag12

tag11:                                            ; preds = %tag22
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest67 unwind label %cleanup-lpad

tag12:                                            ; preds = %tag21, %normal-dest121, %tag9
  %25 = phi i64 [ %28, %tag9 ], [ %76, %normal-dest121 ], [ %28, %tag21 ]
  %.val165 = phi {}* [ %29, %tag9 ], [ %75, %normal-dest121 ], [ %29, %tag21 ]
  %x58.0 = phi {}* [ %22, %tag9 ], [ %x58.1, %normal-dest121 ], [ %29, %tag21 ]
  %26 = ptrtoint {}* %x58.0 to i64
  %tag-only77138 = and i64 %26, 7
  %consp-test78 = icmp eq i64 %tag-only77138, 3
  %.val162 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G152755.0 = select i1 %consp-test78, {}* %.val162, {}* %.val165
  %27 = icmp eq {}* %G152755.0, %.val165
  br i1 %27, label %tag22, label %tag4

tag18:                                            ; preds = %tag24, %normal-dest101, %tag3
  %28 = phi i64 [ %56, %tag3 ], [ %69, %normal-dest101 ], [ %56, %tag24 ]
  %29 = phi {}* [ %53, %tag3 ], [ %68, %normal-dest101 ], [ %53, %tag24 ]
  %x59.0 = phi {}* [ %16, %tag3 ], [ %x59.1, %normal-dest101 ], [ %53, %tag24 ]
  %30 = ptrtoint {}* %x59.0 to i64
  %tag-only81137 = and i64 %30, 7
  %consp-test82 = icmp eq i64 %tag-only81137, 3
  br i1 %consp-test82, label %tag9, label %tag21

tag19:                                            ; preds = %tag22, %normal-dest74, %tag4
  %return-value.sroa.12.0 = phi i64 [ %.elt145, %normal-dest74 ], [ 1, %tag4 ], [ 1, %tag22 ]
  %return-value.sroa.0.0 = phi i64 [ %62, %normal-dest74 ], [ %19, %tag4 ], [ %25, %tag22 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = inttoptr i64 %return-value.sroa.0.0 to {}*
  %32 = insertvalue { {}*, i64 } undef, {}* %31, 0
  %33 = insertvalue { {}*, i64 } %32, i64 %return-value.sroa.12.0, 1
  ret { {}*, i64 } %33

tag21:                                            ; preds = %tag18
  %34 = icmp eq {}* %x59.0, %29
  %.val160 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G152768.0 = select i1 %34, {}* %.val160, {}* %29
  %35 = icmp eq {}* %G152768.0, %29
  br i1 %35, label %tag26, label %tag12

tag22:                                            ; preds = %tag12
  %36 = icmp eq {}* %x58.0, %.val165
  %G152747.0 = select i1 %36, {}* %.val162, {}* %.val165
  %37 = icmp eq {}* %G152747.0, %.val165
  br i1 %37, label %tag11, label %tag19

tag23:                                            ; preds = %tag24
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %39 = invoke {}* @cc_safe_fdefinition({}* %38)
          to label %normal-dest94 unwind label %cleanup-lpad

tag24:                                            ; preds = %normal-dest48
  %40 = icmp eq {}* %x.0, %53
  %G152784.0 = select i1 %40, {}* %.val, {}* %53
  %41 = icmp eq {}* %G152784.0, %53
  br i1 %41, label %tag23, label %tag18

tag26:                                            ; preds = %tag21
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest114 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest114, %tag26, %normal-dest94, %tag23, %normal-dest67, %tag11, %normal-dest39, %normal-dest36, %normal-dest34, %normal-dest
  %44 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %44

normal-dest:                                      ; preds = %11
  %45 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 613), align 8
  %46 = invoke {}* @cc_safe_fdefinition({}* %45)
          to label %normal-dest34 unwind label %cleanup-lpad

normal-dest34:                                    ; preds = %normal-dest
  %47 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %48 = invoke {}* @cc_safe_fdefinition({}* %47)
          to label %normal-dest36 unwind label %cleanup-lpad

normal-dest36:                                    ; preds = %normal-dest34
  %49 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 33), align 8
  %ptrtoint = ptrtoint {}* %48 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %50 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %48, i64 2, {}* %farg0, {}* %49, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest36
  %.elt = extractvalue { {}*, i64 } %50, 0
  %.elt131 = extractvalue { {}*, i64 } %50, 1
  %cond = icmp eq i64 %.elt131, 0
  %51 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152796.0 = select i1 %cond, {}* %51, {}* %.elt
  %ptrtoint42 = ptrtoint {}* %46 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %52 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %46, i64 2, {}* %G152796.0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest39
  %.elt133 = extractvalue { {}*, i64 } %52, 0
  %.elt135 = extractvalue { {}*, i64 } %52, 1
  %cond127 = icmp eq i64 %.elt135, 0
  %53 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x.0 = select i1 %cond127, {}* %53, {}* %.elt133
  %54 = ptrtoint {}* %x.0 to i64
  %tag-only136 = and i64 %54, 7
  %consp-test = icmp eq i64 %tag-only136, 3
  %.val = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G152791.0 = select i1 %consp-test, {}* %.val, {}* %53
  %55 = icmp eq {}* %G152791.0, %53
  %56 = ptrtoint {}* %53 to i64
  br i1 %55, label %tag24, label %tag3

normal-dest67:                                    ; preds = %tag11
  %57 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %58 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %59 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %60 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint68 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint69 = add i64 %ptrtoint68, 7
  %entry-point-addr70 = inttoptr i64 %entry-point-addr-uint69 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point71 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr70, align 8
  %61 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point71({}* %24, i64 5, {}* %57, {}* %58, {}* %x58.0, {}* %59, {}* %60)
          to label %normal-dest74 unwind label %cleanup-lpad

normal-dest74:                                    ; preds = %normal-dest67
  %.elt143 = extractvalue { {}*, i64 } %61, 0
  %62 = ptrtoint {}* %.elt143 to i64
  %.elt145 = extractvalue { {}*, i64 } %61, 1
  br label %tag19

normal-dest94:                                    ; preds = %tag23
  %63 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %64 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %65 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %66 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint95 = ptrtoint {}* %39 to i64
  %entry-point-addr-uint96 = add i64 %ptrtoint95, 7
  %entry-point-addr97 = inttoptr i64 %entry-point-addr-uint96 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point98 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr97, align 8
  %67 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point98({}* %39, i64 5, {}* %63, {}* %64, {}* %x.0, {}* %65, {}* %66)
          to label %normal-dest101 unwind label %cleanup-lpad

normal-dest101:                                   ; preds = %normal-dest94
  %.elt151 = extractvalue { {}*, i64 } %67, 0
  %.elt153 = extractvalue { {}*, i64 } %67, 1
  %cond129 = icmp eq i64 %.elt153, 0
  %68 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x59.1 = select i1 %cond129, {}* %68, {}* %.elt151
  %69 = ptrtoint {}* %68 to i64
  br label %tag18

normal-dest114:                                   ; preds = %tag26
  %70 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %71 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %72 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %73 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint115 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint116 = add i64 %ptrtoint115, 7
  %entry-point-addr117 = inttoptr i64 %entry-point-addr-uint116 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point118 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr117, align 8
  %74 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point118({}* %43, i64 5, {}* %70, {}* %71, {}* %x59.0, {}* %72, {}* %73)
          to label %normal-dest121 unwind label %cleanup-lpad

normal-dest121:                                   ; preds = %normal-dest114
  %.elt147 = extractvalue { {}*, i64 } %74, 0
  %.elt149 = extractvalue { {}*, i64 } %74, 1
  %cond128 = icmp eq i64 %.elt149, 0
  %75 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x58.1 = select i1 %cond128, {}* %75, {}* %.elt147
  %76 = ptrtoint {}* %75 to i64
  br label %tag12
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^667^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !118 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^667^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest54, %header-check-br
  %G152820.0 = phi {}* [ %18, %header-check-br ], [ %G152820.1, %normal-dest54 ], [ %G152820.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 784), align 16
  %ptrtoint13 = ptrtoint {}* %G152820.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G152820.0, i64 2, {}* %"closure->YAS=ALLE", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest10, %header-check-br59
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest47 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests67, %normal-dest47, %tag1, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 784), align 16
  %"closure->YAS=ALLE" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS=ALLE^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=ALLE^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 23756, i64 667, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br59

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 786), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->YAS=ALLE", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 787), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->YAS=ALLE", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 2668 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 784), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %tag1
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 783), align 8
  %ptrtoint48 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %14, i64 5, {}* %33, {}* %34, {}* %18, {}* %35, {}* %36)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt = extractvalue { {}*, i64 } %37, 0
  %.elt84 = extractvalue { {}*, i64 } %37, 1
  %cond = icmp eq i64 %.elt84, 0
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152820.1 = select i1 %cond, {}* %38, {}* %.elt
  br label %tag

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %39 = icmp ult i64 %.off106, 5
  br i1 %39, label %maybe-more-tests67, label %tag1

maybe-more-tests67:                               ; preds = %header-check-br59
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %maybe-more-tests67
  %ptrtoint70 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %41, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152820.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS=ALLE^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !119 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=ALLE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS=ALLE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc14 unwind label %cleanup-lpad

.noexc14:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 39), align 8
  %ptrtoint = ptrtoint {}* %13 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %15 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %13, i64 2, {}* %farg0, {}* %14, {}* null, {}* null)
          to label %normal-dest8 unwind label %cleanup-lpad

normal-dest8:                                     ; preds = %normal-dest5
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %15
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^671^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !120 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^671^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br73
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G152862.0 = phi {}* [ %18, %header-check-br ], [ %G152862.1, %normal-dest17 ], [ %G152862.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 789), align 8
  %ptrtoint34 = ptrtoint {}* %G152862.0 to i64
  %entry-point-addr-uint35 = add i64 %ptrtoint34, 7
  %entry-point-addr36 = inttoptr i64 %entry-point-addr-uint35 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point37 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr36, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point37({}* %G152862.0, i64 2, {}* %"closure->YAS-LOESCHE_NACH_UNTEN", {}* %13, {}* null, {}* null)
          to label %normal-dest40 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest59, %normal-dest53, %normal-dest46, %normal-dest40, %tag3, %normal-dest21, %maybe-more-tests81, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 789), align 8
  %"closure->YAS-LOESCHE_NACH_UNTEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS-LOESCHE_NACH_UNTEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-LOESCHE_NACH_UNTEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 23821, i64 671, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag3, label %header-check-br73

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 791), align 8
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152862.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag3

normal-dest21:                                    ; preds = %maybe-more-tests81
  %ptrtoint22 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt101 = extractvalue { {}*, i64 } %27, 0
  %.elt103 = extractvalue { {}*, i64 } %27, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152862.2 = select i1 %cond82, {}* %28, {}* %.elt101
  br label %tag3

normal-dest40:                                    ; preds = %tag3
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest46 unwind label %cleanup-lpad

normal-dest46:                                    ; preds = %normal-dest40
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 792), align 16
  %ptrtoint47 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint48 = add i64 %ptrtoint47, 7
  %entry-point-addr49 = inttoptr i64 %entry-point-addr-uint48 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point50 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr49, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point50({}* %30, i64 2, {}* %"closure->YAS-LOESCHE_NACH_UNTEN", {}* %31, {}* null, {}* null)
          to label %normal-dest53 unwind label %cleanup-lpad

normal-dest53:                                    ; preds = %normal-dest46
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest59 unwind label %cleanup-lpad

normal-dest59:                                    ; preds = %normal-dest53
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 793), align 8
  %ptrtoint60 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint61 = add i64 %ptrtoint60, 7
  %entry-point-addr62 = inttoptr i64 %entry-point-addr-uint61 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point63 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr62, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point63({}* %34, i64 2, {}* %"closure->YAS-LOESCHE_NACH_UNTEN", {}* %35, {}* null, {}* null)
          to label %normal-dest66 unwind label %cleanup-lpad

normal-dest66:                                    ; preds = %normal-dest59
  %37 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %37, {}* inttoptr (i64 2692 to {}*))
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 789), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %39 = insertvalue { {}*, i64 } undef, {}* %38, 0
  %40 = insertvalue { {}*, i64 } %39, i64 1, 1
  ret { {}*, i64 } %40

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest21 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS-LOESCHE_NACH_UNTEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !121 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-LOESCHE_NACH_UNTEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-LOESCHE_NACH_UNTEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc177 unwind label %cleanup-lpad.loopexit.split-lp

.noexc177:                                        ; preds = %10
  unreachable

tag:                                              ; preds = %tag10
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest43 unwind label %cleanup-lpad.loopexit

tag1:                                             ; preds = %normal-dest37
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 696), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest58 unwind label %cleanup-lpad.loopexit.split-lp

tag4:                                             ; preds = %tag26
  %15 = add i64 %31, -3
  %16 = inttoptr i64 %15 to {}**
  %17 = load {}*, {}** %16, align 8
  br label %tag5

tag5:                                             ; preds = %normal-dest115, %tag4
  %K.0 = phi {}* [ %17, %tag4 ], [ %K.1, %normal-dest115 ]
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 789), align 8
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest79 unwind label %cleanup-lpad.loopexit

tag10:                                            ; preds = %normal-dest86
  %20 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %21 = icmp eq {}* %"%DOLIST-VAR.0188", %20
  %.val186 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G152895.0 = select i1 %21, {}* %.val186, {}* %20
  %22 = icmp eq {}* %G152895.0, %20
  br i1 %22, label %tag, label %tag14

tag14:                                            ; preds = %tag10, %tag21.backedge, %tag22, %normal-dest129, %normal-dest37
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 549), align 8
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest99 unwind label %cleanup-lpad.loopexit.split-lp

tag17:                                            ; preds = %tag26
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest108 unwind label %cleanup-lpad.loopexit

tag22:                                            ; preds = %normal-dest65
  %27 = icmp eq {}* %G152844.0, %52
  br i1 %27, label %tag14, label %tag26.preheader

tag26.preheader:                                  ; preds = %tag22
  br label %tag26

tag24:                                            ; preds = %normal-dest86
  %28 = add i64 %31, 5
  %29 = inttoptr i64 %28 to {}**
  %30 = load {}*, {}** %29, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  br label %tag21.backedge

tag26:                                            ; preds = %tag26.preheader, %tag21.backedge
  %.val185 = phi {}* [ %49, %tag21.backedge ], [ %52, %tag26.preheader ]
  %"%DOLIST-VAR.0188" = phi {}* [ %"%DOLIST-VAR.0.be", %tag21.backedge ], [ %G152844.0, %tag26.preheader ]
  %31 = ptrtoint {}* %"%DOLIST-VAR.0188" to i64
  %tag-only126161 = and i64 %31, 7
  %consp-test127 = icmp eq i64 %tag-only126161, 3
  %.val184 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G152921.0 = select i1 %consp-test127, {}* %.val184, {}* %.val185
  %32 = icmp eq {}* %G152921.0, %.val185
  br i1 %32, label %tag17, label %tag4

tag27:                                            ; preds = %normal-dest65
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 789), align 8
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest129 unwind label %cleanup-lpad.loopexit.split-lp

cleanup-lpad.loopexit:                            ; preds = %tag, %normal-dest43, %tag5, %normal-dest79, %tag17, %normal-dest108
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %normal-dest, %normal-dest34, %tag1, %normal-dest58, %tag14, %normal-dest99, %tag27, %normal-dest129, %9, %10
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest34 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest34:                                    ; preds = %normal-dest
  %37 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 39), align 8
  %ptrtoint = ptrtoint {}* %36 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %38 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %36, i64 2, {}* %farg0, {}* %37, {}* null, {}* null)
          to label %normal-dest37 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest37:                                    ; preds = %normal-dest34
  %.elt = extractvalue { {}*, i64 } %38, 0
  %.elt145 = extractvalue { {}*, i64 } %38, 1
  %cond = icmp eq i64 %.elt145, 0
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152844.0 = select i1 %cond, {}* %39, {}* %.elt
  %40 = icmp eq {}* %G152844.0, %39
  %.val = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %object.0 = select i1 %40, {}* %.val, {}* %39
  %41 = icmp eq {}* %object.0, %39
  %G152933.0 = select i1 %41, {}* %.val, {}* %39
  %42 = icmp eq {}* %G152933.0, %39
  br i1 %42, label %tag14, label %tag1

normal-dest43:                                    ; preds = %tag
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %44 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %45 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %46 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint45 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint46 = add i64 %ptrtoint45, 7
  %entry-point-addr47 = inttoptr i64 %entry-point-addr-uint46 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point48 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr47, align 8
  %47 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point48({}* %12, i64 5, {}* %43, {}* %44, {}* %"%DOLIST-VAR.0188", {}* %45, {}* %46)
          to label %normal-dest51 unwind label %cleanup-lpad.loopexit

normal-dest51:                                    ; preds = %normal-dest43
  %.elt168 = extractvalue { {}*, i64 } %47, 0
  %.elt170 = extractvalue { {}*, i64 } %47, 1
  %cond142 = icmp eq i64 %.elt170, 0
  %48 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %"%DOLIST-VAR.1" = select i1 %cond142, {}* %48, {}* %.elt168
  br label %tag21.backedge

tag21.backedge:                                   ; preds = %normal-dest51, %tag24
  %49 = phi {}* [ %.pre, %tag24 ], [ %48, %normal-dest51 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %30, %tag24 ], [ %"%DOLIST-VAR.1", %normal-dest51 ]
  %50 = icmp eq {}* %"%DOLIST-VAR.0.be", %49
  br i1 %50, label %tag14, label %tag26

normal-dest58:                                    ; preds = %tag1
  %ptrtoint59 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint60 = add i64 %ptrtoint59, 7
  %entry-point-addr61 = inttoptr i64 %entry-point-addr-uint60 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point62 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr61, align 8
  %51 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point62({}* %14, i64 1, {}* %G152844.0, {}* null, {}* null, {}* null)
          to label %normal-dest65 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest65:                                    ; preds = %normal-dest58
  %.elt147 = extractvalue { {}*, i64 } %51, 0
  %.elt149 = extractvalue { {}*, i64 } %51, 1
  %cond141 = icmp eq i64 %.elt149, 0
  %52 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152928.0 = select i1 %cond141, {}* %52, {}* %.elt147
  %53 = icmp eq {}* %G152928.0, %52
  br i1 %53, label %tag22, label %tag27

normal-dest79:                                    ; preds = %tag5
  %ptrtoint80 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint81 = add i64 %ptrtoint80, 7
  %entry-point-addr82 = inttoptr i64 %entry-point-addr-uint81 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point83 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr82, align 8
  %54 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point83({}* %19, i64 1, {}* %K.0, {}* null, {}* null, {}* null)
          to label %normal-dest86 unwind label %cleanup-lpad.loopexit

normal-dest86:                                    ; preds = %normal-dest79
  br i1 %consp-test127, label %tag24, label %tag10

normal-dest99:                                    ; preds = %tag14
  %ptrtoint100 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint101 = add i64 %ptrtoint100, 7
  %entry-point-addr102 = inttoptr i64 %entry-point-addr-uint101 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point103 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr102, align 8
  %55 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point103({}* %24, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest106 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest106:                                   ; preds = %normal-dest99
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %55

normal-dest108:                                   ; preds = %tag17
  %56 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %57 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %58 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %59 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint109 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint110 = add i64 %ptrtoint109, 7
  %entry-point-addr111 = inttoptr i64 %entry-point-addr-uint110 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point112 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr111, align 8
  %60 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point112({}* %26, i64 5, {}* %56, {}* %57, {}* %"%DOLIST-VAR.0188", {}* %58, {}* %59)
          to label %normal-dest115 unwind label %cleanup-lpad.loopexit

normal-dest115:                                   ; preds = %normal-dest108
  %.elt172 = extractvalue { {}*, i64 } %60, 0
  %.elt174 = extractvalue { {}*, i64 } %60, 1
  %cond143 = icmp eq i64 %.elt174, 0
  %61 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %K.1 = select i1 %cond143, {}* %61, {}* %.elt172
  br label %tag5

normal-dest129:                                   ; preds = %tag27
  %ptrtoint130 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint131 = add i64 %ptrtoint130, 7
  %entry-point-addr132 = inttoptr i64 %entry-point-addr-uint131 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point133 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr132, align 8
  %62 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point133({}* %34, i64 1, {}* %G152844.0, {}* null, {}* null, {}* null)
          to label %tag14 unwind label %cleanup-lpad.loopexit.split-lp
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^683^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !122 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^683^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br13
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest22 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest76, %normal-dest26, %header-check-br
  %G152964.0 = phi {}* [ %18, %header-check-br ], [ %G152964.1, %normal-dest26 ], [ %G152964.2, %normal-dest76 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 466), align 16
  %ptrtoint29 = ptrtoint {}* %G152964.0 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %G152964.0, i64 2, {}* %"closure->YAS-MERKE_OBJEKT", {}* %13, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests21, %normal-dest54, %normal-dest48, %normal-dest41, %normal-dest35, %tag2, %normal-dest22, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 466), align 16
  %"closure->YAS-MERKE_OBJEKT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS-MERKE_OBJEKT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-MERKE_OBJEKT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 24115, i64 683, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag1

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %tag1
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 795), align 8
  %ptrtoint23 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint23, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %24, {}* %25, {}* %18, {}* %26, {}* %27)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest22
  %.elt = extractvalue { {}*, i64 } %28, 0
  %.elt84 = extractvalue { {}*, i64 } %28, 1
  %cond = icmp eq i64 %.elt84, 0
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152964.1 = select i1 %cond, {}* %29, {}* %.elt
  br label %tag2

normal-dest35:                                    ; preds = %tag2
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 796), align 16
  %ptrtoint42 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %31, i64 2, {}* %"closure->YAS-MERKE_OBJEKT", {}* %32, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest48
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 797), align 8
  %ptrtoint55 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint56 = add i64 %ptrtoint55, 7
  %entry-point-addr57 = inttoptr i64 %entry-point-addr-uint56 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point58 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr57, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point58({}* %35, i64 2, {}* %"closure->YAS-MERKE_OBJEKT", {}* %36, {}* null, {}* null)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %38, {}* inttoptr (i64 2732 to {}*))
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 466), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %40 = insertvalue { {}*, i64 } undef, {}* %39, 0
  %41 = insertvalue { {}*, i64 } %40, i64 1, 1
  ret { {}*, i64 } %41

normal-dest69:                                    ; preds = %maybe-more-tests21
  %ptrtoint70 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152964.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS-MERKE_OBJEKT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !123 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-MERKE_OBJEKT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-MERKE_OBJEKT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc20 unwind label %cleanup-lpad

.noexc20:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest6, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 157), align 8
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 4), align 16
  %15 = invoke {}* @cc_safe_symbol_value({}* %14)
          to label %normal-dest6 unwind label %cleanup-lpad

normal-dest6:                                     ; preds = %normal-dest5
  %ptrtoint = ptrtoint {}* %13 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %16 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %13, i64 2, {}* %farg0, {}* %15, {}* null, {}* null)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest6
  %.elt = extractvalue { {}*, i64 } %16, 0
  %.elt16 = extractvalue { {}*, i64 } %16, 1
  %cond = icmp eq i64 %.elt16, 0
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152948.0 = select i1 %cond, {}* %17, {}* %.elt
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 4), align 16
  call void @cc_setSymbolValue({}* %18, {}* %G152948.0)
  %19 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %20 = insertvalue { {}*, i64 } undef, {}* %19, 0
  %21 = insertvalue { {}*, i64 } %20, i64 1, 1
  ret { {}*, i64 } %21
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^687^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !124 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^687^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G153008.0 = phi {}* [ %18, %header-check-br ], [ %G153008.1, %normal-dest63 ], [ %G153008.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 542), align 16
  %ptrtoint22 = ptrtoint {}* %G153008.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint22, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G153008.0, i64 2, {}* %"closure->YAS-VERGESSE_OBJEKT", {}* %11, {}* null, {}* null)
          to label %normal-dest25 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest10, %header-check-br13
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag3, %normal-dest56, %maybe-more-tests21, %normal-dest41, %normal-dest35, %normal-dest28, %normal-dest25, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 542), align 16
  %"closure->YAS-VERGESSE_OBJEKT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS-VERGESSE_OBJEKT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-VERGESSE_OBJEKT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 24210, i64 687, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag3

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest56 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %tag1
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest25
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 800), align 16
  %ptrtoint29 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %25, i64 2, {}* %"closure->YAS-VERGESSE_OBJEKT", {}* %26, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %normal-dest28
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 801), align 8
  %ptrtoint42 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %29, i64 2, {}* %"closure->YAS-VERGESSE_OBJEKT", {}* %30, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %32, {}* inttoptr (i64 2748 to {}*))
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 542), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %34 = insertvalue { {}*, i64 } undef, {}* %33, 0
  %35 = insertvalue { {}*, i64 } %34, i64 1, 1
  ret { {}*, i64 } %35

normal-dest56:                                    ; preds = %maybe-more-tests21
  %ptrtoint57 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt101 = extractvalue { {}*, i64 } %36, 0
  %.elt103 = extractvalue { {}*, i64 } %36, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %37 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153008.1 = select i1 %cond82, {}* %37, {}* %.elt101
  br label %tag1

normal-dest69:                                    ; preds = %tag3
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 799), align 8
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153008.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS-VERGESSE_OBJEKT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !125 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-VERGESSE_OBJEKT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-VERGESSE_OBJEKT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc20 unwind label %cleanup-lpad

.noexc20:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest6, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 480), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 4), align 16
  %15 = invoke {}* @cc_safe_symbol_value({}* %14)
          to label %normal-dest6 unwind label %cleanup-lpad

normal-dest6:                                     ; preds = %normal-dest5
  %ptrtoint = ptrtoint {}* %13 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %16 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %13, i64 2, {}* %farg0, {}* %15, {}* null, {}* null)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest6
  %.elt = extractvalue { {}*, i64 } %16, 0
  %.elt16 = extractvalue { {}*, i64 } %16, 1
  %cond = icmp eq i64 %.elt16, 0
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G152992.0 = select i1 %cond, {}* %17, {}* %.elt
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 4), align 16
  call void @cc_setSymbolValue({}* %18, {}* %G152992.0)
  %19 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %20 = insertvalue { {}*, i64 } undef, {}* %19, 0
  %21 = insertvalue { {}*, i64 } %20, i64 1, 1
  ret { {}*, i64 } %21
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^692^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !126 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^692^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G153052.0 = phi {}* [ %18, %header-check-br ], [ %G153052.1, %normal-dest63 ], [ %G153052.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 562), align 16
  %ptrtoint13 = ptrtoint {}* %G153052.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G153052.0, i64 2, {}* %"closure->YAS-VERGESSE_OBJEKTE", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br46
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest56, %maybe-more-tests54, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 562), align 16
  %"closure->YAS-VERGESSE_OBJEKTE" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS-VERGESSE_OBJEKTE^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-VERGESSE_OBJEKTE^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 24320, i64 692, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br46

normal-dest16:                                    ; preds = %tag1
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 804), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->YAS-VERGESSE_OBJEKTE", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 807), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->YAS-VERGESSE_OBJEKTE", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 2768 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 562), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

header-check-br46:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %33 = icmp ult i64 %.off106, 5
  br i1 %33, label %maybe-more-tests54, label %tag4

maybe-more-tests54:                               ; preds = %header-check-br46
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest56 unwind label %cleanup-lpad

normal-dest56:                                    ; preds = %maybe-more-tests54
  %ptrtoint57 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %35, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt101 = extractvalue { {}*, i64 } %36, 0
  %.elt103 = extractvalue { {}*, i64 } %36, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %37 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153052.1 = select i1 %cond82, {}* %37, {}* %.elt101
  br label %tag1

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 803), align 8
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153052.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS-VERGESSE_OBJEKTE^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !127 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-VERGESSE_OBJEKTE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-VERGESSE_OBJEKTE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc20 unwind label %cleanup-lpad

.noexc20:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest6, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 484), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 4), align 16
  %15 = invoke {}* @cc_safe_symbol_value({}* %14)
          to label %normal-dest6 unwind label %cleanup-lpad

normal-dest6:                                     ; preds = %normal-dest5
  %ptrtoint = ptrtoint {}* %13 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %16 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %13, i64 2, {}* %15, {}* %farg0, {}* null, {}* null)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest6
  %.elt = extractvalue { {}*, i64 } %16, 0
  %.elt16 = extractvalue { {}*, i64 } %16, 1
  %cond = icmp eq i64 %.elt16, 0
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153036.0 = select i1 %cond, {}* %17, {}* %.elt
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 4), align 16
  call void @cc_setSymbolValue({}* %18, {}* %G153036.0)
  %19 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %20 = insertvalue { {}*, i64 } undef, {}* %19, 0
  %21 = insertvalue { {}*, i64 } %20, i64 1, 1
  ret { {}*, i64 } %21
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^698^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !128 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^698^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G153095.0 = phi {}* [ %18, %header-check-br ], [ %G153095.1, %normal-dest63 ], [ %G153095.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 544), align 16
  %ptrtoint13 = ptrtoint {}* %G153095.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G153095.0, i64 2, {}* %"closure->YAS-LOESCHE_SYMBOL", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest10, %header-check-br46
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest56 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests54, %normal-dest56, %tag3, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 544), align 16
  %"closure->YAS-LOESCHE_SYMBOL" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS-LOESCHE_SYMBOL^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-LOESCHE_SYMBOL^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 24454, i64 698, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br46

normal-dest16:                                    ; preds = %tag1
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 810), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->YAS-LOESCHE_SYMBOL", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 811), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->YAS-LOESCHE_SYMBOL", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 2792 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 544), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

header-check-br46:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %33 = icmp ult i64 %.off106, 5
  br i1 %33, label %maybe-more-tests54, label %tag3

maybe-more-tests54:                               ; preds = %header-check-br46
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest56:                                    ; preds = %tag3
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %37 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 809), align 8
  %ptrtoint57 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %14, i64 5, {}* %36, {}* %37, {}* %18, {}* %38, {}* %39)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt = extractvalue { {}*, i64 } %40, 0
  %.elt84 = extractvalue { {}*, i64 } %40, 1
  %cond = icmp eq i64 %.elt84, 0
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153095.1 = select i1 %cond, {}* %41, {}* %.elt
  br label %tag1

normal-dest69:                                    ; preds = %maybe-more-tests54
  %ptrtoint70 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %35, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153095.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS-LOESCHE_SYMBOL^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !129 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-LOESCHE_SYMBOL^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-LOESCHE_SYMBOL^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc14 unwind label %cleanup-lpad

.noexc14:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 88), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %ptrtoint = ptrtoint {}* %13 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %15 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %13, i64 2, {}* %farg0, {}* %14, {}* null, {}* null)
          to label %normal-dest8 unwind label %cleanup-lpad

normal-dest8:                                     ; preds = %normal-dest5
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %15
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^702^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !130 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^702^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br20
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest76, %normal-dest17, %header-check-br
  %G153146.0 = phi {}* [ %18, %header-check-br ], [ %G153146.1, %normal-dest17 ], [ %G153146.2, %normal-dest76 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 683), align 8
  %ptrtoint29 = ptrtoint {}* %G153146.0 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %G153146.0, i64 2, {}* %"closure->YAS-SICHER_WERT", {}* %13, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests28, %normal-dest54, %normal-dest48, %normal-dest41, %normal-dest35, %tag2, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 683), align 8
  %"closure->YAS-SICHER_WERT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS-SICHER_WERT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-SICHER_WERT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 24531, i64 702, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br20

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 816), align 16
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153146.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag2

header-check-br20:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %27 = icmp ult i64 %.off106, 5
  br i1 %27, label %maybe-more-tests28, label %tag

maybe-more-tests28:                               ; preds = %header-check-br20
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %tag2
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 817), align 8
  %ptrtoint42 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %31, i64 2, {}* %"closure->YAS-SICHER_WERT", {}* %32, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest48
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 818), align 16
  %ptrtoint55 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint56 = add i64 %ptrtoint55, 7
  %entry-point-addr57 = inttoptr i64 %entry-point-addr-uint56 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point58 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr57, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point58({}* %35, i64 2, {}* %"closure->YAS-SICHER_WERT", {}* %36, {}* null, {}* null)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %38, {}* inttoptr (i64 2808 to {}*))
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 683), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %40 = insertvalue { {}*, i64 } undef, {}* %39, 0
  %41 = insertvalue { {}*, i64 } %40, i64 1, 1
  ret { {}*, i64 } %41

normal-dest69:                                    ; preds = %maybe-more-tests28
  %ptrtoint70 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %29, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153146.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS-SICHER_WERT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !131 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-SICHER_WERT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-SICHER_WERT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc265 unwind label %cleanup-lpad

.noexc265:                                        ; preds = %13
  unreachable

tag1:                                             ; preds = %tag8
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 813), align 8
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest24 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest163, %header-check-br
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest38 unwind label %cleanup-lpad

tag5:                                             ; preds = %normal-dest17
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 164), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest52 unwind label %cleanup-lpad

tag6:                                             ; preds = %normal-dest17, %normal-dest31, %tag8
  %VORHER.0 = phi {}* [ %G153119.0, %tag8 ], [ %VORHER.1, %normal-dest31 ], [ %30, %normal-dest17 ]
  %20 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 33), align 8
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 157), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest66 unwind label %cleanup-lpad

tag8:                                             ; preds = %normal-dest52
  %.elt214 = extractvalue { {}*, i64 } %43, 0
  %.elt216 = extractvalue { {}*, i64 } %43, 1
  %cond200 = icmp eq i64 %.elt216, 0
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153214.1 = select i1 %cond200, {}* %23, {}* %.elt214
  %24 = icmp eq {}* %G153214.1, %23
  br i1 %24, label %tag6, label %tag1

tag9:                                             ; preds = %normal-dest181, %header-check-br164, %normal-dest45
  %G153165.0 = phi {}* [ %G153165.1, %normal-dest45 ], [ %72, %header-check-br164 ], [ %G153165.2, %normal-dest181 ]
  %ptrtoint187 = ptrtoint {}* %G153165.0 to i64
  %entry-point-addr-uint188 = add i64 %ptrtoint187, 7
  %entry-point-addr189 = inttoptr i64 %entry-point-addr-uint188 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point190 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr189, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point190({}* %G153165.0, i64 3, {}* %G153128.0, {}* %farg0, {}* %20, {}* null)
          to label %normal-dest193 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %13, %10, %tag9, %normal-dest174, %maybe-more-tests, %normal-dest157, %normal-dest145, %normal-dest138, %normal-dest136, %normal-dest129, %normal-dest117, %normal-dest105, %normal-dest98, %normal-dest96, %normal-dest89, %normal-dest77, %normal-dest70, %normal-dest68, %normal-dest66, %tag6, %normal-dest52, %tag5, %normal-dest38, %tag3, %normal-dest24, %tag1, %normal-dest14, %normal-dest
  %26 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %26

normal-dest:                                      ; preds = %11
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest14 unwind label %cleanup-lpad

normal-dest14:                                    ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %28 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %28, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest14
  %.elt = extractvalue { {}*, i64 } %29, 0
  %.elt212 = extractvalue { {}*, i64 } %29, 1
  %cond = icmp eq i64 %.elt212, 0
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153119.0 = select i1 %cond, {}* %30, {}* %.elt
  %31 = icmp eq {}* %G153119.0, %30
  br i1 %31, label %tag6, label %tag5

header-check-br:                                  ; preds = %header-check-br164
  %.off277 = add i64 %73, -1001
  %32 = icmp ult i64 %.off277, 5
  br i1 %32, label %maybe-more-tests, label %tag3

maybe-more-tests:                                 ; preds = %header-check-br
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest174 unwind label %cleanup-lpad

normal-dest24:                                    ; preds = %tag1
  %ptrtoint25 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint26 = add i64 %ptrtoint25, 7
  %entry-point-addr27 = inttoptr i64 %entry-point-addr-uint26 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point28 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr27, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point28({}* %15, i64 1, {}* %G153119.0, {}* null, {}* null, {}* null)
          to label %normal-dest31 unwind label %cleanup-lpad

normal-dest31:                                    ; preds = %normal-dest24
  %.elt218 = extractvalue { {}*, i64 } %35, 0
  %.elt220 = extractvalue { {}*, i64 } %35, 1
  %cond201 = icmp eq i64 %.elt220, 0
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %VORHER.1 = select i1 %cond201, {}* %36, {}* %.elt218
  br label %tag6

normal-dest38:                                    ; preds = %tag3
  %37 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 815), align 8
  %ptrtoint39 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint40 = add i64 %ptrtoint39, 7
  %entry-point-addr41 = inttoptr i64 %entry-point-addr-uint40 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point42 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr41, align 8
  %41 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point42({}* %17, i64 5, {}* %37, {}* %38, {}* %72, {}* %39, {}* %40)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest38
  %.elt250 = extractvalue { {}*, i64 } %41, 0
  %.elt252 = extractvalue { {}*, i64 } %41, 1
  %cond209 = icmp eq i64 %.elt252, 0
  %42 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153165.1 = select i1 %cond209, {}* %42, {}* %.elt250
  br label %tag9

normal-dest52:                                    ; preds = %tag5
  %ptrtoint53 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint54 = add i64 %ptrtoint53, 7
  %entry-point-addr55 = inttoptr i64 %entry-point-addr-uint54 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point56 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr55, align 8
  %43 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point56({}* %19, i64 1, {}* %G153119.0, {}* null, {}* null, {}* null)
          to label %tag8 unwind label %cleanup-lpad

normal-dest66:                                    ; preds = %tag6
  %44 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %45 = invoke {}* @cc_safe_fdefinition({}* %44)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest66
  %46 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 332), align 16
  %47 = invoke {}* @cc_safe_fdefinition({}* %46)
          to label %normal-dest70 unwind label %cleanup-lpad

normal-dest70:                                    ; preds = %normal-dest68
  %ptrtoint71 = ptrtoint {}* %47 to i64
  %entry-point-addr-uint72 = add i64 %ptrtoint71, 7
  %entry-point-addr73 = inttoptr i64 %entry-point-addr-uint72 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point74 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr73, align 8
  %48 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point74({}* %47, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest77 unwind label %cleanup-lpad

normal-dest77:                                    ; preds = %normal-dest70
  %.elt222 = extractvalue { {}*, i64 } %48, 0
  %.elt224 = extractvalue { {}*, i64 } %48, 1
  %cond202 = icmp eq i64 %.elt224, 0
  %49 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153204.0 = select i1 %cond202, {}* %49, {}* %.elt222
  %ptrtoint83 = ptrtoint {}* %45 to i64
  %entry-point-addr-uint84 = add i64 %ptrtoint83, 7
  %entry-point-addr85 = inttoptr i64 %entry-point-addr-uint84 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point86 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr85, align 8
  %50 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point86({}* %45, i64 2, {}* %VORHER.0, {}* %G153204.0, {}* null, {}* null)
          to label %normal-dest89 unwind label %cleanup-lpad

normal-dest89:                                    ; preds = %normal-dest77
  %.elt226 = extractvalue { {}*, i64 } %50, 0
  %.elt228 = extractvalue { {}*, i64 } %50, 1
  %cond203 = icmp eq i64 %.elt228, 0
  %51 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153192.0 = select i1 %cond203, {}* %51, {}* %.elt226
  %52 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 613), align 8
  %53 = invoke {}* @cc_safe_fdefinition({}* %52)
          to label %normal-dest96 unwind label %cleanup-lpad

normal-dest96:                                    ; preds = %normal-dest89
  %54 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %55 = invoke {}* @cc_safe_fdefinition({}* %54)
          to label %normal-dest98 unwind label %cleanup-lpad

normal-dest98:                                    ; preds = %normal-dest96
  %56 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 33), align 8
  %ptrtoint99 = ptrtoint {}* %55 to i64
  %entry-point-addr-uint100 = add i64 %ptrtoint99, 7
  %entry-point-addr101 = inttoptr i64 %entry-point-addr-uint100 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point102 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr101, align 8
  %57 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point102({}* %55, i64 2, {}* %farg0, {}* %56, {}* null, {}* null)
          to label %normal-dest105 unwind label %cleanup-lpad

normal-dest105:                                   ; preds = %normal-dest98
  %.elt230 = extractvalue { {}*, i64 } %57, 0
  %.elt232 = extractvalue { {}*, i64 } %57, 1
  %cond204 = icmp eq i64 %.elt232, 0
  %58 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153195.0 = select i1 %cond204, {}* %58, {}* %.elt230
  %ptrtoint111 = ptrtoint {}* %53 to i64
  %entry-point-addr-uint112 = add i64 %ptrtoint111, 7
  %entry-point-addr113 = inttoptr i64 %entry-point-addr-uint112 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point114 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr113, align 8
  %59 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point114({}* %53, i64 2, {}* %G153195.0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest117 unwind label %cleanup-lpad

normal-dest117:                                   ; preds = %normal-dest105
  %.elt234 = extractvalue { {}*, i64 } %59, 0
  %.elt236 = extractvalue { {}*, i64 } %59, 1
  %cond205 = icmp eq i64 %.elt236, 0
  %60 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153193.0 = select i1 %cond205, {}* %60, {}* %.elt234
  %ptrtoint123 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint124 = add i64 %ptrtoint123, 7
  %entry-point-addr125 = inttoptr i64 %entry-point-addr-uint124 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point126 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr125, align 8
  %61 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point126({}* %22, i64 2, {}* %G153192.0, {}* %G153193.0, {}* null, {}* null)
          to label %normal-dest129 unwind label %cleanup-lpad

normal-dest129:                                   ; preds = %normal-dest117
  %.elt238 = extractvalue { {}*, i64 } %61, 0
  %.elt240 = extractvalue { {}*, i64 } %61, 1
  %cond206 = icmp eq i64 %.elt240, 0
  %62 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %store153124153126.0 = select i1 %cond206, {}* %62, {}* %.elt238
  %63 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 602), align 16
  %64 = invoke {}* @cc_safe_fdefinition({}* %63)
          to label %normal-dest136 unwind label %cleanup-lpad

normal-dest136:                                   ; preds = %normal-dest129
  %65 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %66 = invoke {}* @cc_safe_fdefinition({}* %65)
          to label %normal-dest138 unwind label %cleanup-lpad

normal-dest138:                                   ; preds = %normal-dest136
  %ptrtoint139 = ptrtoint {}* %66 to i64
  %entry-point-addr-uint140 = add i64 %ptrtoint139, 7
  %entry-point-addr141 = inttoptr i64 %entry-point-addr-uint140 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point142 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr141, align 8
  %67 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point142({}* %66, i64 2, {}* %farg0, {}* %20, {}* null, {}* null)
          to label %normal-dest145 unwind label %cleanup-lpad

normal-dest145:                                   ; preds = %normal-dest138
  %.elt242 = extractvalue { {}*, i64 } %67, 0
  %.elt244 = extractvalue { {}*, i64 } %67, 1
  %cond207 = icmp eq i64 %.elt244, 0
  %68 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153183.0 = select i1 %cond207, {}* %68, {}* %.elt242
  %ptrtoint151 = ptrtoint {}* %64 to i64
  %entry-point-addr-uint152 = add i64 %ptrtoint151, 7
  %entry-point-addr153 = inttoptr i64 %entry-point-addr-uint152 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point154 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr153, align 8
  %69 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point154({}* %64, i64 3, {}* %G153183.0, {}* %store153124153126.0, {}* %farg1, {}* null)
          to label %normal-dest157 unwind label %cleanup-lpad

normal-dest157:                                   ; preds = %normal-dest145
  %.elt246 = extractvalue { {}*, i64 } %69, 0
  %.elt248 = extractvalue { {}*, i64 } %69, 1
  %cond208 = icmp eq i64 %.elt248, 0
  %70 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153128.0 = select i1 %cond208, {}* %70, {}* %.elt246
  %71 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %72 = invoke {}* @cc_safe_setfdefinition({}* %71)
          to label %normal-dest163 unwind label %cleanup-lpad

normal-dest163:                                   ; preds = %normal-dest157
  %ptrtoint165 = ptrtoint {}* %72 to i64
  %tag-only166 = and i64 %ptrtoint165, 7
  %test167 = icmp eq i64 %tag-only166, 1
  br i1 %test167, label %header-check-br164, label %tag3

header-check-br164:                               ; preds = %normal-dest163
  %irc-bit-cast168 = bitcast {}* %72 to i8*
  %gep169 = getelementptr inbounds i8, i8* %irc-bit-cast168, i64 -9
  %irc-bit-cast170 = bitcast i8* %gep169 to i64*
  %73 = load i64, i64* %irc-bit-cast170, align 8
  %.off = add i64 %73, -913
  %74 = icmp ult i64 %.off, 85
  br i1 %74, label %tag9, label %header-check-br

normal-dest174:                                   ; preds = %maybe-more-tests
  %ptrtoint175 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint176 = add i64 %ptrtoint175, 7
  %entry-point-addr177 = inttoptr i64 %entry-point-addr-uint176 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point178 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr177, align 8
  %75 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point178({}* %34, i64 1, {}* nonnull %72, {}* null, {}* null, {}* null)
          to label %normal-dest181 unwind label %cleanup-lpad

normal-dest181:                                   ; preds = %normal-dest174
  %.elt261 = extractvalue { {}*, i64 } %75, 0
  %.elt263 = extractvalue { {}*, i64 } %75, 1
  %cond210 = icmp eq i64 %.elt263, 0
  %76 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153165.2 = select i1 %cond210, {}* %76, {}* %.elt261
  br label %tag9

normal-dest193:                                   ; preds = %tag9
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %77 = insertvalue { {}*, i64 } undef, {}* %store153124153126.0, 0
  %78 = insertvalue { {}*, i64 } %77, i64 1, 1
  ret { {}*, i64 } %78
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^714^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !132 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^714^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest54, %header-check-br
  %G153253.0 = phi {}* [ %18, %header-check-br ], [ %G153253.1, %normal-dest54 ], [ %G153253.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 721), align 8
  %ptrtoint13 = ptrtoint {}* %G153253.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G153253.0, i64 2, {}* %"closure->YAS-VERGESSE_WERT", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest10, %header-check-br59
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest47 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests67, %normal-dest47, %tag2, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 721), align 8
  %"closure->YAS-VERGESSE_WERT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS-VERGESSE_WERT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-VERGESSE_WERT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 24897, i64 714, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br59

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 822), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->YAS-VERGESSE_WERT", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 823), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->YAS-VERGESSE_WERT", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 2856 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 721), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %tag2
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %35 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 821), align 8
  %ptrtoint48 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %14, i64 5, {}* %33, {}* %34, {}* %18, {}* %35, {}* %36)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt = extractvalue { {}*, i64 } %37, 0
  %.elt84 = extractvalue { {}*, i64 } %37, 1
  %cond = icmp eq i64 %.elt84, 0
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153253.1 = select i1 %cond, {}* %38, {}* %.elt
  br label %tag

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %39 = icmp ult i64 %.off106, 5
  br i1 %39, label %maybe-more-tests67, label %tag2

maybe-more-tests67:                               ; preds = %header-check-br59
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %maybe-more-tests67
  %ptrtoint70 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %41, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153253.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS-VERGESSE_WERT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !133 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-VERGESSE_WERT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-VERGESSE_WERT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc185 unwind label %cleanup-lpad

.noexc185:                                        ; preds = %13
  unreachable

tag:                                              ; preds = %tag5
  %14 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest40 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest40
  %.elt181 = extractvalue { {}*, i64 } %42, 0
  %.elt183 = extractvalue { {}*, i64 } %42, 1
  %cond145 = icmp eq i64 %.elt183, 0
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %.194 = select i1 %cond145, {}* %16, {}* %.elt181
  br label %tag4.thread

tag4.thread:                                      ; preds = %tag12, %tag5, %tag4
  %17 = phi {}* [ %.194, %tag4 ], [ %return-value.sroa.0.0.ph196.pre, %tag12 ], [ %36, %tag5 ]
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 602), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest58 unwind label %cleanup-lpad

tag5:                                             ; preds = %normal-dest31
  %20 = icmp eq {}* %x.0, %36
  %.val = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %G153310.0 = select i1 %20, {}* %.val, {}* %36
  %21 = icmp eq {}* %G153310.0, %36
  br i1 %21, label %tag, label %tag4.thread

tag6:                                             ; preds = %normal-dest136, %normal-dest122, %header-check-br86
  %G153272.0 = phi {}* [ %53, %header-check-br86 ], [ %G153272.1, %normal-dest122 ], [ %G153272.2, %normal-dest136 ]
  %ptrtoint99 = ptrtoint {}* %G153272.0 to i64
  %entry-point-addr-uint100 = add i64 %ptrtoint99, 7
  %entry-point-addr101 = inttoptr i64 %entry-point-addr-uint100 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point102 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr101, align 8
  %22 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point102({}* %G153272.0, i64 3, {}* %G153235.0, {}* %farg0, {}* %27, {}* null)
          to label %normal-dest105 unwind label %cleanup-lpad

tag9:                                             ; preds = %normal-dest85, %header-check-br
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest115 unwind label %cleanup-lpad

tag12:                                            ; preds = %normal-dest31
  %25 = add i64 %37, 5
  %.phi.trans.insert = inttoptr i64 %25 to {}**
  %return-value.sroa.0.0.ph196.pre = load {}*, {}** %.phi.trans.insert, align 8
  br label %tag4.thread

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest129, %maybe-more-tests, %normal-dest115, %tag9, %tag6, %normal-dest79, %normal-dest67, %normal-dest60, %normal-dest58, %tag4.thread, %normal-dest40, %tag, %normal-dest22, %normal-dest19, %normal-dest17, %normal-dest
  %26 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %26

normal-dest:                                      ; preds = %11
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 33), align 8
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 613), align 8
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest
  %30 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest17
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 33), align 8
  %ptrtoint = ptrtoint {}* %31 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %31, i64 2, {}* %farg0, {}* %32, {}* null, {}* null)
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %normal-dest19
  %.elt = extractvalue { {}*, i64 } %33, 0
  %.elt151 = extractvalue { {}*, i64 } %33, 1
  %cond = icmp eq i64 %.elt151, 0
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153318.0 = select i1 %cond, {}* %34, {}* %.elt
  %ptrtoint25 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint26 = add i64 %ptrtoint25, 7
  %entry-point-addr27 = inttoptr i64 %entry-point-addr-uint26 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point28 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr27, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point28({}* %29, i64 2, {}* %G153318.0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest31 unwind label %cleanup-lpad

normal-dest31:                                    ; preds = %normal-dest22
  %.elt153 = extractvalue { {}*, i64 } %35, 0
  %.elt155 = extractvalue { {}*, i64 } %35, 1
  %cond144 = icmp eq i64 %.elt155, 0
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %x.0 = select i1 %cond144, {}* %36, {}* %.elt153
  %37 = ptrtoint {}* %x.0 to i64
  %tag-only156 = and i64 %37, 7
  %consp-test = icmp eq i64 %tag-only156, 3
  br i1 %consp-test, label %tag12, label %tag5

normal-dest40:                                    ; preds = %tag
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 112), align 16
  %ptrtoint41 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint42 = add i64 %ptrtoint41, 7
  %entry-point-addr43 = inttoptr i64 %entry-point-addr-uint42 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point44 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr43, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point44({}* %15, i64 5, {}* %38, {}* %39, {}* %x.0, {}* %40, {}* %41)
          to label %tag4 unwind label %cleanup-lpad

header-check-br:                                  ; preds = %header-check-br86
  %.off197 = add i64 %54, -1001
  %43 = icmp ult i64 %.off197, 5
  br i1 %43, label %maybe-more-tests, label %tag9

maybe-more-tests:                                 ; preds = %header-check-br
  %44 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %45 = invoke {}* @cc_safe_fdefinition({}* %44)
          to label %normal-dest129 unwind label %cleanup-lpad

normal-dest58:                                    ; preds = %tag4.thread
  %46 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %47 = invoke {}* @cc_safe_fdefinition({}* %46)
          to label %normal-dest60 unwind label %cleanup-lpad

normal-dest60:                                    ; preds = %normal-dest58
  %ptrtoint61 = ptrtoint {}* %47 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %48 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %47, i64 2, {}* %farg0, {}* %27, {}* null, {}* null)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt158 = extractvalue { {}*, i64 } %48, 0
  %.elt160 = extractvalue { {}*, i64 } %48, 1
  %cond146 = icmp eq i64 %.elt160, 0
  %49 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153290.0 = select i1 %cond146, {}* %49, {}* %.elt158
  %ptrtoint73 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint74 = add i64 %ptrtoint73, 7
  %entry-point-addr75 = inttoptr i64 %entry-point-addr-uint74 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point76 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr75, align 8
  %50 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point76({}* %19, i64 3, {}* %G153290.0, {}* %17, {}* %farg1, {}* null)
          to label %normal-dest79 unwind label %cleanup-lpad

normal-dest79:                                    ; preds = %normal-dest67
  %.elt162 = extractvalue { {}*, i64 } %50, 0
  %.elt164 = extractvalue { {}*, i64 } %50, 1
  %cond147 = icmp eq i64 %.elt164, 0
  %51 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153235.0 = select i1 %cond147, {}* %51, {}* %.elt162
  %52 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 105), align 8
  %53 = invoke {}* @cc_safe_setfdefinition({}* %52)
          to label %normal-dest85 unwind label %cleanup-lpad

normal-dest85:                                    ; preds = %normal-dest79
  %ptrtoint87 = ptrtoint {}* %53 to i64
  %tag-only88 = and i64 %ptrtoint87, 7
  %test89 = icmp eq i64 %tag-only88, 1
  br i1 %test89, label %header-check-br86, label %tag9

header-check-br86:                                ; preds = %normal-dest85
  %irc-bit-cast90 = bitcast {}* %53 to i8*
  %gep91 = getelementptr inbounds i8, i8* %irc-bit-cast90, i64 -9
  %irc-bit-cast92 = bitcast i8* %gep91 to i64*
  %54 = load i64, i64* %irc-bit-cast92, align 8
  %.off = add i64 %54, -913
  %55 = icmp ult i64 %.off, 85
  br i1 %55, label %tag6, label %header-check-br

normal-dest105:                                   ; preds = %tag6
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %56 = insertvalue { {}*, i64 } undef, {}* %17, 0
  %57 = insertvalue { {}*, i64 } %56, i64 1, 1
  ret { {}*, i64 } %57

normal-dest115:                                   ; preds = %tag9
  %58 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %59 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %60 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %61 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 820), align 16
  %ptrtoint116 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint117 = add i64 %ptrtoint116, 7
  %entry-point-addr118 = inttoptr i64 %entry-point-addr-uint117 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point119 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr118, align 8
  %62 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point119({}* %24, i64 5, {}* %58, {}* %59, {}* %53, {}* %60, {}* %61)
          to label %normal-dest122 unwind label %cleanup-lpad

normal-dest122:                                   ; preds = %normal-dest115
  %.elt166 = extractvalue { {}*, i64 } %62, 0
  %.elt168 = extractvalue { {}*, i64 } %62, 1
  %cond148 = icmp eq i64 %.elt168, 0
  %63 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153272.1 = select i1 %cond148, {}* %63, {}* %.elt166
  br label %tag6

normal-dest129:                                   ; preds = %maybe-more-tests
  %ptrtoint130 = ptrtoint {}* %45 to i64
  %entry-point-addr-uint131 = add i64 %ptrtoint130, 7
  %entry-point-addr132 = inttoptr i64 %entry-point-addr-uint131 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point133 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr132, align 8
  %64 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point133({}* %45, i64 1, {}* nonnull %53, {}* null, {}* null, {}* null)
          to label %normal-dest136 unwind label %cleanup-lpad

normal-dest136:                                   ; preds = %normal-dest129
  %.elt177 = extractvalue { {}*, i64 } %64, 0
  %.elt179 = extractvalue { {}*, i64 } %64, 1
  %cond149 = icmp eq i64 %.elt179, 0
  %65 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153272.2 = select i1 %cond149, {}* %65, {}* %.elt177
  br label %tag6
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"yas=yasos.lisp^720^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !134 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"yas=yasos.lisp^720^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag3:                                             ; preds = %normal-dest10, %header-check-br20
  %11 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest30 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest37, %normal-dest17, %header-check-br
  %G153342.0 = phi {}* [ %18, %header-check-br ], [ %G153342.1, %normal-dest17 ], [ %G153342.2, %normal-dest37 ]
  %13 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 840), align 16
  %ptrtoint43 = ptrtoint {}* %G153342.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G153342.0, i64 2, {}* %"closure->YAS-TESTE_OBJEKT", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest30, %tag3, %normal-dest13, %maybe-more-tests28, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 840), align 16
  %"closure->YAS-TESTE_OBJEKT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"YAS-TESTE_OBJEKT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-TESTE_OBJEKT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 25065, i64 720, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br20

normal-dest13:                                    ; preds = %maybe-more-tests28
  %ptrtoint14 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153342.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag4

header-check-br20:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %23 = icmp ult i64 %.off106, 5
  br i1 %23, label %maybe-more-tests28, label %tag3

maybe-more-tests28:                               ; preds = %header-check-br20
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 53), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest30:                                    ; preds = %tag3
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 57), align 8
  %27 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 59), align 8
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 63), align 8
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 839), align 8
  %ptrtoint31 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %12, i64 5, {}* %26, {}* %27, {}* %18, {}* %28, {}* %29)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt = extractvalue { {}*, i64 } %30, 0
  %.elt84 = extractvalue { {}*, i64 } %30, 1
  %cond = icmp eq i64 %.elt84, 0
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %G153342.2 = select i1 %cond, {}* %31, {}* %.elt
  br label %tag4

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 90), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->YAS-TESTE_OBJEKT", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 95), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 842), align 16
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->YAS-TESTE_OBJEKT", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 2880 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 840), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"YAS-TESTE_OBJEKT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !135 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"YAS-TESTE_OBJEKT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %normal-dest301, %normal-dest295, %normal-dest288, %normal-dest282, %normal-dest275, %normal-dest269, %normal-dest262, %normal-dest256, %normal-dest249, %normal-dest243, %normal-dest236, %normal-dest230, %normal-dest223, %normal-dest217, %normal-dest210, %normal-dest204, %normal-dest197, %normal-dest191, %normal-dest184, %normal-dest178, %normal-dest170, %normal-dest169, %normal-dest163, %normal-dest156, %normal-dest150, %normal-dest143, %normal-dest137, %normal-dest130, %normal-dest124, %normal-dest117, %normal-dest111, %normal-dest104, %normal-dest98, %normal-dest91, %normal-dest85, %normal-dest78, %normal-dest72, %normal-dest65, %normal-dest59, %normal-dest52, %normal-dest46, %normal-dest39, %normal-dest33, %normal-dest26, %normal-dest20, %normal-dest13, %normal-dest12, %normal-dest8, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 555), align 8
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %13 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %13, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest8 unwind label %cleanup-lpad

normal-dest8:                                     ; preds = %normal-dest5
  %15 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 744), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest8
  %17 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 15), align 8
  %18 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 825), align 8
  %19 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 236), align 16
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %19, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.16", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.16^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 25065, i64 720, i64 0, i64 0)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest13:                                    ; preds = %normal-dest12
  %ptrtoint14 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint15 = add i64 %ptrtoint14, 7
  %entry-point-addr16 = inttoptr i64 %entry-point-addr-uint15 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point17 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr16, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point17({}* %16, i64 3, {}* %17, {}* %18, {}* %"closure->LAMBDA", {}* null)
          to label %normal-dest20 unwind label %cleanup-lpad

normal-dest20:                                    ; preds = %normal-dest13
  %21 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 766), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest20
  %23 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 15), align 8
  %24 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 825), align 8
  %ptrtoint27 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint28 = add i64 %ptrtoint27, 7
  %entry-point-addr29 = inttoptr i64 %entry-point-addr-uint28 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point30 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr29, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point30({}* %22, i64 2, {}* %23, {}* %24, {}* null, {}* null)
          to label %normal-dest33 unwind label %cleanup-lpad

normal-dest33:                                    ; preds = %normal-dest26
  %26 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 493), align 8
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest33
  %28 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 828), align 16
  %29 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 15), align 8
  %ptrtoint40 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint41 = add i64 %ptrtoint40, 7
  %entry-point-addr42 = inttoptr i64 %entry-point-addr-uint41 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point43 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr42, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point43({}* %27, i64 2, {}* %28, {}* %29, {}* null, {}* null)
          to label %normal-dest46 unwind label %cleanup-lpad

normal-dest46:                                    ; preds = %normal-dest39
  %31 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 493), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest46
  %33 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 830), align 16
  %34 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 828), align 16
  %ptrtoint53 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint54 = add i64 %ptrtoint53, 7
  %entry-point-addr55 = inttoptr i64 %entry-point-addr-uint54 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point56 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr55, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point56({}* %32, i64 2, {}* %33, {}* %34, {}* null, {}* null)
          to label %normal-dest59 unwind label %cleanup-lpad

normal-dest59:                                    ; preds = %normal-dest52
  %36 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 486), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest65 unwind label %cleanup-lpad

normal-dest65:                                    ; preds = %normal-dest59
  %38 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 830), align 16
  %39 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 832), align 16
  %ptrtoint66 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint67 = add i64 %ptrtoint66, 7
  %entry-point-addr68 = inttoptr i64 %entry-point-addr-uint67 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point69 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr68, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point69({}* %37, i64 3, {}* %38, {}* %39, {}* inttoptr (i64 372 to {}*), {}* null)
          to label %normal-dest72 unwind label %cleanup-lpad

normal-dest72:                                    ; preds = %normal-dest65
  %41 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %42 = invoke {}* @cc_safe_fdefinition({}* %41)
          to label %normal-dest78 unwind label %cleanup-lpad

normal-dest78:                                    ; preds = %normal-dest72
  %43 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 830), align 16
  %44 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 832), align 16
  %ptrtoint79 = ptrtoint {}* %42 to i64
  %entry-point-addr-uint80 = add i64 %ptrtoint79, 7
  %entry-point-addr81 = inttoptr i64 %entry-point-addr-uint80 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point82 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr81, align 8
  %45 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point82({}* %42, i64 2, {}* %43, {}* %44, {}* null, {}* null)
          to label %normal-dest85 unwind label %cleanup-lpad

normal-dest85:                                    ; preds = %normal-dest78
  %46 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 486), align 16
  %47 = invoke {}* @cc_safe_fdefinition({}* %46)
          to label %normal-dest91 unwind label %cleanup-lpad

normal-dest91:                                    ; preds = %normal-dest85
  %48 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 828), align 16
  %49 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 834), align 16
  %50 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 836), align 16
  %ptrtoint92 = ptrtoint {}* %47 to i64
  %entry-point-addr-uint93 = add i64 %ptrtoint92, 7
  %entry-point-addr94 = inttoptr i64 %entry-point-addr-uint93 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point95 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr94, align 8
  %51 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point95({}* %47, i64 3, {}* %48, {}* %49, {}* %50, {}* null)
          to label %normal-dest98 unwind label %cleanup-lpad

normal-dest98:                                    ; preds = %normal-dest91
  %52 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 622), align 16
  %53 = invoke {}* @cc_safe_fdefinition({}* %52)
          to label %normal-dest104 unwind label %cleanup-lpad

normal-dest104:                                   ; preds = %normal-dest98
  %54 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 830), align 16
  %55 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 832), align 16
  %56 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 694), align 16
  %57 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %ptrtoint105 = ptrtoint {}* %53 to i64
  %entry-point-addr-uint106 = add i64 %ptrtoint105, 7
  %entry-point-addr107 = inttoptr i64 %entry-point-addr-uint106 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point108 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr107, align 8
  %58 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point108({}* %53, i64 5, {}* %54, {}* %55, {}* inttoptr (i64 372 to {}*), {}* %56, {}* %57)
          to label %normal-dest111 unwind label %cleanup-lpad

normal-dest111:                                   ; preds = %normal-dest104
  %59 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 717), align 8
  %60 = invoke {}* @cc_safe_fdefinition({}* %59)
          to label %normal-dest117 unwind label %cleanup-lpad

normal-dest117:                                   ; preds = %normal-dest111
  %61 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 830), align 16
  %62 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 832), align 16
  %ptrtoint118 = ptrtoint {}* %60 to i64
  %entry-point-addr-uint119 = add i64 %ptrtoint118, 7
  %entry-point-addr120 = inttoptr i64 %entry-point-addr-uint119 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point121 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr120, align 8
  %63 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point121({}* %60, i64 2, {}* %61, {}* %62, {}* null, {}* null)
          to label %normal-dest124 unwind label %cleanup-lpad

normal-dest124:                                   ; preds = %normal-dest117
  %64 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 560), align 16
  %65 = invoke {}* @cc_safe_fdefinition({}* %64)
          to label %normal-dest130 unwind label %cleanup-lpad

normal-dest130:                                   ; preds = %normal-dest124
  %66 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 830), align 16
  %67 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 832), align 16
  %68 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 729), align 8
  %69 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  %ptrtoint131 = ptrtoint {}* %65 to i64
  %entry-point-addr-uint132 = add i64 %ptrtoint131, 7
  %entry-point-addr133 = inttoptr i64 %entry-point-addr-uint132 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point134 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr133, align 8
  %70 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point134({}* %65, i64 4, {}* %66, {}* %67, {}* %68, {}* %69)
          to label %normal-dest137 unwind label %cleanup-lpad

normal-dest137:                                   ; preds = %normal-dest130
  %71 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %72 = invoke {}* @cc_safe_fdefinition({}* %71)
          to label %normal-dest143 unwind label %cleanup-lpad

normal-dest143:                                   ; preds = %normal-dest137
  %73 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 830), align 16
  %74 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 832), align 16
  %ptrtoint144 = ptrtoint {}* %72 to i64
  %entry-point-addr-uint145 = add i64 %ptrtoint144, 7
  %entry-point-addr146 = inttoptr i64 %entry-point-addr-uint145 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point147 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr146, align 8
  %75 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point147({}* %72, i64 2, {}* %73, {}* %74, {}* null, {}* null)
          to label %normal-dest150 unwind label %cleanup-lpad

normal-dest150:                                   ; preds = %normal-dest143
  %76 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 766), align 16
  %77 = invoke {}* @cc_safe_fdefinition({}* %76)
          to label %normal-dest156 unwind label %cleanup-lpad

normal-dest156:                                   ; preds = %normal-dest150
  %78 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 830), align 16
  %79 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 825), align 8
  %ptrtoint157 = ptrtoint {}* %77 to i64
  %entry-point-addr-uint158 = add i64 %ptrtoint157, 7
  %entry-point-addr159 = inttoptr i64 %entry-point-addr-uint158 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point160 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr159, align 8
  %80 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point160({}* %77, i64 2, {}* %78, {}* %79, {}* null, {}* null)
          to label %normal-dest163 unwind label %cleanup-lpad

normal-dest163:                                   ; preds = %normal-dest156
  %81 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 758), align 16
  %82 = invoke {}* @cc_safe_fdefinition({}* %81)
          to label %normal-dest169 unwind label %cleanup-lpad

normal-dest169:                                   ; preds = %normal-dest163
  %83 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 828), align 16
  %84 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 825), align 8
  %85 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 236), align 16
  %"closure->LAMBDA171" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %85, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.17", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.17^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 25065, i64 720, i64 0, i64 0)
          to label %normal-dest170 unwind label %cleanup-lpad

normal-dest170:                                   ; preds = %normal-dest169
  %ptrtoint172 = ptrtoint {}* %82 to i64
  %entry-point-addr-uint173 = add i64 %ptrtoint172, 7
  %entry-point-addr174 = inttoptr i64 %entry-point-addr-uint173 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point175 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr174, align 8
  %86 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point175({}* %82, i64 3, {}* %83, {}* %84, {}* %"closure->LAMBDA171", {}* null)
          to label %normal-dest178 unwind label %cleanup-lpad

normal-dest178:                                   ; preds = %normal-dest170
  %87 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 766), align 16
  %88 = invoke {}* @cc_safe_fdefinition({}* %87)
          to label %normal-dest184 unwind label %cleanup-lpad

normal-dest184:                                   ; preds = %normal-dest178
  %89 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 828), align 16
  %90 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 825), align 8
  %ptrtoint185 = ptrtoint {}* %88 to i64
  %entry-point-addr-uint186 = add i64 %ptrtoint185, 7
  %entry-point-addr187 = inttoptr i64 %entry-point-addr-uint186 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point188 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr187, align 8
  %91 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point188({}* %88, i64 2, {}* %89, {}* %90, {}* null, {}* null)
          to label %normal-dest191 unwind label %cleanup-lpad

normal-dest191:                                   ; preds = %normal-dest184
  %92 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 549), align 8
  %93 = invoke {}* @cc_safe_fdefinition({}* %92)
          to label %normal-dest197 unwind label %cleanup-lpad

normal-dest197:                                   ; preds = %normal-dest191
  %94 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 830), align 16
  %ptrtoint198 = ptrtoint {}* %93 to i64
  %entry-point-addr-uint199 = add i64 %ptrtoint198, 7
  %entry-point-addr200 = inttoptr i64 %entry-point-addr-uint199 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point201 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr200, align 8
  %95 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point201({}* %93, i64 1, {}* %94, {}* null, {}* null, {}* null)
          to label %normal-dest204 unwind label %cleanup-lpad

normal-dest204:                                   ; preds = %normal-dest197
  %96 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 328), align 16
  %97 = invoke {}* @cc_safe_fdefinition({}* %96)
          to label %normal-dest210 unwind label %cleanup-lpad

normal-dest210:                                   ; preds = %normal-dest204
  %98 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 828), align 16
  %ptrtoint211 = ptrtoint {}* %97 to i64
  %entry-point-addr-uint212 = add i64 %ptrtoint211, 7
  %entry-point-addr213 = inttoptr i64 %entry-point-addr-uint212 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point214 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr213, align 8
  %99 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point214({}* %97, i64 1, {}* %98, {}* null, {}* null, {}* null)
          to label %normal-dest217 unwind label %cleanup-lpad

normal-dest217:                                   ; preds = %normal-dest210
  %100 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 644), align 16
  %101 = invoke {}* @cc_safe_fdefinition({}* %100)
          to label %normal-dest223 unwind label %cleanup-lpad

normal-dest223:                                   ; preds = %normal-dest217
  %102 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 828), align 16
  %103 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 834), align 16
  %ptrtoint224 = ptrtoint {}* %101 to i64
  %entry-point-addr-uint225 = add i64 %ptrtoint224, 7
  %entry-point-addr226 = inttoptr i64 %entry-point-addr-uint225 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point227 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr226, align 8
  %104 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point227({}* %101, i64 2, {}* %102, {}* %103, {}* null, {}* null)
          to label %normal-dest230 unwind label %cleanup-lpad

normal-dest230:                                   ; preds = %normal-dest223
  %105 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 328), align 16
  %106 = invoke {}* @cc_safe_fdefinition({}* %105)
          to label %normal-dest236 unwind label %cleanup-lpad

normal-dest236:                                   ; preds = %normal-dest230
  %107 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 828), align 16
  %ptrtoint237 = ptrtoint {}* %106 to i64
  %entry-point-addr-uint238 = add i64 %ptrtoint237, 7
  %entry-point-addr239 = inttoptr i64 %entry-point-addr-uint238 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point240 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr239, align 8
  %108 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point240({}* %106, i64 1, {}* %107, {}* null, {}* null, {}* null)
          to label %normal-dest243 unwind label %cleanup-lpad

normal-dest243:                                   ; preds = %normal-dest236
  %109 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 486), align 16
  %110 = invoke {}* @cc_safe_fdefinition({}* %109)
          to label %normal-dest249 unwind label %cleanup-lpad

normal-dest249:                                   ; preds = %normal-dest243
  %111 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 828), align 16
  %112 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 832), align 16
  %ptrtoint250 = ptrtoint {}* %110 to i64
  %entry-point-addr-uint251 = add i64 %ptrtoint250, 7
  %entry-point-addr252 = inttoptr i64 %entry-point-addr-uint251 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point253 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr252, align 8
  %113 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point253({}* %110, i64 3, {}* %111, {}* %112, {}* inttoptr (i64 396 to {}*), {}* null)
          to label %normal-dest256 unwind label %cleanup-lpad

normal-dest256:                                   ; preds = %normal-dest249
  %114 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 472), align 16
  %115 = invoke {}* @cc_safe_fdefinition({}* %114)
          to label %normal-dest262 unwind label %cleanup-lpad

normal-dest262:                                   ; preds = %normal-dest256
  %116 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 828), align 16
  %117 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 832), align 16
  %ptrtoint263 = ptrtoint {}* %115 to i64
  %entry-point-addr-uint264 = add i64 %ptrtoint263, 7
  %entry-point-addr265 = inttoptr i64 %entry-point-addr-uint264 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point266 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr265, align 8
  %118 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point266({}* %115, i64 3, {}* %116, {}* %117, {}* inttoptr (i64 352 to {}*), {}* null)
          to label %normal-dest269 unwind label %cleanup-lpad

normal-dest269:                                   ; preds = %normal-dest262
  %119 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 284), align 16
  %120 = invoke {}* @cc_safe_fdefinition({}* %119)
          to label %normal-dest275 unwind label %cleanup-lpad

normal-dest275:                                   ; preds = %normal-dest269
  %121 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 828), align 16
  %122 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 832), align 16
  %ptrtoint276 = ptrtoint {}* %120 to i64
  %entry-point-addr-uint277 = add i64 %ptrtoint276, 7
  %entry-point-addr278 = inttoptr i64 %entry-point-addr-uint277 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point279 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr278, align 8
  %123 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point279({}* %120, i64 2, {}* %121, {}* %122, {}* null, {}* null)
          to label %normal-dest282 unwind label %cleanup-lpad

normal-dest282:                                   ; preds = %normal-dest275
  %124 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 540), align 16
  %125 = invoke {}* @cc_safe_fdefinition({}* %124)
          to label %normal-dest288 unwind label %cleanup-lpad

normal-dest288:                                   ; preds = %normal-dest282
  %126 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 828), align 16
  %127 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 832), align 16
  %ptrtoint289 = ptrtoint {}* %125 to i64
  %entry-point-addr-uint290 = add i64 %ptrtoint289, 7
  %entry-point-addr291 = inttoptr i64 %entry-point-addr-uint290 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point292 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr291, align 8
  %128 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point292({}* %125, i64 3, {}* %126, {}* %127, {}* inttoptr (i64 352 to {}*), {}* null)
          to label %normal-dest295 unwind label %cleanup-lpad

normal-dest295:                                   ; preds = %normal-dest288
  %129 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 540), align 16
  %130 = invoke {}* @cc_safe_fdefinition({}* %129)
          to label %normal-dest301 unwind label %cleanup-lpad

normal-dest301:                                   ; preds = %normal-dest295
  %131 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 828), align 16
  %132 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 832), align 16
  %ptrtoint302 = ptrtoint {}* %130 to i64
  %entry-point-addr-uint303 = add i64 %ptrtoint302, 7
  %entry-point-addr304 = inttoptr i64 %entry-point-addr-uint303 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point305 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr304, align 8
  %133 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point305({}* %130, i64 3, {}* %131, {}* %132, {}* inttoptr (i64 396 to {}*), {}* null)
          to label %normal-dest308 unwind label %cleanup-lpad

normal-dest308:                                   ; preds = %normal-dest301
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %133
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.16"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !136 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.16^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 827), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %13 = insertvalue { {}*, i64 } undef, {}* %12, 0
  %14 = insertvalue { {}*, i64 } %13, i64 1, 1
  ret { {}*, i64 } %14
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.17"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !137 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.17^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 838), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %13 = insertvalue { {}*, i64 } undef, {}* %12, 0
  %14 = insertvalue { {}*, i64 } %13, i64 1, 1
  ret { {}*, i64 } %14
}

; Function Attrs: uwtable
define internal void @RUN-ALL.18() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !138 {
entry:
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"str-*MAKE-SPECIAL", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-CORE, i64 0, i64 0))
  %"CONTAB[3]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 3), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 2, {}* %"CONTAB[3]*")
  %"CONTAB[1]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 1), align 8
  %"CONTAB[2]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 0, {}* %"CONTAB[1]*", {}* %"CONTAB[2]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-YAS_GEMEINDE, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-COMMON-LISP-USER, i64 0, i64 0))
  %"CONTAB[7]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 7), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 6, {}* %"CONTAB[7]*")
  %"CONTAB[5]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 5), align 8
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 4, {}* %"CONTAB[5]*", {}* %"CONTAB[6]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-BOUNDP, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-COMMON-LISP, i64 0, i64 0))
  %"CONTAB[11]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 11), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 10, {}* %"CONTAB[11]*")
  %"CONTAB[9]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 9), align 8
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 8, {}* %"CONTAB[9]*", {}* %"CONTAB[10]*")
  tail call void @ltvc_make_nil({ i8*, i8*, i64 }* nonnull @constants-table, i64 12)
  tail call void @ltvc_make_t({ i8*, i8*, i64 }* nonnull @constants-table, i64 13)
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-META, i64 0, i64 0))
  %"CONTAB[16]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 16), align 16
  %"CONTAB[6]*1" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 15, {}* %"CONTAB[16]*", {}* %"CONTAB[6]*1")
  %"CONTAB[15]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 15), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 14, i64 1, {}* %"CONTAB[15]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 18, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-SET-DOCUMENTATION, i64 0, i64 0))
  %"CONTAB[18]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 18), align 16
  %"CONTAB[2]*2" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 17, {}* %"CONTAB[18]*", {}* %"CONTAB[2]*2")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 20, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-VARIABLE, i64 0, i64 0))
  %"CONTAB[20]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 20), align 16
  %"CONTAB[10]*3" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 19, {}* %"CONTAB[20]*", {}* %"CONTAB[10]*3")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 21, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @"str-Enthaelt alle definierten Objekte", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 23, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-TOP-LEVEL, i64 0, i64 0))
  %"CONTAB[23]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 23), align 8
  %"CONTAB[2]*4" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 22, {}* %"CONTAB[23]*", {}* %"CONTAB[2]*4")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^1^TOP-COMPILE-FILE", i8* getelementptr inbounds ([34 x i8], [34 x i8]* @"str-yas=yasos.lisp^1^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 25, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-YAS_LETZTE_DATEI, i64 0, i64 0))
  %"CONTAB[25]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 25), align 8
  %"CONTAB[6]*5" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 24, {}* %"CONTAB[25]*", {}* %"CONTAB[6]*5")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 26, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @"str-Letzter Wissensbasisname, unter dem gesichert oder geladen wurde", i64 0, i64 0))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^73^TOP-COMPILE-FILE", i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"str-yas=yasos.lisp^73^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 28, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @str-YAS_LETZTE_DATEI_INSTANZEN, i64 0, i64 0))
  %"CONTAB[28]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 28), align 16
  %"CONTAB[6]*6" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 27, {}* %"CONTAB[28]*", {}* %"CONTAB[6]*6")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 29, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @"str-Letzter Wissensbasisname, unter dem gesichert oder geladen wurde", i64 0, i64 0))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^74^TOP-COMPILE-FILE", i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"str-yas=yasos.lisp^74^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 31, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str-YAS_STANDARD_SLOTS, i64 0, i64 0))
  %"CONTAB[31]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 31), align 8
  %"CONTAB[6]*7" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 30, {}* %"CONTAB[31]*", {}* %"CONTAB[6]*7")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 34, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-ALT, i64 0, i64 0))
  %"CONTAB[34]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 34), align 16
  %"CONTAB[6]*8" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 33, {}* %"CONTAB[34]*", {}* %"CONTAB[6]*8")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 36, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-UNTERKLASSE_VON, i64 0, i64 0))
  %"CONTAB[36]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 36), align 16
  %"CONTAB[6]*9" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 35, {}* %"CONTAB[36]*", {}* %"CONTAB[6]*9")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 38, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-INSTANZ_VON, i64 0, i64 0))
  %"CONTAB[38]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 38), align 16
  %"CONTAB[6]*10" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 37, {}* %"CONTAB[38]*", {}* %"CONTAB[6]*10")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 40, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-KINDER, i64 0, i64 0))
  %"CONTAB[40]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 40), align 16
  %"CONTAB[6]*11" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 39, {}* %"CONTAB[40]*", {}* %"CONTAB[6]*11")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 42, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-INFORMANT, i64 0, i64 0))
  %"CONTAB[42]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 42), align 16
  %"CONTAB[6]*12" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 41, {}* %"CONTAB[42]*", {}* %"CONTAB[6]*12")
  %"CONTAB[33]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 33), align 8
  %"CONTAB[35]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 35), align 8
  %"CONTAB[37]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 37), align 8
  %"CONTAB[39]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 39), align 8
  %"CONTAB[41]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 41), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 32, i64 5, {}* %"CONTAB[33]*", {}* %"CONTAB[35]*", {}* %"CONTAB[37]*", {}* %"CONTAB[39]*", {}* %"CONTAB[41]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 44, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-SYMBOL-CONSTANTP, i64 0, i64 0))
  %"CONTAB[44]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 44), align 16
  %"CONTAB[2]*13" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 43, {}* %"CONTAB[44]*", {}* %"CONTAB[2]*13")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 46, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-SPECIALP, i64 0, i64 0))
  %"CONTAB[46]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 46), align 16
  %"CONTAB[2]*14" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 45, {}* %"CONTAB[46]*", {}* %"CONTAB[2]*14")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 48, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-SET, i64 0, i64 0))
  %"CONTAB[48]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 48), align 16
  %"CONTAB[10]*15" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 47, {}* %"CONTAB[48]*", {}* %"CONTAB[10]*15")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 50, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-FUNCTION, i64 0, i64 0))
  %"CONTAB[50]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 50), align 16
  %"CONTAB[10]*16" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 49, {}* %"CONTAB[50]*", {}* %"CONTAB[10]*16")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 52, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-SYMBOL, i64 0, i64 0))
  %"CONTAB[52]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 52), align 16
  %"CONTAB[10]*17" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 51, {}* %"CONTAB[52]*", {}* %"CONTAB[10]*17")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 54, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-SYMBOL-FUNCTION, i64 0, i64 0))
  %"CONTAB[54]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 54), align 16
  %"CONTAB[10]*18" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 53, {}* %"CONTAB[54]*", {}* %"CONTAB[10]*18")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-ERROR, i64 0, i64 0))
  %"CONTAB[56]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 56), align 16
  %"CONTAB[10]*19" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 55, {}* %"CONTAB[56]*", {}* %"CONTAB[10]*19")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 58, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-TYPE-ERROR, i64 0, i64 0))
  %"CONTAB[58]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 58), align 16
  %"CONTAB[10]*20" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 57, {}* %"CONTAB[58]*", {}* %"CONTAB[10]*20")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 60, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-DATUM, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 62, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-KEYWORD, i64 0, i64 0))
  %"CONTAB[62]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 62), align 16
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 61, {}* %"CONTAB[62]*")
  %"CONTAB[60]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 60), align 16
  %"CONTAB[61]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 61), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 59, {}* %"CONTAB[60]*", {}* %"CONTAB[61]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 64, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-EXPECTED-TYPE, i64 0, i64 0))
  %"CONTAB[64]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 64), align 16
  %"CONTAB[61]*21" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 61), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 63, {}* %"CONTAB[64]*", {}* %"CONTAB[61]*21")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 67, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str-OR, i64 0, i64 0))
  %"CONTAB[67]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 67), align 8
  %"CONTAB[10]*22" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 66, {}* %"CONTAB[67]*", {}* %"CONTAB[10]*22")
  %"CONTAB[66]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 65, i64 3, {}* %"CONTAB[66]*", {}* %"CONTAB[51]*", {}* %"CONTAB[49]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 68, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @"str-Cannot redefine special variable ~a as constant", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 70, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-SYMBOL-VALUE, i64 0, i64 0))
  %"CONTAB[70]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 70), align 16
  %"CONTAB[10]*23" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 69, {}* %"CONTAB[70]*", {}* %"CONTAB[10]*23")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 72, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-EQ-INCOMPARABLE, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 74, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-CLASP-CLEAVIR, i64 0, i64 0))
  %"CONTAB[74]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 74), align 16
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 73, {}* %"CONTAB[74]*")
  %"CONTAB[72]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 72), align 16
  %"CONTAB[73]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 73), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 71, {}* %"CONTAB[72]*", {}* %"CONTAB[73]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 76, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-EQL-UNDERLYING, i64 0, i64 0))
  %"CONTAB[76]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 76), align 16
  %"CONTAB[2]*24" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 75, {}* %"CONTAB[76]*", {}* %"CONTAB[2]*24")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^76^TOP-COMPILE-FILE", i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"str-yas=yasos.lisp^76^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 78, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-GANZ_FALSCH, i64 0, i64 0))
  %"CONTAB[78]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 78), align 16
  %"CONTAB[6]*25" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 77, {}* %"CONTAB[78]*", {}* %"CONTAB[6]*25")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 80, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-YAS_UNMOEGLICH, i64 0, i64 0))
  %"CONTAB[80]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 80), align 16
  %"CONTAB[6]*26" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 79, {}* %"CONTAB[80]*", {}* %"CONTAB[6]*26")
  %"CONTAB[66]*27" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*28" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*29" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 81, i64 3, {}* %"CONTAB[66]*27", {}* %"CONTAB[51]*28", {}* %"CONTAB[49]*29")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^79^TOP-COMPILE-FILE", i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"str-yas=yasos.lisp^79^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 83, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-SYMBOL-PLIST, i64 0, i64 0))
  %"CONTAB[83]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 83), align 8
  %"CONTAB[10]*30" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 82, {}* %"CONTAB[83]*", {}* %"CONTAB[10]*30")
  %"CONTAB[66]*31" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*32" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*33" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 84, i64 3, {}* %"CONTAB[66]*31", {}* %"CONTAB[51]*32", {}* %"CONTAB[49]*33")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 86, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-FDEFINITION, i64 0, i64 0))
  %"CONTAB[86]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 86), align 16
  %"CONTAB[10]*34" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 85, {}* %"CONTAB[86]*", {}* %"CONTAB[10]*34")
  %"CONTAB[66]*35" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*36" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*37" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 87, i64 3, {}* %"CONTAB[66]*35", {}* %"CONTAB[51]*36", {}* %"CONTAB[49]*37")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 89, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"str-%SET-SYMBOL-PLIST", i64 0, i64 0))
  %"CONTAB[89]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 89), align 8
  %"CONTAB[6]*38" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 88, {}* %"CONTAB[89]*", {}* %"CONTAB[6]*38")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 91, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-SETF-LAMBDA-LIST, i64 0, i64 0))
  %"CONTAB[91]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 91), align 8
  %"CONTAB[2]*39" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 90, {}* %"CONTAB[91]*", {}* %"CONTAB[2]*39")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 94, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-PLIST, i64 0, i64 0))
  %"CONTAB[94]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 94), align 16
  %"CONTAB[6]*40" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 93, {}* %"CONTAB[94]*", {}* %"CONTAB[6]*40")
  %"CONTAB[51]*41" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[93]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 93), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 92, i64 2, {}* %"CONTAB[51]*41", {}* %"CONTAB[93]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 96, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-SET-SOURCE-INFO, i64 0, i64 0))
  %"CONTAB[96]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 96), align 16
  %"CONTAB[2]*42" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 95, {}* %"CONTAB[96]*", {}* %"CONTAB[2]*42")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 99, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str-CURRENT-SOURCE-FILE, i64 0, i64 0))
  %"CONTAB[99]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 99), align 8
  %"CONTAB[2]*43" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 98, {}* %"CONTAB[99]*", {}* %"CONTAB[2]*43")
  %"CONTAB[98]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 97, i64 4, {}* %"CONTAB[98]*", {}* inttoptr (i64 9548 to {}*), {}* inttoptr (i64 328 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 101, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"str-*CURRENT-FORM-LINENO*", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 103, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-COMPILER, i64 0, i64 0))
  %"CONTAB[103]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 103), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 102, {}* %"CONTAB[103]*")
  %"CONTAB[101]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 101), align 8
  %"CONTAB[102]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 102), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 100, {}* %"CONTAB[101]*", {}* %"CONTAB[102]*")
  %"CONTAB[51]*44" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[93]*45" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 93), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 104, i64 2, {}* %"CONTAB[51]*44", {}* %"CONTAB[93]*45")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^82^TOP-COMPILE-FILE", i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"str-yas=yasos.lisp^82^TOP-COMPILE-FILE", i64 0, i64 0))
  ret void
}

; Function Attrs: nounwind
declare void @ltvc_make_base_string({ i8*, i8*, i64 }*, i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_package({ i8*, i8*, i64 }*, i64, {}*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_symbol({ i8*, i8*, i64 }*, i64, {}*, {}*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_nil({ i8*, i8*, i64 }*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_t({ i8*, i8*, i64 }*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_list({ i8*, i8*, i64 }*, i64, i64, ...) local_unnamed_addr #1

declare void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*) local_unnamed_addr #3

; Function Attrs: uwtable
define internal void @RUN-ALL.19() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !139 {
entry:
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 106, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-GET, i64 0, i64 0))
  %"CONTAB[106]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 106), align 16
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 105, {}* %"CONTAB[106]*", {}* %"CONTAB[10]*")
  %"CONTAB[66]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 107, i64 3, {}* %"CONTAB[66]*", {}* %"CONTAB[51]*", {}* %"CONTAB[49]*")
  %"CONTAB[66]*1" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*2" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*3" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 108, i64 3, {}* %"CONTAB[66]*1", {}* %"CONTAB[51]*2", {}* %"CONTAB[49]*3")
  %"CONTAB[66]*4" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*5" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*6" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 109, i64 3, {}* %"CONTAB[66]*4", {}* %"CONTAB[51]*5", {}* %"CONTAB[49]*6")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 111, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-BACKQUOTE-APPEND, i64 0, i64 0))
  %"CONTAB[111]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 111), align 8
  %"CONTAB[2]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 110, {}* %"CONTAB[111]*", {}* %"CONTAB[2]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 113, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-LIST, i64 0, i64 0))
  %"CONTAB[113]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 113), align 8
  %"CONTAB[10]*7" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 112, {}* %"CONTAB[113]*", {}* %"CONTAB[10]*7")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 115, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-SYSTEM, i64 0, i64 0))
  %"CONTAB[115]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 115), align 8
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 114, {}* %"CONTAB[115]*", {}* %"CONTAB[6]*")
  %"CONTAB[66]*8" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*9" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*10" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 116, i64 3, {}* %"CONTAB[66]*8", {}* %"CONTAB[51]*9", {}* %"CONTAB[49]*10")
  %"CONTAB[66]*11" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*12" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*13" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 117, i64 3, {}* %"CONTAB[66]*11", {}* %"CONTAB[51]*12", {}* %"CONTAB[49]*13")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 119, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"str-YAS=INIT_OBJEKTE", i64 0, i64 0))
  %"CONTAB[119]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 119), align 8
  %"CONTAB[6]*14" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 118, {}* %"CONTAB[119]*", {}* %"CONTAB[6]*14")
  %"CONTAB[98]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 120, i64 4, {}* %"CONTAB[98]*", {}* inttoptr (i64 9892 to {}*), {}* inttoptr (i64 344 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^86^TOP-COMPILE-FILE", i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"str-yas=yasos.lisp^86^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^94^TOP-COMPILE-FILE", i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"str-yas=yasos.lisp^94^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 122, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-FORMAT-ERROR, i64 0, i64 0))
  %"CONTAB[122]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 122), align 16
  %"CONTAB[2]*15" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 121, {}* %"CONTAB[122]*", {}* %"CONTAB[2]*15")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 124, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-COMPLAINT, i64 0, i64 0))
  %"CONTAB[124]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 124), align 16
  %"CONTAB[61]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 61), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 123, {}* %"CONTAB[124]*", {}* %"CONTAB[61]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 125, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"str-Required argument missing", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 127, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-CONTROL-STRING, i64 0, i64 0))
  %"CONTAB[127]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 127), align 8
  %"CONTAB[61]*16" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 61), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 126, {}* %"CONTAB[127]*", {}* %"CONTAB[61]*16")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 128, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @"str-(setf (symbol-plist '~A ) ~%'( ~%", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 130, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-OFFSET, i64 0, i64 0))
  %"CONTAB[130]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 130), align 16
  %"CONTAB[61]*17" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 61), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 129, {}* %"CONTAB[130]*", {}* %"CONTAB[61]*17")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 132, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-WRITE-STRING, i64 0, i64 0))
  %"CONTAB[132]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 132), align 16
  %"CONTAB[10]*18" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 131, {}* %"CONTAB[132]*", {}* %"CONTAB[10]*18")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 133, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"str-(setf (symbol-plist '", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 135, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-PRINC, i64 0, i64 0))
  %"CONTAB[135]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 135), align 8
  %"CONTAB[10]*19" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 134, {}* %"CONTAB[135]*", {}* %"CONTAB[10]*19")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 136, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"str- ) ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 138, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-TERPRI, i64 0, i64 0))
  %"CONTAB[138]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 138), align 16
  %"CONTAB[10]*20" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 137, {}* %"CONTAB[138]*", {}* %"CONTAB[10]*20")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 139, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"str-'( ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 141, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-STRINGP, i64 0, i64 0))
  %"CONTAB[141]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 141), align 8
  %"CONTAB[10]*21" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 140, {}* %"CONTAB[141]*", {}* %"CONTAB[10]*21")
  %"CONTAB[66]*22" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*23" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*24" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 142, i64 3, {}* %"CONTAB[66]*22", {}* %"CONTAB[51]*23", {}* %"CONTAB[49]*24")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 144, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str-MAKE-STRING-OUTPUT-STREAM-FROM-STRING, i64 0, i64 0))
  %"CONTAB[144]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 144), align 16
  %"CONTAB[2]*25" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 143, {}* %"CONTAB[144]*", {}* %"CONTAB[2]*25")
  %"CONTAB[66]*26" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*27" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*28" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 145, i64 3, {}* %"CONTAB[66]*26", {}* %"CONTAB[51]*27", {}* %"CONTAB[49]*28")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 147, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str-MAKE-STRING-OUTPUT-STREAM, i64 0, i64 0))
  %"CONTAB[147]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 147), align 8
  %"CONTAB[10]*29" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 146, {}* %"CONTAB[147]*", {}* %"CONTAB[10]*29")
  %"CONTAB[66]*30" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*31" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*32" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 148, i64 3, {}* %"CONTAB[66]*30", {}* %"CONTAB[51]*31", {}* %"CONTAB[49]*32")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 150, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str-GET-OUTPUT-STREAM-STRING, i64 0, i64 0))
  %"CONTAB[150]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 150), align 16
  %"CONTAB[10]*33" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 149, {}* %"CONTAB[150]*", {}* %"CONTAB[10]*33")
  %"CONTAB[66]*34" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*35" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*36" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 151, i64 3, {}* %"CONTAB[66]*34", {}* %"CONTAB[51]*35", {}* %"CONTAB[49]*36")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 153, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"str-*STANDARD-OUTPUT*", i64 0, i64 0))
  %"CONTAB[153]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 153), align 8
  %"CONTAB[10]*37" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 152, {}* %"CONTAB[153]*", {}* %"CONTAB[10]*37")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 154, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"str-~a ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 155, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  %"CONTAB[66]*38" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*39" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*40" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 156, i64 3, {}* %"CONTAB[66]*38", {}* %"CONTAB[51]*39", {}* %"CONTAB[49]*40")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 158, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-CONS, i64 0, i64 0))
  %"CONTAB[158]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 158), align 16
  %"CONTAB[10]*41" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 157, {}* %"CONTAB[158]*", {}* %"CONTAB[10]*41")
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @RUN-ALL.20() #5 personality i32 (...)* @__gxx_personality_v0 !dbg !140 {
entry:
  %"CONTAB[66]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 159, i64 3, {}* %"CONTAB[66]*", {}* %"CONTAB[51]*", {}* %"CONTAB[49]*")
  %"CONTAB[66]*1" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*2" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*3" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 160, i64 3, {}* %"CONTAB[66]*1", {}* %"CONTAB[51]*2", {}* %"CONTAB[49]*3")
  %"CONTAB[66]*4" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*5" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*6" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 161, i64 3, {}* %"CONTAB[66]*4", {}* %"CONTAB[51]*5", {}* %"CONTAB[49]*6")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 163, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-COMPILED-FUNCTION, i64 0, i64 0))
  %"CONTAB[163]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 163), align 8
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 162, {}* %"CONTAB[163]*", {}* %"CONTAB[10]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 165, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-LISTP, i64 0, i64 0))
  %"CONTAB[165]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 165), align 8
  %"CONTAB[10]*7" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 164, {}* %"CONTAB[165]*", {}* %"CONTAB[10]*7")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 167, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-VECTOR, i64 0, i64 0))
  %"CONTAB[167]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 167), align 8
  %"CONTAB[10]*8" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 166, {}* %"CONTAB[167]*", {}* %"CONTAB[10]*8")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 169, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-NULL, i64 0, i64 0))
  %"CONTAB[169]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 169), align 8
  %"CONTAB[10]*9" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 168, {}* %"CONTAB[169]*", {}* %"CONTAB[10]*9")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 171, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-ETYPECASE-ERROR, i64 0, i64 0))
  %"CONTAB[171]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 171), align 8
  %"CONTAB[2]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 170, {}* %"CONTAB[171]*", {}* %"CONTAB[2]*")
  %"CONTAB[157]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 157), align 8
  %"CONTAB[166]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 166), align 16
  %"CONTAB[168]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 168), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 172, i64 3, {}* %"CONTAB[157]*", {}* %"CONTAB[166]*", {}* %"CONTAB[168]*")
  %"CONTAB[157]*10" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 157), align 8
  %"CONTAB[168]*11" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 168), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 173, i64 2, {}* %"CONTAB[157]*10", {}* %"CONTAB[168]*11")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 175, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-FIXNUM, i64 0, i64 0))
  %"CONTAB[175]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 175), align 8
  %"CONTAB[10]*12" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 174, {}* %"CONTAB[175]*", {}* %"CONTAB[10]*12")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 177, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-SINGLE-FLOAT, i64 0, i64 0))
  %"CONTAB[177]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 177), align 8
  %"CONTAB[10]*13" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 176, {}* %"CONTAB[177]*", {}* %"CONTAB[10]*13")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 179, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-DOUBLE-FLOAT, i64 0, i64 0))
  %"CONTAB[179]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 179), align 8
  %"CONTAB[10]*14" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 178, {}* %"CONTAB[179]*", {}* %"CONTAB[10]*14")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 181, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @str-CONVERT-OVERFLOW-RESULT-TO-BIGNUM, i64 0, i64 0))
  %"CONTAB[181]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 181), align 8
  %"CONTAB[2]*15" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 180, {}* %"CONTAB[181]*", {}* %"CONTAB[2]*15")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 183, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-TWO-ARG-+", i64 0, i64 0))
  %"CONTAB[183]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 183), align 8
  %"CONTAB[2]*16" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 182, {}* %"CONTAB[183]*", {}* %"CONTAB[2]*16")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 185, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-TWO-ARG->", i64 0, i64 0))
  %"CONTAB[185]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 185), align 8
  %"CONTAB[2]*17" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 184, {}* %"CONTAB[185]*", {}* %"CONTAB[2]*17")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 186, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"str-~A", i64 0, i64 0))
  %"CONTAB[66]*18" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*19" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*20" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 187, i64 3, {}* %"CONTAB[66]*18", {}* %"CONTAB[51]*19", {}* %"CONTAB[49]*20")
  %"CONTAB[66]*21" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*22" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*23" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 188, i64 3, {}* %"CONTAB[66]*21", {}* %"CONTAB[51]*22", {}* %"CONTAB[49]*23")
  %"CONTAB[66]*24" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*25" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*26" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 189, i64 3, {}* %"CONTAB[66]*24", {}* %"CONTAB[51]*25", {}* %"CONTAB[49]*26")
  %"CONTAB[66]*27" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*28" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*29" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 190, i64 3, {}* %"CONTAB[66]*27", {}* %"CONTAB[51]*28", {}* %"CONTAB[49]*29")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 192, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-PPRINT, i64 0, i64 0))
  %"CONTAB[192]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 192), align 16
  %"CONTAB[10]*30" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 191, {}* %"CONTAB[192]*", {}* %"CONTAB[10]*30")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 193, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"str-~A", i64 0, i64 0))
  %"CONTAB[66]*31" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*32" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*33" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 194, i64 3, {}* %"CONTAB[66]*31", {}* %"CONTAB[51]*32", {}* %"CONTAB[49]*33")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 196, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str-YAS_COMPILIERTE_FUNKTION, i64 0, i64 0))
  %"CONTAB[196]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 196), align 16
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 195, {}* %"CONTAB[196]*", {}* %"CONTAB[6]*")
  %"CONTAB[66]*34" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*35" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*36" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 197, i64 3, {}* %"CONTAB[66]*34", {}* %"CONTAB[51]*35", {}* %"CONTAB[49]*36")
  %"CONTAB[66]*37" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*38" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*39" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 198, i64 3, {}* %"CONTAB[66]*37", {}* %"CONTAB[51]*38", {}* %"CONTAB[49]*39")
  %"CONTAB[66]*40" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*41" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*42" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 199, i64 3, {}* %"CONTAB[66]*40", {}* %"CONTAB[51]*41", {}* %"CONTAB[49]*42")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 200, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"str- \22~A\22", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 201, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"str- \22", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 202, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str-\22", i64 0, i64 0))
  %"CONTAB[66]*43" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*44" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*45" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 203, i64 3, {}* %"CONTAB[66]*43", {}* %"CONTAB[51]*44", {}* %"CONTAB[49]*45")
  %"CONTAB[66]*46" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*47" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*48" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 204, i64 3, {}* %"CONTAB[66]*46", {}* %"CONTAB[51]*47", {}* %"CONTAB[49]*48")
  %"CONTAB[66]*49" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*50" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*51" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 205, i64 3, {}* %"CONTAB[66]*49", {}* %"CONTAB[51]*50", {}* %"CONTAB[49]*51")
  %"CONTAB[66]*52" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*53" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*54" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 206, i64 3, {}* %"CONTAB[66]*52", {}* %"CONTAB[51]*53", {}* %"CONTAB[49]*54")
  %"CONTAB[66]*55" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*56" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*57" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 207, i64 3, {}* %"CONTAB[66]*55", {}* %"CONTAB[51]*56", {}* %"CONTAB[49]*57")
  %"CONTAB[66]*58" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*59" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*60" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 208, i64 3, {}* %"CONTAB[66]*58", {}* %"CONTAB[51]*59", {}* %"CONTAB[49]*60")
  %"CONTAB[66]*61" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*62" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*63" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 209, i64 3, {}* %"CONTAB[66]*61", {}* %"CONTAB[51]*62", {}* %"CONTAB[49]*63")
  %"CONTAB[66]*64" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*65" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*66" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 210, i64 3, {}* %"CONTAB[66]*64", {}* %"CONTAB[51]*65", {}* %"CONTAB[49]*66")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 211, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"str- )", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 212, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"str-) ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 213, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  %"CONTAB[66]*67" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*68" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*69" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 214, i64 3, {}* %"CONTAB[66]*67", {}* %"CONTAB[51]*68", {}* %"CONTAB[49]*69")
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.21() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !141 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.19)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.20)
  ret void
}

declare void @cc_invoke_sub_run_all_function(void ()*) local_unnamed_addr #3

; Function Attrs: uwtable
define internal void @RUN-ALL.22() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !142 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.18)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.21)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @RUN-ALL.23() #5 personality i32 (...)* @__gxx_personality_v0 !dbg !143 {
entry:
  %"CONTAB[66]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 215, i64 3, {}* %"CONTAB[66]*", {}* %"CONTAB[51]*", {}* %"CONTAB[49]*")
  %"CONTAB[66]*1" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*2" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*3" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 216, i64 3, {}* %"CONTAB[66]*1", {}* %"CONTAB[51]*2", {}* %"CONTAB[49]*3")
  %"CONTAB[66]*4" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*5" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*6" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 217, i64 3, {}* %"CONTAB[66]*4", {}* %"CONTAB[51]*5", {}* %"CONTAB[49]*6")
  %"CONTAB[66]*7" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*8" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*9" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 218, i64 3, {}* %"CONTAB[66]*7", {}* %"CONTAB[51]*8", {}* %"CONTAB[49]*9")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 220, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @str-YAS-AUSGABE_EIN_OBJEKT, i64 0, i64 0))
  %"CONTAB[220]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 220), align 16
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 219, {}* %"CONTAB[220]*", {}* %"CONTAB[6]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 223, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-OBJEKT, i64 0, i64 0))
  %"CONTAB[223]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 223), align 8
  %"CONTAB[6]*10" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 222, {}* %"CONTAB[223]*", {}* %"CONTAB[6]*10")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 225, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-&OPTIONAL", i64 0, i64 0))
  %"CONTAB[225]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 225), align 8
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 224, {}* %"CONTAB[225]*", {}* %"CONTAB[10]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 228, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-STREAM, i64 0, i64 0))
  %"CONTAB[228]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 228), align 16
  %"CONTAB[10]*11" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 227, {}* %"CONTAB[228]*", {}* %"CONTAB[10]*11")
  %"CONTAB[227]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 227), align 8
  %"CONTAB[13]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 226, i64 2, {}* %"CONTAB[227]*", {}* %"CONTAB[13]*")
  %"CONTAB[222]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[224]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 224), align 16
  %"CONTAB[226]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 226), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 221, i64 3, {}* %"CONTAB[222]*", {}* %"CONTAB[224]*", {}* %"CONTAB[226]*")
  %"CONTAB[98]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 229, i64 4, {}* %"CONTAB[98]*", {}* inttoptr (i64 14936 to {}*), {}* inttoptr (i64 480 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 231, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str-COMPILED-FUNCTION-P, i64 0, i64 0))
  %"CONTAB[231]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 231), align 8
  %"CONTAB[10]*12" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 230, {}* %"CONTAB[231]*", {}* %"CONTAB[10]*12")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 233, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-ARRAY-RANK, i64 0, i64 0))
  %"CONTAB[233]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 233), align 8
  %"CONTAB[10]*13" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 232, {}* %"CONTAB[233]*", {}* %"CONTAB[10]*13")
  %"CONTAB[227]*14" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 227), align 8
  %"CONTAB[13]*15" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 235, i64 2, {}* %"CONTAB[227]*14", {}* %"CONTAB[13]*15")
  %"CONTAB[222]*16" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[224]*17" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 224), align 16
  %"CONTAB[235]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 235), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 234, i64 3, {}* %"CONTAB[222]*16", {}* %"CONTAB[224]*17", {}* %"CONTAB[235]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 237, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-LAMBDA, i64 0, i64 0))
  %"CONTAB[237]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 237), align 8
  %"CONTAB[10]*18" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 236, {}* %"CONTAB[237]*", {}* %"CONTAB[10]*18")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 241, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-146760, i64 0, i64 0))
  %"CONTAB[241]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 241), align 8
  %"CONTAB[12]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 240, {}* %"CONTAB[241]*", {}* %"CONTAB[12]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 245, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-QUOTE, i64 0, i64 0))
  %"CONTAB[245]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 245), align 8
  %"CONTAB[10]*19" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 244, {}* %"CONTAB[245]*", {}* %"CONTAB[10]*19")
  %"CONTAB[244]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 244), align 16
  %"CONTAB[121]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 243, i64 2, {}* %"CONTAB[244]*", {}* %"CONTAB[121]*")
  %"CONTAB[55]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %"CONTAB[243]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 243), align 8
  %"CONTAB[123]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %"CONTAB[125]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %"CONTAB[126]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %"CONTAB[128]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 128), align 16
  %"CONTAB[129]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 242, i64 8, {}* %"CONTAB[55]*", {}* %"CONTAB[243]*", {}* %"CONTAB[123]*", {}* %"CONTAB[125]*", {}* %"CONTAB[126]*", {}* %"CONTAB[128]*", {}* %"CONTAB[129]*", {}* inttoptr (i64 88 to {}*))
  %"CONTAB[240]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 240), align 16
  %"CONTAB[242]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 242), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 239, i64 2, {}* %"CONTAB[240]*", {}* %"CONTAB[242]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 247, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"str-&REST", i64 0, i64 0))
  %"CONTAB[247]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 247), align 8
  %"CONTAB[10]*20" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 246, {}* %"CONTAB[247]*", {}* %"CONTAB[10]*20")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 249, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-ARGS, i64 0, i64 0))
  %"CONTAB[249]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 249), align 8
  %"CONTAB[2]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 248, {}* %"CONTAB[249]*", {}* %"CONTAB[2]*")
  %"CONTAB[227]*21" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 227), align 8
  %"CONTAB[224]*22" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 224), align 16
  %"CONTAB[239]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 239), align 8
  %"CONTAB[246]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 246), align 16
  %"CONTAB[248]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 248), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 238, i64 5, {}* %"CONTAB[227]*21", {}* %"CONTAB[224]*22", {}* %"CONTAB[239]*", {}* %"CONTAB[246]*", {}* %"CONTAB[248]*")
  %"CONTAB[227]*23" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 227), align 8
  %"CONTAB[224]*24" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 224), align 16
  %"CONTAB[246]*25" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 246), align 16
  %"CONTAB[248]*26" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 248), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 250, i64 4, {}* %"CONTAB[227]*23", {}* %"CONTAB[224]*24", {}* %"CONTAB[246]*25", {}* %"CONTAB[248]*26")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 254, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-146814, i64 0, i64 0))
  %"CONTAB[254]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 254), align 16
  %"CONTAB[12]*27" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 253, {}* %"CONTAB[254]*", {}* %"CONTAB[12]*27")
  %"CONTAB[244]*28" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 244), align 16
  %"CONTAB[121]*29" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 256, i64 2, {}* %"CONTAB[244]*28", {}* %"CONTAB[121]*29")
  %"CONTAB[55]*30" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %"CONTAB[256]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 256), align 16
  %"CONTAB[123]*31" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %"CONTAB[125]*32" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %"CONTAB[126]*33" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %"CONTAB[193]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 193), align 8
  %"CONTAB[129]*34" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 255, i64 8, {}* %"CONTAB[55]*30", {}* %"CONTAB[256]*", {}* %"CONTAB[123]*31", {}* %"CONTAB[125]*32", {}* %"CONTAB[126]*33", {}* %"CONTAB[193]*", {}* %"CONTAB[129]*34", {}* inttoptr (i64 4 to {}*))
  %"CONTAB[253]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 253), align 8
  %"CONTAB[255]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 255), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 252, i64 2, {}* %"CONTAB[253]*", {}* %"CONTAB[255]*")
  %"CONTAB[227]*35" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 227), align 8
  %"CONTAB[224]*36" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 224), align 16
  %"CONTAB[252]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 252), align 16
  %"CONTAB[246]*37" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 246), align 16
  %"CONTAB[248]*38" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 248), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 251, i64 5, {}* %"CONTAB[227]*35", {}* %"CONTAB[224]*36", {}* %"CONTAB[252]*", {}* %"CONTAB[246]*37", {}* %"CONTAB[248]*38")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 260, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-146780, i64 0, i64 0))
  %"CONTAB[260]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 260), align 16
  %"CONTAB[12]*39" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 259, {}* %"CONTAB[260]*", {}* %"CONTAB[12]*39")
  %"CONTAB[244]*40" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 244), align 16
  %"CONTAB[121]*41" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 262, i64 2, {}* %"CONTAB[244]*40", {}* %"CONTAB[121]*41")
  %"CONTAB[55]*42" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %"CONTAB[262]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 262), align 16
  %"CONTAB[123]*43" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %"CONTAB[125]*44" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %"CONTAB[126]*45" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %"CONTAB[154]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 154), align 16
  %"CONTAB[129]*46" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 261, i64 8, {}* %"CONTAB[55]*42", {}* %"CONTAB[262]*", {}* %"CONTAB[123]*43", {}* %"CONTAB[125]*44", {}* %"CONTAB[126]*45", {}* %"CONTAB[154]*", {}* %"CONTAB[129]*46", {}* inttoptr (i64 4 to {}*))
  %"CONTAB[259]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 259), align 8
  %"CONTAB[261]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 261), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 258, i64 2, {}* %"CONTAB[259]*", {}* %"CONTAB[261]*")
  %"CONTAB[227]*47" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 227), align 8
  %"CONTAB[224]*48" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 224), align 16
  %"CONTAB[258]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 258), align 16
  %"CONTAB[246]*49" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 246), align 16
  %"CONTAB[248]*50" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 248), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 257, i64 5, {}* %"CONTAB[227]*47", {}* %"CONTAB[224]*48", {}* %"CONTAB[258]*", {}* %"CONTAB[246]*49", {}* %"CONTAB[248]*50")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 266, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-146797, i64 0, i64 0))
  %"CONTAB[266]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 266), align 16
  %"CONTAB[12]*51" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 265, {}* %"CONTAB[266]*", {}* %"CONTAB[12]*51")
  %"CONTAB[244]*52" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 244), align 16
  %"CONTAB[121]*53" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 268, i64 2, {}* %"CONTAB[244]*52", {}* %"CONTAB[121]*53")
  %"CONTAB[55]*54" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %"CONTAB[268]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 268), align 16
  %"CONTAB[123]*55" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %"CONTAB[125]*56" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %"CONTAB[126]*57" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %"CONTAB[200]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 200), align 16
  %"CONTAB[129]*58" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 267, i64 8, {}* %"CONTAB[55]*54", {}* %"CONTAB[268]*", {}* %"CONTAB[123]*55", {}* %"CONTAB[125]*56", {}* %"CONTAB[126]*57", {}* %"CONTAB[200]*", {}* %"CONTAB[129]*58", {}* inttoptr (i64 12 to {}*))
  %"CONTAB[265]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 265), align 8
  %"CONTAB[267]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 267), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 264, i64 2, {}* %"CONTAB[265]*", {}* %"CONTAB[267]*")
  %"CONTAB[227]*59" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 227), align 8
  %"CONTAB[224]*60" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 224), align 16
  %"CONTAB[264]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 264), align 16
  %"CONTAB[246]*61" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 246), align 16
  %"CONTAB[248]*62" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 248), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 263, i64 5, {}* %"CONTAB[227]*59", {}* %"CONTAB[224]*60", {}* %"CONTAB[264]*", {}* %"CONTAB[246]*61", {}* %"CONTAB[248]*62")
  %"CONTAB[227]*63" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 227), align 8
  %"CONTAB[224]*64" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 224), align 16
  %"CONTAB[246]*65" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 246), align 16
  %"CONTAB[248]*66" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 248), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 269, i64 4, {}* %"CONTAB[227]*63", {}* %"CONTAB[224]*64", {}* %"CONTAB[246]*65", {}* %"CONTAB[248]*66")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 273, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-146831, i64 0, i64 0))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.24() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !144 {
entry:
  %"CONTAB[273]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 273), align 8
  %"CONTAB[12]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 272, {}* %"CONTAB[273]*", {}* %"CONTAB[12]*")
  %"CONTAB[244]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 244), align 16
  %"CONTAB[121]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 275, i64 2, {}* %"CONTAB[244]*", {}* %"CONTAB[121]*")
  %"CONTAB[55]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %"CONTAB[275]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 275), align 8
  %"CONTAB[123]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %"CONTAB[125]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %"CONTAB[126]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %"CONTAB[186]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 186), align 16
  %"CONTAB[129]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 274, i64 8, {}* %"CONTAB[55]*", {}* %"CONTAB[275]*", {}* %"CONTAB[123]*", {}* %"CONTAB[125]*", {}* %"CONTAB[126]*", {}* %"CONTAB[186]*", {}* %"CONTAB[129]*", {}* inttoptr (i64 4 to {}*))
  %"CONTAB[272]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 272), align 16
  %"CONTAB[274]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 274), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 271, i64 2, {}* %"CONTAB[272]*", {}* %"CONTAB[274]*")
  %"CONTAB[227]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 227), align 8
  %"CONTAB[224]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 224), align 16
  %"CONTAB[271]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 271), align 8
  %"CONTAB[246]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 246), align 16
  %"CONTAB[248]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 248), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 270, i64 5, {}* %"CONTAB[227]*", {}* %"CONTAB[224]*", {}* %"CONTAB[271]*", {}* %"CONTAB[246]*", {}* %"CONTAB[248]*")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^96^TOP-COMPILE-FILE", i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"str-yas=yasos.lisp^96^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[66]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 276, i64 3, {}* %"CONTAB[66]*", {}* %"CONTAB[51]*", {}* %"CONTAB[49]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 278, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str-YAS-SPEICHER_EIN_OBJEKT, i64 0, i64 0))
  %"CONTAB[278]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 278), align 16
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 277, {}* %"CONTAB[278]*", {}* %"CONTAB[6]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 280, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-STREAM, i64 0, i64 0))
  %"CONTAB[280]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 280), align 16
  %"CONTAB[61]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 61), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 279, {}* %"CONTAB[280]*", {}* %"CONTAB[61]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 282, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"str-YAS=EINE_KLASSE_P", i64 0, i64 0))
  %"CONTAB[282]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 282), align 16
  %"CONTAB[6]*1" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 281, {}* %"CONTAB[282]*", {}* %"CONTAB[6]*1")
  %"CONTAB[66]*2" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*3" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*4" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 283, i64 3, {}* %"CONTAB[66]*2", {}* %"CONTAB[51]*3", {}* %"CONTAB[49]*4")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 285, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"str-YAS=LESE_WERT", i64 0, i64 0))
  %"CONTAB[285]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 285), align 8
  %"CONTAB[6]*5" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 284, {}* %"CONTAB[285]*", {}* %"CONTAB[6]*5")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 287, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str-YAS-SPEICHER_NACH_UNTEN, i64 0, i64 0))
  %"CONTAB[287]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 287), align 8
  %"CONTAB[6]*6" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 286, {}* %"CONTAB[287]*", {}* %"CONTAB[6]*6")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 289, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-AUSNAHMEBEDINGUNG, i64 0, i64 0))
  %"CONTAB[289]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 289), align 8
  %"CONTAB[61]*7" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 61), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 288, {}* %"CONTAB[289]*", {}* %"CONTAB[61]*7")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 291, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-F-NICHT_SPEICHERN, i64 0, i64 0))
  %"CONTAB[291]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 291), align 8
  %"CONTAB[61]*8" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 61), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 290, {}* %"CONTAB[291]*", {}* %"CONTAB[61]*8")
  %"CONTAB[66]*9" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*10" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*11" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 292, i64 3, {}* %"CONTAB[66]*9", {}* %"CONTAB[51]*10", {}* %"CONTAB[49]*11")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 295, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"str-&KEY", i64 0, i64 0))
  %"CONTAB[295]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 295), align 8
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 294, {}* %"CONTAB[295]*", {}* %"CONTAB[10]*")
  %"CONTAB[227]*12" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 227), align 8
  %"CONTAB[13]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 296, i64 2, {}* %"CONTAB[227]*12", {}* %"CONTAB[13]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 298, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-AUSNAHMEBEDINGUNG, i64 0, i64 0))
  %"CONTAB[298]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 298), align 16
  %"CONTAB[6]*13" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 297, {}* %"CONTAB[298]*", {}* %"CONTAB[6]*13")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 300, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-F-NICHT_SPEICHERN, i64 0, i64 0))
  %"CONTAB[300]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 300), align 16
  %"CONTAB[6]*14" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 299, {}* %"CONTAB[300]*", {}* %"CONTAB[6]*14")
  %"CONTAB[222]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[294]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 294), align 16
  %"CONTAB[296]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 296), align 16
  %"CONTAB[297]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 297), align 8
  %"CONTAB[299]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 299), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 293, i64 5, {}* %"CONTAB[222]*", {}* %"CONTAB[294]*", {}* %"CONTAB[296]*", {}* %"CONTAB[297]*", {}* %"CONTAB[299]*")
  %"CONTAB[98]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 301, i64 4, {}* %"CONTAB[98]*", {}* inttoptr (i64 24984 to {}*), {}* inttoptr (i64 748 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[227]*15" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 227), align 8
  %"CONTAB[13]*16" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 303, i64 2, {}* %"CONTAB[227]*15", {}* %"CONTAB[13]*16")
  %"CONTAB[222]*17" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[294]*18" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 294), align 16
  %"CONTAB[303]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 303), align 8
  %"CONTAB[297]*19" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 297), align 8
  %"CONTAB[299]*20" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 299), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 302, i64 5, {}* %"CONTAB[222]*17", {}* %"CONTAB[294]*18", {}* %"CONTAB[303]*", {}* %"CONTAB[297]*19", {}* %"CONTAB[299]*20")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 305, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-ALLOW-OTHER-KEYS, i64 0, i64 0))
  %"CONTAB[305]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 305), align 8
  %"CONTAB[61]*21" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 61), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 304, {}* %"CONTAB[305]*", {}* %"CONTAB[61]*21")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^144^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^144^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 306, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"str-~A ~%", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 307, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  %"CONTAB[66]*22" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*23" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*24" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 308, i64 3, {}* %"CONTAB[66]*22", {}* %"CONTAB[51]*23", {}* %"CONTAB[49]*24")
  %"CONTAB[66]*25" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*26" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*27" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 309, i64 3, {}* %"CONTAB[66]*25", {}* %"CONTAB[51]*26", {}* %"CONTAB[49]*27")
  %"CONTAB[66]*28" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*29" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*30" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 310, i64 3, {}* %"CONTAB[66]*28", {}* %"CONTAB[51]*29", {}* %"CONTAB[49]*30")
  %"CONTAB[66]*31" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*32" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*33" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 311, i64 3, {}* %"CONTAB[66]*31", {}* %"CONTAB[51]*32", {}* %"CONTAB[49]*33")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 313, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"str-YAS=EINE_INSTANZ_P", i64 0, i64 0))
  %"CONTAB[313]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 313), align 8
  %"CONTAB[6]*34" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 312, {}* %"CONTAB[313]*", {}* %"CONTAB[6]*34")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 314, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @"str-~A ~A ~%", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 315, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 316, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  %"CONTAB[66]*35" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*36" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*37" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 317, i64 3, {}* %"CONTAB[66]*35", {}* %"CONTAB[51]*36", {}* %"CONTAB[49]*37")
  %"CONTAB[66]*38" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*39" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*40" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 318, i64 3, {}* %"CONTAB[66]*38", {}* %"CONTAB[51]*39", {}* %"CONTAB[49]*40")
  %"CONTAB[66]*41" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*42" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*43" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 319, i64 3, {}* %"CONTAB[66]*41", {}* %"CONTAB[51]*42", {}* %"CONTAB[49]*43")
  %"CONTAB[66]*44" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*45" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*46" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 320, i64 3, {}* %"CONTAB[66]*44", {}* %"CONTAB[51]*45", {}* %"CONTAB[49]*46")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 321, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @"str-~A ~A ~%", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 322, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 323, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  %"CONTAB[66]*47" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*48" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*49" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 324, i64 3, {}* %"CONTAB[66]*47", {}* %"CONTAB[51]*48", {}* %"CONTAB[49]*49")
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.25() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !145 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.23)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.24)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @RUN-ALL.26() #5 personality i32 (...)* @__gxx_personality_v0 !dbg !146 {
entry:
  %"CONTAB[66]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 325, i64 3, {}* %"CONTAB[66]*", {}* %"CONTAB[51]*", {}* %"CONTAB[49]*")
  %"CONTAB[66]*1" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*2" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*3" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 326, i64 3, {}* %"CONTAB[66]*1", {}* %"CONTAB[51]*2", {}* %"CONTAB[49]*3")
  %"CONTAB[66]*4" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*5" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*6" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 327, i64 3, {}* %"CONTAB[66]*4", {}* %"CONTAB[51]*5", {}* %"CONTAB[49]*6")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 329, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"str-YAS=ALLE_SLOTS", i64 0, i64 0))
  %"CONTAB[329]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 329), align 8
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 328, {}* %"CONTAB[329]*", {}* %"CONTAB[6]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 331, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-EQUAL, i64 0, i64 0))
  %"CONTAB[331]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 331), align 8
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 330, {}* %"CONTAB[331]*", {}* %"CONTAB[10]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 333, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"str-YAS=LESE_INFORMANT", i64 0, i64 0))
  %"CONTAB[333]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 333), align 8
  %"CONTAB[6]*7" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 332, {}* %"CONTAB[333]*", {}* %"CONTAB[6]*7")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 335, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-EINGABE, i64 0, i64 0))
  %"CONTAB[335]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 335), align 8
  %"CONTAB[6]*8" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 334, {}* %"CONTAB[335]*", {}* %"CONTAB[6]*8")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 337, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-STANDARD-OBJECT, i64 0, i64 0))
  %"CONTAB[337]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 337), align 8
  %"CONTAB[10]*9" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 336, {}* %"CONTAB[337]*", {}* %"CONTAB[10]*9")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 338, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @"str-~s ~s ~%", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 340, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-PRIN1, i64 0, i64 0))
  %"CONTAB[340]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 340), align 16
  %"CONTAB[10]*10" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 339, {}* %"CONTAB[340]*", {}* %"CONTAB[10]*10")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 341, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 342, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  %"CONTAB[66]*11" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*12" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*13" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 343, i64 3, {}* %"CONTAB[66]*11", {}* %"CONTAB[51]*12", {}* %"CONTAB[49]*13")
  %"CONTAB[66]*14" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*15" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*16" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 344, i64 3, {}* %"CONTAB[66]*14", {}* %"CONTAB[51]*15", {}* %"CONTAB[49]*16")
  %"CONTAB[66]*17" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*18" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*19" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 345, i64 3, {}* %"CONTAB[66]*17", {}* %"CONTAB[51]*18", {}* %"CONTAB[49]*19")
  %"CONTAB[66]*20" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*21" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*22" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 346, i64 3, {}* %"CONTAB[66]*20", {}* %"CONTAB[51]*21", {}* %"CONTAB[49]*22")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 347, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"str-~s ~s~%", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 348, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  %"CONTAB[66]*23" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*24" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*25" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 349, i64 3, {}* %"CONTAB[66]*23", {}* %"CONTAB[51]*24", {}* %"CONTAB[49]*25")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 350, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @"str-Ein unbekanntes Closobjekt", i64 0, i64 0))
  %"CONTAB[66]*26" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*27" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*28" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 351, i64 3, {}* %"CONTAB[66]*26", {}* %"CONTAB[51]*27", {}* %"CONTAB[49]*28")
  %"CONTAB[66]*29" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*30" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*31" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 352, i64 3, {}* %"CONTAB[66]*29", {}* %"CONTAB[51]*30", {}* %"CONTAB[49]*31")
  %"CONTAB[66]*32" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*33" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*34" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 353, i64 3, {}* %"CONTAB[66]*32", {}* %"CONTAB[51]*33", {}* %"CONTAB[49]*34")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 354, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"str-~s ~a~%", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 355, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  %"CONTAB[66]*35" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*36" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*37" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 356, i64 3, {}* %"CONTAB[66]*35", {}* %"CONTAB[51]*36", {}* %"CONTAB[49]*37")
  %"CONTAB[66]*38" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*39" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*40" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 357, i64 3, {}* %"CONTAB[66]*38", {}* %"CONTAB[51]*39", {}* %"CONTAB[49]*40")
  %"CONTAB[66]*41" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*42" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*43" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 358, i64 3, {}* %"CONTAB[66]*41", {}* %"CONTAB[51]*42", {}* %"CONTAB[49]*43")
  %"CONTAB[66]*44" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*45" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*46" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 359, i64 3, {}* %"CONTAB[66]*44", {}* %"CONTAB[51]*45", {}* %"CONTAB[49]*46")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 360, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"str-~s ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 361, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  %"CONTAB[66]*47" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*48" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*49" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 362, i64 3, {}* %"CONTAB[66]*47", {}* %"CONTAB[51]*48", {}* %"CONTAB[49]*49")
  %"CONTAB[66]*50" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*51" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*52" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 363, i64 3, {}* %"CONTAB[66]*50", {}* %"CONTAB[51]*51", {}* %"CONTAB[49]*52")
  %"CONTAB[66]*53" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*54" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*55" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 364, i64 3, {}* %"CONTAB[66]*53", {}* %"CONTAB[51]*54", {}* %"CONTAB[49]*55")
  %"CONTAB[66]*56" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*57" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*58" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 365, i64 3, {}* %"CONTAB[66]*56", {}* %"CONTAB[51]*57", {}* %"CONTAB[49]*58")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 366, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @"str-~A ~% ~%", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 367, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 368, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  %"CONTAB[66]*59" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*60" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*61" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 369, i64 3, {}* %"CONTAB[66]*59", {}* %"CONTAB[51]*60", {}* %"CONTAB[49]*61")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 371, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-ENDE, i64 0, i64 0))
  %"CONTAB[371]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 371), align 8
  %"CONTAB[6]*62" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 370, {}* %"CONTAB[371]*", {}* %"CONTAB[6]*62")
  %"CONTAB[66]*63" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*64" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*65" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 372, i64 3, {}* %"CONTAB[66]*63", {}* %"CONTAB[51]*64", {}* %"CONTAB[49]*65")
  %"CONTAB[66]*66" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*67" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*68" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 373, i64 3, {}* %"CONTAB[66]*66", {}* %"CONTAB[51]*67", {}* %"CONTAB[49]*68")
  %"CONTAB[66]*69" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*70" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*71" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 374, i64 3, {}* %"CONTAB[66]*69", {}* %"CONTAB[51]*70", {}* %"CONTAB[49]*71")
  %"CONTAB[66]*72" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*73" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*74" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 375, i64 3, {}* %"CONTAB[66]*72", {}* %"CONTAB[51]*73", {}* %"CONTAB[49]*74")
  %"CONTAB[227]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 227), align 8
  %"CONTAB[13]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 377, i64 2, {}* %"CONTAB[227]*", {}* %"CONTAB[13]*")
  %"CONTAB[222]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[294]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 294), align 16
  %"CONTAB[377]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 377), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 376, i64 3, {}* %"CONTAB[222]*", {}* %"CONTAB[294]*", {}* %"CONTAB[377]*")
  %"CONTAB[98]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 378, i64 4, {}* %"CONTAB[98]*", {}* inttoptr (i64 27544 to {}*), {}* inttoptr (i64 804 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 380, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-CLASS-OF, i64 0, i64 0))
  %"CONTAB[380]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 380), align 16
  %"CONTAB[10]*75" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 379, {}* %"CONTAB[380]*", {}* %"CONTAB[10]*75")
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @RUN-ALL.27() #5 personality i32 (...)* @__gxx_personality_v0 !dbg !147 {
entry:
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 382, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-FIND-CLASS, i64 0, i64 0))
  %"CONTAB[382]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 382), align 16
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 381, {}* %"CONTAB[382]*", {}* %"CONTAB[10]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 384, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-SUBCLASSP, i64 0, i64 0))
  %"CONTAB[384]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 384), align 16
  %"CONTAB[2]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 383, {}* %"CONTAB[384]*", {}* %"CONTAB[2]*")
  %"CONTAB[227]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 227), align 8
  %"CONTAB[13]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 13), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 386, i64 2, {}* %"CONTAB[227]*", {}* %"CONTAB[13]*")
  %"CONTAB[222]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[294]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 294), align 16
  %"CONTAB[386]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 386), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 385, i64 3, {}* %"CONTAB[222]*", {}* %"CONTAB[294]*", {}* %"CONTAB[386]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 390, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-148541, i64 0, i64 0))
  %"CONTAB[390]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 390), align 16
  %"CONTAB[12]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 389, {}* %"CONTAB[390]*", {}* %"CONTAB[12]*")
  %"CONTAB[244]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 244), align 16
  %"CONTAB[121]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 392, i64 2, {}* %"CONTAB[244]*", {}* %"CONTAB[121]*")
  %"CONTAB[55]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %"CONTAB[392]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 392), align 16
  %"CONTAB[123]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %"CONTAB[125]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %"CONTAB[126]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %"CONTAB[314]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 314), align 16
  %"CONTAB[129]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 391, i64 8, {}* %"CONTAB[55]*", {}* %"CONTAB[392]*", {}* %"CONTAB[123]*", {}* %"CONTAB[125]*", {}* %"CONTAB[126]*", {}* %"CONTAB[314]*", {}* %"CONTAB[129]*", {}* inttoptr (i64 4 to {}*))
  %"CONTAB[389]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 389), align 8
  %"CONTAB[391]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 391), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 388, i64 2, {}* %"CONTAB[389]*", {}* %"CONTAB[391]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 395, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-148542, i64 0, i64 0))
  %"CONTAB[395]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 395), align 8
  %"CONTAB[12]*1" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 394, {}* %"CONTAB[395]*", {}* %"CONTAB[12]*1")
  %"CONTAB[244]*2" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 244), align 16
  %"CONTAB[121]*3" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 397, i64 2, {}* %"CONTAB[244]*2", {}* %"CONTAB[121]*3")
  %"CONTAB[55]*4" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %"CONTAB[397]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 397), align 8
  %"CONTAB[123]*5" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %"CONTAB[125]*6" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %"CONTAB[126]*7" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %"CONTAB[314]*8" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 314), align 16
  %"CONTAB[129]*9" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 396, i64 8, {}* %"CONTAB[55]*4", {}* %"CONTAB[397]*", {}* %"CONTAB[123]*5", {}* %"CONTAB[125]*6", {}* %"CONTAB[126]*7", {}* %"CONTAB[314]*8", {}* %"CONTAB[129]*9", {}* inttoptr (i64 16 to {}*))
  %"CONTAB[394]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 394), align 16
  %"CONTAB[396]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 396), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 393, i64 2, {}* %"CONTAB[394]*", {}* %"CONTAB[396]*")
  %"CONTAB[227]*10" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 227), align 8
  %"CONTAB[224]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 224), align 16
  %"CONTAB[388]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 388), align 16
  %"CONTAB[393]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 393), align 8
  %"CONTAB[246]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 246), align 16
  %"CONTAB[248]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 248), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 387, i64 6, {}* %"CONTAB[227]*10", {}* %"CONTAB[224]*", {}* %"CONTAB[388]*", {}* %"CONTAB[393]*", {}* %"CONTAB[246]*", {}* %"CONTAB[248]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 401, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-148636, i64 0, i64 0))
  %"CONTAB[401]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 401), align 8
  %"CONTAB[12]*11" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 400, {}* %"CONTAB[401]*", {}* %"CONTAB[12]*11")
  %"CONTAB[244]*12" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 244), align 16
  %"CONTAB[121]*13" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 403, i64 2, {}* %"CONTAB[244]*12", {}* %"CONTAB[121]*13")
  %"CONTAB[55]*14" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %"CONTAB[403]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 403), align 8
  %"CONTAB[123]*15" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %"CONTAB[125]*16" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %"CONTAB[126]*17" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %"CONTAB[366]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 366), align 16
  %"CONTAB[129]*18" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 402, i64 8, {}* %"CONTAB[55]*14", {}* %"CONTAB[403]*", {}* %"CONTAB[123]*15", {}* %"CONTAB[125]*16", {}* %"CONTAB[126]*17", {}* %"CONTAB[366]*", {}* %"CONTAB[129]*18", {}* inttoptr (i64 4 to {}*))
  %"CONTAB[400]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 400), align 16
  %"CONTAB[402]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 402), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 399, i64 2, {}* %"CONTAB[400]*", {}* %"CONTAB[402]*")
  %"CONTAB[227]*19" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 227), align 8
  %"CONTAB[224]*20" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 224), align 16
  %"CONTAB[399]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 399), align 8
  %"CONTAB[246]*21" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 246), align 16
  %"CONTAB[248]*22" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 248), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 398, i64 5, {}* %"CONTAB[227]*19", {}* %"CONTAB[224]*20", {}* %"CONTAB[399]*", {}* %"CONTAB[246]*21", {}* %"CONTAB[248]*22")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 407, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-148505, i64 0, i64 0))
  %"CONTAB[407]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 407), align 8
  %"CONTAB[12]*23" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 406, {}* %"CONTAB[407]*", {}* %"CONTAB[12]*23")
  %"CONTAB[244]*24" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 244), align 16
  %"CONTAB[121]*25" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 409, i64 2, {}* %"CONTAB[244]*24", {}* %"CONTAB[121]*25")
  %"CONTAB[55]*26" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %"CONTAB[409]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 409), align 8
  %"CONTAB[123]*27" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %"CONTAB[125]*28" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %"CONTAB[126]*29" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %"CONTAB[306]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 306), align 16
  %"CONTAB[129]*30" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 408, i64 8, {}* %"CONTAB[55]*26", {}* %"CONTAB[409]*", {}* %"CONTAB[123]*27", {}* %"CONTAB[125]*28", {}* %"CONTAB[126]*29", {}* %"CONTAB[306]*", {}* %"CONTAB[129]*30", {}* inttoptr (i64 4 to {}*))
  %"CONTAB[406]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 406), align 16
  %"CONTAB[408]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 408), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 405, i64 2, {}* %"CONTAB[406]*", {}* %"CONTAB[408]*")
  %"CONTAB[227]*31" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 227), align 8
  %"CONTAB[224]*32" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 224), align 16
  %"CONTAB[405]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 405), align 8
  %"CONTAB[246]*33" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 246), align 16
  %"CONTAB[248]*34" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 248), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 404, i64 5, {}* %"CONTAB[227]*31", {}* %"CONTAB[224]*32", {}* %"CONTAB[405]*", {}* %"CONTAB[246]*33", {}* %"CONTAB[248]*34")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 413, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-148617, i64 0, i64 0))
  %"CONTAB[413]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 413), align 8
  %"CONTAB[12]*35" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 412, {}* %"CONTAB[413]*", {}* %"CONTAB[12]*35")
  %"CONTAB[244]*36" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 244), align 16
  %"CONTAB[121]*37" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 415, i64 2, {}* %"CONTAB[244]*36", {}* %"CONTAB[121]*37")
  %"CONTAB[55]*38" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %"CONTAB[415]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 415), align 8
  %"CONTAB[123]*39" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %"CONTAB[125]*40" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %"CONTAB[126]*41" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %"CONTAB[338]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 338), align 16
  %"CONTAB[129]*42" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 414, i64 8, {}* %"CONTAB[55]*38", {}* %"CONTAB[415]*", {}* %"CONTAB[123]*39", {}* %"CONTAB[125]*40", {}* %"CONTAB[126]*41", {}* %"CONTAB[338]*", {}* %"CONTAB[129]*42", {}* inttoptr (i64 4 to {}*))
  %"CONTAB[412]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 412), align 16
  %"CONTAB[414]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 414), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 411, i64 2, {}* %"CONTAB[412]*", {}* %"CONTAB[414]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 418, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-148618, i64 0, i64 0))
  %"CONTAB[418]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 418), align 16
  %"CONTAB[12]*43" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 417, {}* %"CONTAB[418]*", {}* %"CONTAB[12]*43")
  %"CONTAB[244]*44" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 244), align 16
  %"CONTAB[121]*45" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 420, i64 2, {}* %"CONTAB[244]*44", {}* %"CONTAB[121]*45")
  %"CONTAB[55]*46" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %"CONTAB[420]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 420), align 16
  %"CONTAB[123]*47" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %"CONTAB[125]*48" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %"CONTAB[126]*49" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %"CONTAB[338]*50" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 338), align 16
  %"CONTAB[129]*51" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 419, i64 8, {}* %"CONTAB[55]*46", {}* %"CONTAB[420]*", {}* %"CONTAB[123]*47", {}* %"CONTAB[125]*48", {}* %"CONTAB[126]*49", {}* %"CONTAB[338]*50", {}* %"CONTAB[129]*51", {}* inttoptr (i64 16 to {}*))
  %"CONTAB[417]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 417), align 8
  %"CONTAB[419]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 419), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 416, i64 2, {}* %"CONTAB[417]*", {}* %"CONTAB[419]*")
  %"CONTAB[227]*52" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 227), align 8
  %"CONTAB[224]*53" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 224), align 16
  %"CONTAB[411]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 411), align 8
  %"CONTAB[416]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 416), align 16
  %"CONTAB[246]*54" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 246), align 16
  %"CONTAB[248]*55" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 248), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 410, i64 6, {}* %"CONTAB[227]*52", {}* %"CONTAB[224]*53", {}* %"CONTAB[411]*", {}* %"CONTAB[416]*", {}* %"CONTAB[246]*54", {}* %"CONTAB[248]*55")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 424, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-148598, i64 0, i64 0))
  %"CONTAB[424]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 424), align 16
  %"CONTAB[12]*56" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 423, {}* %"CONTAB[424]*", {}* %"CONTAB[12]*56")
  %"CONTAB[244]*57" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 244), align 16
  %"CONTAB[121]*58" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 426, i64 2, {}* %"CONTAB[244]*57", {}* %"CONTAB[121]*58")
  %"CONTAB[55]*59" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %"CONTAB[426]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 426), align 16
  %"CONTAB[123]*60" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %"CONTAB[125]*61" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %"CONTAB[126]*62" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %"CONTAB[347]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 347), align 8
  %"CONTAB[129]*63" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 425, i64 8, {}* %"CONTAB[55]*59", {}* %"CONTAB[426]*", {}* %"CONTAB[123]*60", {}* %"CONTAB[125]*61", {}* %"CONTAB[126]*62", {}* %"CONTAB[347]*", {}* %"CONTAB[129]*63", {}* inttoptr (i64 4 to {}*))
  %"CONTAB[423]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 423), align 8
  %"CONTAB[425]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 425), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 422, i64 2, {}* %"CONTAB[423]*", {}* %"CONTAB[425]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 429, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-148599, i64 0, i64 0))
  %"CONTAB[429]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 429), align 8
  %"CONTAB[12]*64" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 428, {}* %"CONTAB[429]*", {}* %"CONTAB[12]*64")
  %"CONTAB[244]*65" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 244), align 16
  %"CONTAB[121]*66" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 431, i64 2, {}* %"CONTAB[244]*65", {}* %"CONTAB[121]*66")
  %"CONTAB[55]*67" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %"CONTAB[431]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 431), align 8
  %"CONTAB[123]*68" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %"CONTAB[125]*69" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %"CONTAB[126]*70" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %"CONTAB[347]*71" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 347), align 8
  %"CONTAB[129]*72" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 430, i64 8, {}* %"CONTAB[55]*67", {}* %"CONTAB[431]*", {}* %"CONTAB[123]*68", {}* %"CONTAB[125]*69", {}* %"CONTAB[126]*70", {}* %"CONTAB[347]*71", {}* %"CONTAB[129]*72", {}* inttoptr (i64 16 to {}*))
  %"CONTAB[428]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 428), align 16
  %"CONTAB[430]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 430), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 427, i64 2, {}* %"CONTAB[428]*", {}* %"CONTAB[430]*")
  %"CONTAB[227]*73" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 227), align 8
  %"CONTAB[224]*74" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 224), align 16
  %"CONTAB[422]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 422), align 16
  %"CONTAB[427]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 427), align 8
  %"CONTAB[246]*75" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 246), align 16
  %"CONTAB[248]*76" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 248), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 421, i64 6, {}* %"CONTAB[227]*73", {}* %"CONTAB[224]*74", {}* %"CONTAB[422]*", {}* %"CONTAB[427]*", {}* %"CONTAB[246]*75", {}* %"CONTAB[248]*76")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 435, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-148562, i64 0, i64 0))
  %"CONTAB[435]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 435), align 8
  %"CONTAB[12]*77" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 434, {}* %"CONTAB[435]*", {}* %"CONTAB[12]*77")
  %"CONTAB[244]*78" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 244), align 16
  %"CONTAB[121]*79" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 437, i64 2, {}* %"CONTAB[244]*78", {}* %"CONTAB[121]*79")
  %"CONTAB[55]*80" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %"CONTAB[437]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 437), align 8
  %"CONTAB[123]*81" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %"CONTAB[125]*82" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %"CONTAB[126]*83" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %"CONTAB[360]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 360), align 16
  %"CONTAB[129]*84" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 436, i64 8, {}* %"CONTAB[55]*80", {}* %"CONTAB[437]*", {}* %"CONTAB[123]*81", {}* %"CONTAB[125]*82", {}* %"CONTAB[126]*83", {}* %"CONTAB[360]*", {}* %"CONTAB[129]*84", {}* inttoptr (i64 4 to {}*))
  %"CONTAB[434]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 434), align 16
  %"CONTAB[436]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 436), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 433, i64 2, {}* %"CONTAB[434]*", {}* %"CONTAB[436]*")
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.28() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !148 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.26)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.27)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.29() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !149 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.25)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.28)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.30() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !150 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.22)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.29)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.31() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !151 {
entry:
  %"CONTAB[227]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 227), align 8
  %"CONTAB[224]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 224), align 16
  %"CONTAB[433]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 433), align 8
  %"CONTAB[246]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 246), align 16
  %"CONTAB[248]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 248), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 432, i64 5, {}* %"CONTAB[227]*", {}* %"CONTAB[224]*", {}* %"CONTAB[433]*", {}* %"CONTAB[246]*", {}* %"CONTAB[248]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 441, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-148522, i64 0, i64 0))
  %"CONTAB[441]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 441), align 8
  %"CONTAB[12]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 440, {}* %"CONTAB[441]*", {}* %"CONTAB[12]*")
  %"CONTAB[244]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 244), align 16
  %"CONTAB[121]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 443, i64 2, {}* %"CONTAB[244]*", {}* %"CONTAB[121]*")
  %"CONTAB[55]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %"CONTAB[443]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 443), align 8
  %"CONTAB[123]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %"CONTAB[125]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %"CONTAB[126]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %"CONTAB[321]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 321), align 8
  %"CONTAB[129]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 442, i64 8, {}* %"CONTAB[55]*", {}* %"CONTAB[443]*", {}* %"CONTAB[123]*", {}* %"CONTAB[125]*", {}* %"CONTAB[126]*", {}* %"CONTAB[321]*", {}* %"CONTAB[129]*", {}* inttoptr (i64 4 to {}*))
  %"CONTAB[440]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 440), align 16
  %"CONTAB[442]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 442), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 439, i64 2, {}* %"CONTAB[440]*", {}* %"CONTAB[442]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 446, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-148523, i64 0, i64 0))
  %"CONTAB[446]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 446), align 16
  %"CONTAB[12]*1" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 445, {}* %"CONTAB[446]*", {}* %"CONTAB[12]*1")
  %"CONTAB[244]*2" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 244), align 16
  %"CONTAB[121]*3" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 448, i64 2, {}* %"CONTAB[244]*2", {}* %"CONTAB[121]*3")
  %"CONTAB[55]*4" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %"CONTAB[448]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 448), align 16
  %"CONTAB[123]*5" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %"CONTAB[125]*6" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %"CONTAB[126]*7" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %"CONTAB[321]*8" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 321), align 8
  %"CONTAB[129]*9" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 447, i64 8, {}* %"CONTAB[55]*4", {}* %"CONTAB[448]*", {}* %"CONTAB[123]*5", {}* %"CONTAB[125]*6", {}* %"CONTAB[126]*7", {}* %"CONTAB[321]*8", {}* %"CONTAB[129]*9", {}* inttoptr (i64 16 to {}*))
  %"CONTAB[445]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 445), align 8
  %"CONTAB[447]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 447), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 444, i64 2, {}* %"CONTAB[445]*", {}* %"CONTAB[447]*")
  %"CONTAB[227]*10" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 227), align 8
  %"CONTAB[224]*11" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 224), align 16
  %"CONTAB[439]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 439), align 8
  %"CONTAB[444]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 444), align 16
  %"CONTAB[246]*12" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 246), align 16
  %"CONTAB[248]*13" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 248), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 438, i64 6, {}* %"CONTAB[227]*10", {}* %"CONTAB[224]*11", {}* %"CONTAB[439]*", {}* %"CONTAB[444]*", {}* %"CONTAB[246]*12", {}* %"CONTAB[248]*13")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 452, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-148579, i64 0, i64 0))
  %"CONTAB[452]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 452), align 16
  %"CONTAB[12]*14" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 451, {}* %"CONTAB[452]*", {}* %"CONTAB[12]*14")
  %"CONTAB[244]*15" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 244), align 16
  %"CONTAB[121]*16" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 454, i64 2, {}* %"CONTAB[244]*15", {}* %"CONTAB[121]*16")
  %"CONTAB[55]*17" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %"CONTAB[454]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 454), align 16
  %"CONTAB[123]*18" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %"CONTAB[125]*19" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %"CONTAB[126]*20" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %"CONTAB[354]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 354), align 16
  %"CONTAB[129]*21" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 453, i64 8, {}* %"CONTAB[55]*17", {}* %"CONTAB[454]*", {}* %"CONTAB[123]*18", {}* %"CONTAB[125]*19", {}* %"CONTAB[126]*20", {}* %"CONTAB[354]*", {}* %"CONTAB[129]*21", {}* inttoptr (i64 4 to {}*))
  %"CONTAB[451]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 451), align 8
  %"CONTAB[453]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 453), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 450, i64 2, {}* %"CONTAB[451]*", {}* %"CONTAB[453]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 457, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-148580, i64 0, i64 0))
  %"CONTAB[457]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 457), align 8
  %"CONTAB[12]*22" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 456, {}* %"CONTAB[457]*", {}* %"CONTAB[12]*22")
  %"CONTAB[244]*23" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 244), align 16
  %"CONTAB[121]*24" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 121), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 459, i64 2, {}* %"CONTAB[244]*23", {}* %"CONTAB[121]*24")
  %"CONTAB[55]*25" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 55), align 8
  %"CONTAB[459]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 459), align 8
  %"CONTAB[123]*26" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 123), align 8
  %"CONTAB[125]*27" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 125), align 8
  %"CONTAB[126]*28" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 126), align 16
  %"CONTAB[354]*29" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 354), align 16
  %"CONTAB[129]*30" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 129), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 458, i64 8, {}* %"CONTAB[55]*25", {}* %"CONTAB[459]*", {}* %"CONTAB[123]*26", {}* %"CONTAB[125]*27", {}* %"CONTAB[126]*28", {}* %"CONTAB[354]*29", {}* %"CONTAB[129]*30", {}* inttoptr (i64 16 to {}*))
  %"CONTAB[456]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 456), align 16
  %"CONTAB[458]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 458), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 455, i64 2, {}* %"CONTAB[456]*", {}* %"CONTAB[458]*")
  %"CONTAB[227]*31" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 227), align 8
  %"CONTAB[224]*32" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 224), align 16
  %"CONTAB[450]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 450), align 16
  %"CONTAB[455]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 455), align 8
  %"CONTAB[246]*33" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 246), align 16
  %"CONTAB[248]*34" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 248), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 449, i64 6, {}* %"CONTAB[227]*31", {}* %"CONTAB[224]*32", {}* %"CONTAB[450]*", {}* %"CONTAB[455]*", {}* %"CONTAB[246]*33", {}* %"CONTAB[248]*34")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^201^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^201^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[66]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 460, i64 3, {}* %"CONTAB[66]*", {}* %"CONTAB[51]*", {}* %"CONTAB[49]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 462, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"str-YAS=ALLE_OBJEKTE", i64 0, i64 0))
  %"CONTAB[462]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 462), align 16
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 461, {}* %"CONTAB[462]*", {}* %"CONTAB[6]*")
  %"CONTAB[98]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 463, i64 4, {}* %"CONTAB[98]*", {}* inttoptr (i64 32256 to {}*), {}* inttoptr (i64 912 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^228^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^228^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 465, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"str-YAS=EIN_OBJEKT_P", i64 0, i64 0))
  %"CONTAB[465]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 465), align 8
  %"CONTAB[6]*35" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 464, {}* %"CONTAB[465]*", {}* %"CONTAB[6]*35")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 467, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-YAS-MERKE_OBJEKT, i64 0, i64 0))
  %"CONTAB[467]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 467), align 8
  %"CONTAB[6]*36" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 466, {}* %"CONTAB[467]*", {}* %"CONTAB[6]*36")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 469, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-CERROR, i64 0, i64 0))
  %"CONTAB[469]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 469), align 8
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 468, {}* %"CONTAB[469]*", {}* %"CONTAB[10]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 470, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"str-Klasse = meta", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 471, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @"str-KLasse ~A existiert nicht ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 473, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @"str-YAS=SCHREIBE_ZUSAETZLICHEN_WERT", i64 0, i64 0))
  %"CONTAB[473]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 473), align 8
  %"CONTAB[6]*37" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 472, {}* %"CONTAB[473]*", {}* %"CONTAB[6]*37")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 475, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-INFORMANT, i64 0, i64 0))
  %"CONTAB[475]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 475), align 8
  %"CONTAB[61]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 61), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 474, {}* %"CONTAB[475]*", {}* %"CONTAB[61]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 477, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @str-KLH-IN-LISTE-DESTRUKTIV-EINFUEGEN, i64 0, i64 0))
  %"CONTAB[477]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 477), align 8
  %"CONTAB[6]*38" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 476, {}* %"CONTAB[477]*", {}* %"CONTAB[6]*38")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 479, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @str-YAS-SCHREIBE_INFORMANT, i64 0, i64 0))
  %"CONTAB[479]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 479), align 8
  %"CONTAB[6]*39" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 478, {}* %"CONTAB[479]*", {}* %"CONTAB[6]*39")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 481, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-REMOVE, i64 0, i64 0))
  %"CONTAB[481]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 481), align 8
  %"CONTAB[10]*40" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 480, {}* %"CONTAB[481]*", {}* %"CONTAB[10]*40")
  %"CONTAB[66]*41" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*42" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*43" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 482, i64 3, {}* %"CONTAB[66]*41", {}* %"CONTAB[51]*42", {}* %"CONTAB[49]*43")
  %"CONTAB[66]*44" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*45" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*46" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 483, i64 3, {}* %"CONTAB[66]*44", {}* %"CONTAB[51]*45", {}* %"CONTAB[49]*46")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 485, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-SET-DIFFERENCE, i64 0, i64 0))
  %"CONTAB[485]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 485), align 8
  %"CONTAB[10]*47" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 484, {}* %"CONTAB[485]*", {}* %"CONTAB[10]*47")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 487, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"str-YAS=NEUER_SLOT", i64 0, i64 0))
  %"CONTAB[487]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 487), align 8
  %"CONTAB[6]*48" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 486, {}* %"CONTAB[487]*", {}* %"CONTAB[6]*48")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 489, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-ERERBT, i64 0, i64 0))
  %"CONTAB[489]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 489), align 8
  %"CONTAB[6]*49" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 488, {}* %"CONTAB[489]*", {}* %"CONTAB[6]*49")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 490, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"str-wird nicht angelegt", i64 0, i64 0))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.32() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !152 {
entry:
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 491, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"str-Objekt  ~A existiert schon ", i64 0, i64 0))
  %"CONTAB[66]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 492, i64 3, {}* %"CONTAB[66]*", {}* %"CONTAB[51]*", {}* %"CONTAB[49]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 494, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @"str-YAS=NEUE_KLASSE", i64 0, i64 0))
  %"CONTAB[494]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 494), align 16
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 493, {}* %"CONTAB[494]*", {}* %"CONTAB[6]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 497, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-KLASSE, i64 0, i64 0))
  %"CONTAB[497]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 497), align 8
  %"CONTAB[6]*1" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 496, {}* %"CONTAB[497]*", {}* %"CONTAB[6]*1")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 499, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-NACH_DER_KLASSE, i64 0, i64 0))
  %"CONTAB[499]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 499), align 8
  %"CONTAB[6]*2" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 498, {}* %"CONTAB[499]*", {}* %"CONTAB[6]*2")
  %"CONTAB[222]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[496]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 496), align 16
  %"CONTAB[224]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 224), align 16
  %"CONTAB[498]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 498), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 495, i64 4, {}* %"CONTAB[222]*", {}* %"CONTAB[496]*", {}* %"CONTAB[224]*", {}* %"CONTAB[498]*")
  %"CONTAB[98]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 500, i64 4, {}* %"CONTAB[98]*", {}* inttoptr (i64 38052 to {}*), {}* inttoptr (i64 1048 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*3" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[496]*4" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 496), align 16
  %"CONTAB[224]*5" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 224), align 16
  %"CONTAB[498]*6" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 498), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 501, i64 4, {}* %"CONTAB[222]*3", {}* %"CONTAB[496]*4", {}* %"CONTAB[224]*5", {}* %"CONTAB[498]*6")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^231^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^231^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 502, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"str-Klasse = meta", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 503, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @"str-KLasse ~A existiert nicht ", i64 0, i64 0))
  %"CONTAB[66]*7" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*8" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*9" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 504, i64 3, {}* %"CONTAB[66]*7", {}* %"CONTAB[51]*8", {}* %"CONTAB[49]*9")
  %"CONTAB[66]*10" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*11" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*12" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 505, i64 3, {}* %"CONTAB[66]*10", {}* %"CONTAB[51]*11", {}* %"CONTAB[49]*12")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 506, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"str-wird nicht angelegt", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 507, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"str-Objekt  ~A existiert schon ", i64 0, i64 0))
  %"CONTAB[66]*13" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*14" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*15" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 508, i64 3, {}* %"CONTAB[66]*13", {}* %"CONTAB[51]*14", {}* %"CONTAB[49]*15")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 510, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"str-YAS=NEUE_INSTANZ", i64 0, i64 0))
  %"CONTAB[510]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 510), align 16
  %"CONTAB[6]*16" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 509, {}* %"CONTAB[510]*", {}* %"CONTAB[6]*16")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 513, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-VORBRUDER, i64 0, i64 0))
  %"CONTAB[513]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 513), align 8
  %"CONTAB[6]*17" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 512, {}* %"CONTAB[513]*", {}* %"CONTAB[6]*17")
  %"CONTAB[222]*18" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[496]*19" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 496), align 16
  %"CONTAB[224]*20" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 224), align 16
  %"CONTAB[512]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 512), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 511, i64 4, {}* %"CONTAB[222]*18", {}* %"CONTAB[496]*19", {}* %"CONTAB[224]*20", {}* %"CONTAB[512]*")
  %"CONTAB[98]*21" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 514, i64 4, {}* %"CONTAB[98]*21", {}* inttoptr (i64 43912 to {}*), {}* inttoptr (i64 1176 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*22" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[496]*23" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 496), align 16
  %"CONTAB[224]*24" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 224), align 16
  %"CONTAB[512]*25" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 512), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 515, i64 4, {}* %"CONTAB[222]*22", {}* %"CONTAB[496]*23", {}* %"CONTAB[224]*24", {}* %"CONTAB[512]*25")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^294^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^294^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 516, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 517, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-Klasse ~A oder Objekt ~A existieren nicht", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 519, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-DELETE, i64 0, i64 0))
  %"CONTAB[519]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 519), align 8
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 518, {}* %"CONTAB[519]*", {}* %"CONTAB[10]*")
  %"CONTAB[66]*26" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*27" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*28" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 520, i64 3, {}* %"CONTAB[66]*26", {}* %"CONTAB[51]*27", {}* %"CONTAB[49]*28")
  %"CONTAB[66]*29" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*30" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*31" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 521, i64 3, {}* %"CONTAB[66]*29", {}* %"CONTAB[51]*30", {}* %"CONTAB[49]*31")
  %"CONTAB[66]*32" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*33" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*34" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 522, i64 3, {}* %"CONTAB[66]*32", {}* %"CONTAB[51]*33", {}* %"CONTAB[49]*34")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 524, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"str-YAS=KLASSE_WECHSELN", i64 0, i64 0))
  %"CONTAB[524]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 524), align 16
  %"CONTAB[6]*35" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 523, {}* %"CONTAB[524]*", {}* %"CONTAB[6]*35")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 527, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-NEUE_KLASSE, i64 0, i64 0))
  %"CONTAB[527]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 527), align 8
  %"CONTAB[6]*36" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 526, {}* %"CONTAB[527]*", {}* %"CONTAB[6]*36")
  %"CONTAB[222]*37" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[526]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 526), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 525, i64 2, {}* %"CONTAB[222]*37", {}* %"CONTAB[526]*")
  %"CONTAB[98]*38" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 528, i64 4, {}* %"CONTAB[98]*38", {}* inttoptr (i64 48428 to {}*), {}* inttoptr (i64 1288 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*39" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[526]*40" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 526), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 529, i64 2, {}* %"CONTAB[222]*39", {}* %"CONTAB[526]*40")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^322^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^322^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 530, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 531, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"str-objekt ~A undefiniert / hat keinen vater", i64 0, i64 0))
  %"CONTAB[66]*41" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*42" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*43" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 532, i64 3, {}* %"CONTAB[66]*41", {}* %"CONTAB[51]*42", {}* %"CONTAB[49]*43")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 534, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"str-YAS=DER_VATER", i64 0, i64 0))
  %"CONTAB[534]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 534), align 16
  %"CONTAB[6]*44" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 533, {}* %"CONTAB[534]*", {}* %"CONTAB[6]*44")
  %"CONTAB[222]*45" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 535, i64 1, {}* %"CONTAB[222]*45")
  %"CONTAB[98]*46" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 536, i64 4, {}* %"CONTAB[98]*46", {}* inttoptr (i64 50852 to {}*), {}* inttoptr (i64 1340 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*47" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 537, i64 1, {}* %"CONTAB[222]*47")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^335^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^335^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 538, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @"str-Wird nicht geloescht", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 539, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @"str-Objekt ~a hat noch kinder ~A ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 541, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @"str-YAS=LOESCHE_EINEN_WERT", i64 0, i64 0))
  %"CONTAB[541]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 541), align 8
  %"CONTAB[6]*48" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 540, {}* %"CONTAB[541]*", {}* %"CONTAB[6]*48")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 543, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str-YAS-VERGESSE_OBJEKT, i64 0, i64 0))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.33() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !153 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.31)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.32)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.34() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !154 {
entry:
  %"CONTAB[543]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 543), align 8
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 542, {}* %"CONTAB[543]*", {}* %"CONTAB[6]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 545, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str-YAS-LOESCHE_SYMBOL, i64 0, i64 0))
  %"CONTAB[545]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 545), align 8
  %"CONTAB[6]*1" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 544, {}* %"CONTAB[545]*", {}* %"CONTAB[6]*1")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 546, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @"str-wird nicht geloescht", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 547, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @"str-Objekt ~a existiert nicht ", i64 0, i64 0))
  %"CONTAB[66]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 548, i64 3, {}* %"CONTAB[66]*", {}* %"CONTAB[51]*", {}* %"CONTAB[49]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 550, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"str-YAS=LOESCHE_OBJEKT", i64 0, i64 0))
  %"CONTAB[550]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 550), align 16
  %"CONTAB[6]*2" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 549, {}* %"CONTAB[550]*", {}* %"CONTAB[6]*2")
  %"CONTAB[222]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 551, i64 1, {}* %"CONTAB[222]*")
  %"CONTAB[98]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 552, i64 4, {}* %"CONTAB[98]*", {}* inttoptr (i64 51948 to {}*), {}* inttoptr (i64 1376 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*3" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 553, i64 1, {}* %"CONTAB[222]*3")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^344^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^344^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[66]*4" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*5" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*6" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 554, i64 3, {}* %"CONTAB[66]*4", {}* %"CONTAB[51]*5", {}* %"CONTAB[49]*6")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 556, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"str-YAS=ALLES_LOESCHEN", i64 0, i64 0))
  %"CONTAB[556]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 556), align 16
  %"CONTAB[6]*7" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 555, {}* %"CONTAB[556]*", {}* %"CONTAB[6]*7")
  %"CONTAB[98]*8" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 557, i64 4, {}* %"CONTAB[98]*8", {}* inttoptr (i64 54332 to {}*), {}* inttoptr (i64 1432 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^358^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^358^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 558, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"str-Nichts wird geloescht", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 559, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"str-~A ist keine Klasse", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 561, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"str-YAS=LOESCHE_WERT", i64 0, i64 0))
  %"CONTAB[561]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 561), align 8
  %"CONTAB[6]*9" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 560, {}* %"CONTAB[561]*", {}* %"CONTAB[6]*9")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 563, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str-YAS-VERGESSE_OBJEKTE, i64 0, i64 0))
  %"CONTAB[563]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 563), align 8
  %"CONTAB[6]*10" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 562, {}* %"CONTAB[563]*", {}* %"CONTAB[6]*10")
  %"CONTAB[66]*11" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*12" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*13" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 564, i64 3, {}* %"CONTAB[66]*11", {}* %"CONTAB[51]*12", {}* %"CONTAB[49]*13")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 566, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @"str-YAS=LOESCHE_ALLE_KINDER", i64 0, i64 0))
  %"CONTAB[566]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 566), align 16
  %"CONTAB[6]*14" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 565, {}* %"CONTAB[566]*", {}* %"CONTAB[6]*14")
  %"CONTAB[496]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 496), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 567, i64 1, {}* %"CONTAB[496]*")
  %"CONTAB[98]*15" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 568, i64 4, {}* %"CONTAB[98]*15", {}* inttoptr (i64 54792 to {}*), {}* inttoptr (i64 1456 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[496]*16" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 496), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 569, i64 1, {}* %"CONTAB[496]*16")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^364^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^364^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[66]*17" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*18" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*19" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 570, i64 3, {}* %"CONTAB[66]*17", {}* %"CONTAB[51]*18", {}* %"CONTAB[49]*19")
  %"CONTAB[222]*20" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 571, i64 1, {}* %"CONTAB[222]*20")
  %"CONTAB[98]*21" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 572, i64 4, {}* %"CONTAB[98]*21", {}* inttoptr (i64 56408 to {}*), {}* inttoptr (i64 1508 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*22" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 573, i64 1, {}* %"CONTAB[222]*22")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^377^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^377^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[66]*23" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*24" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*25" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 574, i64 3, {}* %"CONTAB[66]*23", {}* %"CONTAB[51]*24", {}* %"CONTAB[49]*25")
  %"CONTAB[222]*26" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 575, i64 1, {}* %"CONTAB[222]*26")
  %"CONTAB[98]*27" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 576, i64 4, {}* %"CONTAB[98]*27", {}* inttoptr (i64 57112 to {}*), {}* inttoptr (i64 1528 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*28" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 577, i64 1, {}* %"CONTAB[222]*28")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^382^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^382^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 579, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-SYMBOLP, i64 0, i64 0))
  %"CONTAB[579]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 579), align 8
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 578, {}* %"CONTAB[579]*", {}* %"CONTAB[10]*")
  %"CONTAB[66]*29" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*30" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*31" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 580, i64 3, {}* %"CONTAB[66]*29", {}* %"CONTAB[51]*30", {}* %"CONTAB[49]*31")
  %"CONTAB[222]*32" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 581, i64 1, {}* %"CONTAB[222]*32")
  %"CONTAB[98]*33" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 582, i64 4, {}* %"CONTAB[98]*33", {}* inttoptr (i64 57752 to {}*), {}* inttoptr (i64 1548 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*34" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 583, i64 1, {}* %"CONTAB[222]*34")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^387^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^387^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 584, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"str-wird nicht sortiert", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 585, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @"str-~A ist keine klasse ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 587, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-STABLE-SORT, i64 0, i64 0))
  %"CONTAB[587]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 587), align 8
  %"CONTAB[10]*35" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 586, {}* %"CONTAB[587]*", {}* %"CONTAB[10]*35")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 589, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"str-STRING<", i64 0, i64 0))
  %"CONTAB[589]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 589), align 8
  %"CONTAB[10]*36" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 588, {}* %"CONTAB[589]*", {}* %"CONTAB[10]*36")
  %"CONTAB[66]*37" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*38" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*39" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 590, i64 3, {}* %"CONTAB[66]*37", {}* %"CONTAB[51]*38", {}* %"CONTAB[49]*39")
  %"CONTAB[66]*40" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*41" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*42" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 591, i64 3, {}* %"CONTAB[66]*40", {}* %"CONTAB[51]*41", {}* %"CONTAB[49]*42")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 593, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"str-YAS=SORTIERE_KLASSE", i64 0, i64 0))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.35() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !155 {
entry:
  %"CONTAB[593]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 593), align 8
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 592, {}* %"CONTAB[593]*", {}* %"CONTAB[6]*")
  %"CONTAB[496]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 496), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 594, i64 1, {}* %"CONTAB[496]*")
  %"CONTAB[98]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 595, i64 4, {}* %"CONTAB[98]*", {}* inttoptr (i64 58392 to {}*), {}* inttoptr (i64 1576 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[496]*1" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 496), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 596, i64 1, {}* %"CONTAB[496]*1")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 599, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str-A, i64 0, i64 0))
  %"CONTAB[599]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 599), align 8
  %"CONTAB[6]*2" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 598, {}* %"CONTAB[599]*", {}* %"CONTAB[6]*2")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 601, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str-B, i64 0, i64 0))
  %"CONTAB[601]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 601), align 8
  %"CONTAB[6]*3" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 600, {}* %"CONTAB[601]*", {}* %"CONTAB[6]*3")
  %"CONTAB[598]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 598), align 16
  %"CONTAB[600]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 600), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 597, i64 2, {}* %"CONTAB[598]*", {}* %"CONTAB[600]*")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^394^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^394^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 603, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-PUT-F, i64 0, i64 0))
  %"CONTAB[603]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 603), align 8
  %"CONTAB[2]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 602, {}* %"CONTAB[603]*", {}* %"CONTAB[2]*")
  %"CONTAB[66]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 604, i64 3, {}* %"CONTAB[66]*", {}* %"CONTAB[51]*", {}* %"CONTAB[49]*")
  %"CONTAB[66]*4" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*5" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*6" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 605, i64 3, {}* %"CONTAB[66]*4", {}* %"CONTAB[51]*5", {}* %"CONTAB[49]*6")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 608, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-SLOT, i64 0, i64 0))
  %"CONTAB[608]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 608), align 16
  %"CONTAB[6]*7" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 607, {}* %"CONTAB[608]*", {}* %"CONTAB[6]*7")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 610, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-WER_WARS, i64 0, i64 0))
  %"CONTAB[610]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 610), align 16
  %"CONTAB[6]*8" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 609, {}* %"CONTAB[610]*", {}* %"CONTAB[6]*8")
  %"CONTAB[222]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  %"CONTAB[609]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 609), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 606, i64 3, {}* %"CONTAB[222]*", {}* %"CONTAB[607]*", {}* %"CONTAB[609]*")
  %"CONTAB[98]*9" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 611, i64 4, {}* %"CONTAB[98]*9", {}* inttoptr (i64 59656 to {}*), {}* inttoptr (i64 1612 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*10" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*11" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  %"CONTAB[609]*12" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 609), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 612, i64 3, {}* %"CONTAB[222]*10", {}* %"CONTAB[607]*11", {}* %"CONTAB[609]*12")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^403^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^403^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 614, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-GETF, i64 0, i64 0))
  %"CONTAB[614]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 614), align 16
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 613, {}* %"CONTAB[614]*", {}* %"CONTAB[10]*")
  %"CONTAB[66]*13" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*14" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*15" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 615, i64 3, {}* %"CONTAB[66]*13", {}* %"CONTAB[51]*14", {}* %"CONTAB[49]*15")
  %"CONTAB[222]*16" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*17" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 616, i64 2, {}* %"CONTAB[222]*16", {}* %"CONTAB[607]*17")
  %"CONTAB[98]*18" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 617, i64 4, {}* %"CONTAB[98]*18", {}* inttoptr (i64 61356 to {}*), {}* inttoptr (i64 1672 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*19" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*20" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 618, i64 2, {}* %"CONTAB[222]*19", {}* %"CONTAB[607]*20")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^410^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^410^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 620, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"str-YAS=HAT_OBJEKT_SLOT_P", i64 0, i64 0))
  %"CONTAB[620]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 620), align 16
  %"CONTAB[6]*21" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 619, {}* %"CONTAB[620]*", {}* %"CONTAB[6]*21")
  %"CONTAB[66]*22" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*23" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*24" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 621, i64 3, {}* %"CONTAB[66]*22", {}* %"CONTAB[51]*23", {}* %"CONTAB[49]*24")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 623, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"str-YAS=SCHREIBE_WERT", i64 0, i64 0))
  %"CONTAB[623]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 623), align 8
  %"CONTAB[6]*25" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 622, {}* %"CONTAB[623]*", {}* %"CONTAB[6]*25")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 624, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 625, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @"str-Slot ~A existiert schon bei objekt ~A ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 626, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 627, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @"str-objekt ~A existiert nicht ", i64 0, i64 0))
  %"CONTAB[66]*26" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*27" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*28" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 628, i64 3, {}* %"CONTAB[66]*26", {}* %"CONTAB[51]*27", {}* %"CONTAB[49]*28")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 631, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-WERT, i64 0, i64 0))
  %"CONTAB[631]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 631), align 8
  %"CONTAB[6]*29" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 630, {}* %"CONTAB[631]*", {}* %"CONTAB[6]*29")
  %"CONTAB[222]*30" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*31" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  %"CONTAB[630]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 630), align 16
  %"CONTAB[294]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 294), align 16
  %"CONTAB[41]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 41), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 629, i64 5, {}* %"CONTAB[222]*30", {}* %"CONTAB[607]*31", {}* %"CONTAB[630]*", {}* %"CONTAB[294]*", {}* %"CONTAB[41]*")
  %"CONTAB[98]*32" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 632, i64 4, {}* %"CONTAB[98]*32", {}* inttoptr (i64 61764 to {}*), {}* inttoptr (i64 1692 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*33" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*34" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  %"CONTAB[630]*35" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 630), align 16
  %"CONTAB[294]*36" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 294), align 16
  %"CONTAB[41]*37" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 41), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 633, i64 5, {}* %"CONTAB[222]*33", {}* %"CONTAB[607]*34", {}* %"CONTAB[630]*35", {}* %"CONTAB[294]*36", {}* %"CONTAB[41]*37")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^422^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^422^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 634, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 635, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"str-objekt ~A exisiert nicht ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 636, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 637, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @"str-slot ~A existiert nicht bei objekt ~A", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 639, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-REMPROP, i64 0, i64 0))
  %"CONTAB[639]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 639), align 8
  %"CONTAB[10]*38" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 638, {}* %"CONTAB[639]*", {}* %"CONTAB[10]*38")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 641, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-REM-F, i64 0, i64 0))
  %"CONTAB[641]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 641), align 8
  %"CONTAB[2]*39" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 640, {}* %"CONTAB[641]*", {}* %"CONTAB[2]*39")
  %"CONTAB[66]*40" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*41" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*42" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 642, i64 3, {}* %"CONTAB[66]*40", {}* %"CONTAB[51]*41", {}* %"CONTAB[49]*42")
  %"CONTAB[66]*43" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*44" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*45" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 643, i64 3, {}* %"CONTAB[66]*43", {}* %"CONTAB[51]*44", {}* %"CONTAB[49]*45")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 645, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"str-YAS=LOESCHE_SLOT", i64 0, i64 0))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.36() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !156 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.34)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.35)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.37() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !157 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.33)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.36)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.38() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !158 {
entry:
  %"CONTAB[645]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 645), align 8
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 644, {}* %"CONTAB[645]*", {}* %"CONTAB[6]*")
  %"CONTAB[222]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 646, i64 2, {}* %"CONTAB[222]*", {}* %"CONTAB[607]*")
  %"CONTAB[98]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 647, i64 4, {}* %"CONTAB[98]*", {}* inttoptr (i64 63484 to {}*), {}* inttoptr (i64 1744 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*1" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*2" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 648, i64 2, {}* %"CONTAB[222]*1", {}* %"CONTAB[607]*2")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^436^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^436^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[66]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 649, i64 3, {}* %"CONTAB[66]*", {}* %"CONTAB[51]*", {}* %"CONTAB[49]*")
  %"CONTAB[222]*3" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*4" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 650, i64 2, {}* %"CONTAB[222]*3", {}* %"CONTAB[607]*4")
  %"CONTAB[98]*5" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 651, i64 4, {}* %"CONTAB[98]*5", {}* inttoptr (i64 65040 to {}*), {}* inttoptr (i64 1788 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*6" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*7" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 652, i64 2, {}* %"CONTAB[222]*6", {}* %"CONTAB[607]*7")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^447^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^447^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 653, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 654, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @"str-objekt ~A existiert nicht ", i64 0, i64 0))
  %"CONTAB[66]*8" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*9" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*10" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 655, i64 3, {}* %"CONTAB[66]*8", {}* %"CONTAB[51]*9", {}* %"CONTAB[49]*10")
  %"CONTAB[222]*11" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 656, i64 1, {}* %"CONTAB[222]*11")
  %"CONTAB[98]*12" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 657, i64 4, {}* %"CONTAB[98]*12", {}* inttoptr (i64 66424 to {}*), {}* inttoptr (i64 1824 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*13" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 658, i64 1, {}* %"CONTAB[222]*13")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^456^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^456^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 660, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-UNION, i64 0, i64 0))
  %"CONTAB[660]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 660), align 16
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 659, {}* %"CONTAB[660]*", {}* %"CONTAB[10]*")
  %"CONTAB[66]*14" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*15" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*16" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 661, i64 3, {}* %"CONTAB[66]*14", {}* %"CONTAB[51]*15", {}* %"CONTAB[49]*16")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 663, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @"str-YAS=AUCH_ERERBTE_SLOTS", i64 0, i64 0))
  %"CONTAB[663]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 663), align 8
  %"CONTAB[6]*17" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 662, {}* %"CONTAB[663]*", {}* %"CONTAB[6]*17")
  %"CONTAB[222]*18" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 664, i64 1, {}* %"CONTAB[222]*18")
  %"CONTAB[98]*19" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 665, i64 4, {}* %"CONTAB[98]*19", {}* inttoptr (i64 67976 to {}*), {}* inttoptr (i64 1872 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*20" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 666, i64 1, {}* %"CONTAB[222]*20")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^466^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^466^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[66]*21" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*22" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*23" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 667, i64 3, {}* %"CONTAB[66]*21", {}* %"CONTAB[51]*22", {}* %"CONTAB[49]*23")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 669, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @"str-YAS=BENUTZER_+_ERERBETE_SLOTS", i64 0, i64 0))
  %"CONTAB[669]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 669), align 8
  %"CONTAB[6]*24" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 668, {}* %"CONTAB[669]*", {}* %"CONTAB[6]*24")
  %"CONTAB[222]*25" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 670, i64 1, {}* %"CONTAB[222]*25")
  %"CONTAB[98]*26" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 671, i64 4, {}* %"CONTAB[98]*26", {}* inttoptr (i64 68852 to {}*), {}* inttoptr (i64 1904 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*27" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 672, i64 1, {}* %"CONTAB[222]*27")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^476^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^476^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[66]*28" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*29" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*30" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 673, i64 3, {}* %"CONTAB[66]*28", {}* %"CONTAB[51]*29", {}* %"CONTAB[49]*30")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 675, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"str-YAS=BENUTZER_SLOTS", i64 0, i64 0))
  %"CONTAB[675]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 675), align 8
  %"CONTAB[6]*31" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 674, {}* %"CONTAB[675]*", {}* %"CONTAB[6]*31")
  %"CONTAB[222]*32" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 676, i64 1, {}* %"CONTAB[222]*32")
  %"CONTAB[98]*33" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 677, i64 4, {}* %"CONTAB[98]*33", {}* inttoptr (i64 69420 to {}*), {}* inttoptr (i64 1920 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*34" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 678, i64 1, {}* %"CONTAB[222]*34")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^480^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^480^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[66]*35" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*36" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*37" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 679, i64 3, {}* %"CONTAB[66]*35", {}* %"CONTAB[51]*36", {}* %"CONTAB[49]*37")
  %"CONTAB[222]*38" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*39" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 680, i64 2, {}* %"CONTAB[222]*38", {}* %"CONTAB[607]*39")
  %"CONTAB[98]*40" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 681, i64 4, {}* %"CONTAB[98]*40", {}* inttoptr (i64 72452 to {}*), {}* inttoptr (i64 2020 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*41" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*42" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 682, i64 2, {}* %"CONTAB[222]*41", {}* %"CONTAB[607]*42")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^487^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^487^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 684, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-YAS-SICHER_WERT, i64 0, i64 0))
  %"CONTAB[684]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 684), align 16
  %"CONTAB[6]*43" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 683, {}* %"CONTAB[684]*", {}* %"CONTAB[6]*43")
  %"CONTAB[66]*44" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*45" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*46" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 685, i64 3, {}* %"CONTAB[66]*44", {}* %"CONTAB[51]*45", {}* %"CONTAB[49]*46")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 687, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-ALTER, i64 0, i64 0))
  %"CONTAB[687]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 687), align 8
  %"CONTAB[61]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 61), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 686, {}* %"CONTAB[687]*", {}* %"CONTAB[61]*")
  %"CONTAB[66]*47" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*48" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*49" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 688, i64 3, {}* %"CONTAB[66]*47", {}* %"CONTAB[51]*48", {}* %"CONTAB[49]*49")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 691, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-SICHERN, i64 0, i64 0))
  %"CONTAB[691]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 691), align 8
  %"CONTAB[6]*50" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 690, {}* %"CONTAB[691]*", {}* %"CONTAB[6]*50")
  %"CONTAB[222]*51" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*52" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  %"CONTAB[630]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 630), align 16
  %"CONTAB[294]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 294), align 16
  %"CONTAB[690]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 690), align 16
  %"CONTAB[41]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 41), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 689, i64 6, {}* %"CONTAB[222]*51", {}* %"CONTAB[607]*52", {}* %"CONTAB[630]*", {}* %"CONTAB[294]*", {}* %"CONTAB[690]*", {}* %"CONTAB[41]*")
  %"CONTAB[98]*53" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 692, i64 4, {}* %"CONTAB[98]*53", {}* inttoptr (i64 76032 to {}*), {}* inttoptr (i64 2128 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*54" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*55" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  %"CONTAB[630]*56" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 630), align 16
  %"CONTAB[294]*57" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 294), align 16
  %"CONTAB[690]*58" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 690), align 16
  %"CONTAB[41]*59" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 41), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 693, i64 6, {}* %"CONTAB[222]*54", {}* %"CONTAB[607]*55", {}* %"CONTAB[630]*56", {}* %"CONTAB[294]*57", {}* %"CONTAB[690]*58", {}* %"CONTAB[41]*59")
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.39() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !159 {
entry:
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 695, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-SICHERN, i64 0, i64 0))
  %"CONTAB[695]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 695), align 8
  %"CONTAB[61]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 61), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 694, {}* %"CONTAB[695]*", {}* %"CONTAB[61]*")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^517^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^517^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 697, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-ATOM, i64 0, i64 0))
  %"CONTAB[697]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 697), align 8
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 696, {}* %"CONTAB[697]*", {}* %"CONTAB[10]*")
  %"CONTAB[66]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 698, i64 3, {}* %"CONTAB[66]*", {}* %"CONTAB[51]*", {}* %"CONTAB[49]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 700, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-YAS-ENTHALTEN, i64 0, i64 0))
  %"CONTAB[700]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 700), align 16
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 699, {}* %"CONTAB[700]*", {}* %"CONTAB[6]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 703, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-WAS, i64 0, i64 0))
  %"CONTAB[703]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 703), align 8
  %"CONTAB[6]*1" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 702, {}* %"CONTAB[703]*", {}* %"CONTAB[6]*1")
  %"CONTAB[630]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 630), align 16
  %"CONTAB[702]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 702), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 701, i64 2, {}* %"CONTAB[630]*", {}* %"CONTAB[702]*")
  %"CONTAB[98]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 704, i64 4, {}* %"CONTAB[98]*", {}* inttoptr (i64 76996 to {}*), {}* inttoptr (i64 2156 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[630]*2" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 630), align 16
  %"CONTAB[702]*3" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 702), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 705, i64 2, {}* %"CONTAB[630]*2", {}* %"CONTAB[702]*3")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^539^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^539^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 706, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 707, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-objekt ~A und/oder slot ~A nicht vorhanden", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 709, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-APPEND, i64 0, i64 0))
  %"CONTAB[709]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 709), align 8
  %"CONTAB[10]*4" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 708, {}* %"CONTAB[709]*", {}* %"CONTAB[10]*4")
  %"CONTAB[66]*5" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*6" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*7" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 710, i64 3, {}* %"CONTAB[66]*5", {}* %"CONTAB[51]*6", {}* %"CONTAB[49]*7")
  %"CONTAB[66]*8" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*9" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*10" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 711, i64 3, {}* %"CONTAB[66]*8", {}* %"CONTAB[51]*9", {}* %"CONTAB[49]*10")
  %"CONTAB[222]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  %"CONTAB[630]*11" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 630), align 16
  %"CONTAB[294]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 294), align 16
  %"CONTAB[690]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 690), align 16
  %"CONTAB[41]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 41), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 712, i64 6, {}* %"CONTAB[222]*", {}* %"CONTAB[607]*", {}* %"CONTAB[630]*11", {}* %"CONTAB[294]*", {}* %"CONTAB[690]*", {}* %"CONTAB[41]*")
  %"CONTAB[98]*12" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 713, i64 4, {}* %"CONTAB[98]*12", {}* inttoptr (i64 77540 to {}*), {}* inttoptr (i64 2188 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*13" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*14" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  %"CONTAB[630]*15" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 630), align 16
  %"CONTAB[294]*16" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 294), align 16
  %"CONTAB[690]*17" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 690), align 16
  %"CONTAB[41]*18" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 41), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 714, i64 6, {}* %"CONTAB[222]*13", {}* %"CONTAB[607]*14", {}* %"CONTAB[630]*15", {}* %"CONTAB[294]*16", {}* %"CONTAB[690]*17", {}* %"CONTAB[41]*18")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^547^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^547^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 716, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-LOESCHEN, i64 0, i64 0))
  %"CONTAB[716]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 716), align 16
  %"CONTAB[6]*19" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 715, {}* %"CONTAB[716]*", {}* %"CONTAB[6]*19")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 718, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"str-YAS=ALTER_WERT", i64 0, i64 0))
  %"CONTAB[718]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 718), align 16
  %"CONTAB[6]*20" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 717, {}* %"CONTAB[718]*", {}* %"CONTAB[6]*20")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 720, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str-YAS-ALTER_INFORMANT, i64 0, i64 0))
  %"CONTAB[720]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 720), align 16
  %"CONTAB[6]*21" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 719, {}* %"CONTAB[720]*", {}* %"CONTAB[6]*21")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 722, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-YAS-VERGESSE_WERT, i64 0, i64 0))
  %"CONTAB[722]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 722), align 16
  %"CONTAB[6]*22" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 721, {}* %"CONTAB[722]*", {}* %"CONTAB[6]*22")
  %"CONTAB[66]*23" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*24" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*25" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 723, i64 3, {}* %"CONTAB[66]*23", {}* %"CONTAB[51]*24", {}* %"CONTAB[49]*25")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 726, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-ZURUECK, i64 0, i64 0))
  %"CONTAB[726]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 726), align 16
  %"CONTAB[6]*26" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 725, {}* %"CONTAB[726]*", {}* %"CONTAB[6]*26")
  %"CONTAB[222]*27" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*28" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  %"CONTAB[294]*29" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 294), align 16
  %"CONTAB[725]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 725), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 724, i64 4, {}* %"CONTAB[222]*27", {}* %"CONTAB[607]*28", {}* %"CONTAB[294]*29", {}* %"CONTAB[725]*")
  %"CONTAB[98]*30" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 727, i64 4, {}* %"CONTAB[98]*30", {}* inttoptr (i64 82724 to {}*), {}* inttoptr (i64 2328 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*31" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*32" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  %"CONTAB[294]*33" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 294), align 16
  %"CONTAB[725]*34" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 725), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 728, i64 4, {}* %"CONTAB[222]*31", {}* %"CONTAB[607]*32", {}* %"CONTAB[294]*33", {}* %"CONTAB[725]*34")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 730, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-ZURUECK, i64 0, i64 0))
  %"CONTAB[730]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 730), align 16
  %"CONTAB[61]*35" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 61), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 729, {}* %"CONTAB[730]*", {}* %"CONTAB[61]*35")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^565^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^565^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 731, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 732, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-objekt ~A und/oder slot ~A nicht vorhanden", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 733, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 734, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @"str-Wert ~A im slot ~A bei objekt ~A nicht vorhanden", i64 0, i64 0))
  %"CONTAB[66]*36" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*37" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*38" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 735, i64 3, {}* %"CONTAB[66]*36", {}* %"CONTAB[51]*37", {}* %"CONTAB[49]*38")
  %"CONTAB[222]*39" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*40" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  %"CONTAB[630]*41" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 630), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 736, i64 3, {}* %"CONTAB[222]*39", {}* %"CONTAB[607]*40", {}* %"CONTAB[630]*41")
  %"CONTAB[98]*42" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 737, i64 4, {}* %"CONTAB[98]*42", {}* inttoptr (i64 84212 to {}*), {}* inttoptr (i64 2372 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*43" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*44" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  %"CONTAB[630]*45" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 630), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 738, i64 3, {}* %"CONTAB[222]*43", {}* %"CONTAB[607]*44", {}* %"CONTAB[630]*45")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^591^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^591^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 739, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 740, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @"str-objekt ~A unbekannt ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 741, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 742, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-slotname ~A bei objekt ~A schon vergeben ", i64 0, i64 0))
  %"CONTAB[66]*46" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*47" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*48" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 743, i64 3, {}* %"CONTAB[66]*46", {}* %"CONTAB[51]*47", {}* %"CONTAB[49]*48")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 745, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"str-YAS=DEFINIERE_METHODE", i64 0, i64 0))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.40() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !160 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.38)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.39)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.41() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !161 {
entry:
  %"CONTAB[745]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 745), align 8
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 744, {}* %"CONTAB[745]*", {}* %"CONTAB[6]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 748, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-MNAME, i64 0, i64 0))
  %"CONTAB[748]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 748), align 16
  %"CONTAB[6]*1" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 747, {}* %"CONTAB[748]*", {}* %"CONTAB[6]*1")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 750, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-DEFINITION, i64 0, i64 0))
  %"CONTAB[750]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 750), align 16
  %"CONTAB[6]*2" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 749, {}* %"CONTAB[750]*", {}* %"CONTAB[6]*2")
  %"CONTAB[222]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[747]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 747), align 8
  %"CONTAB[749]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 749), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 746, i64 3, {}* %"CONTAB[222]*", {}* %"CONTAB[747]*", {}* %"CONTAB[749]*")
  %"CONTAB[98]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 751, i64 4, {}* %"CONTAB[98]*", {}* inttoptr (i64 86932 to {}*), {}* inttoptr (i64 2436 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*3" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[747]*4" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 747), align 8
  %"CONTAB[749]*5" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 749), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 752, i64 3, {}* %"CONTAB[222]*3", {}* %"CONTAB[747]*4", {}* %"CONTAB[749]*5")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^609^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^609^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 753, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 754, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @"str-objekt ~A unbekannt ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 755, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 756, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"str-bei objekt ~A methode ~A nicht vorhande ", i64 0, i64 0))
  %"CONTAB[66]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 757, i64 3, {}* %"CONTAB[66]*", {}* %"CONTAB[51]*", {}* %"CONTAB[49]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 759, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"str-YAS=DEFINIERE_METHODE_NEU", i64 0, i64 0))
  %"CONTAB[759]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 759), align 8
  %"CONTAB[6]*6" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 758, {}* %"CONTAB[759]*", {}* %"CONTAB[6]*6")
  %"CONTAB[222]*7" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[747]*8" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 747), align 8
  %"CONTAB[749]*9" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 749), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 760, i64 3, {}* %"CONTAB[222]*7", {}* %"CONTAB[747]*8", {}* %"CONTAB[749]*9")
  %"CONTAB[98]*10" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 761, i64 4, {}* %"CONTAB[98]*10", {}* inttoptr (i64 88336 to {}*), {}* inttoptr (i64 2468 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*11" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[747]*12" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 747), align 8
  %"CONTAB[749]*13" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 749), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 762, i64 3, {}* %"CONTAB[222]*11", {}* %"CONTAB[747]*12", {}* %"CONTAB[749]*13")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^617^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^617^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 764, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-APPLY, i64 0, i64 0))
  %"CONTAB[764]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 764), align 16
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 763, {}* %"CONTAB[764]*", {}* %"CONTAB[10]*")
  %"CONTAB[66]*14" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*15" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*16" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 765, i64 3, {}* %"CONTAB[66]*14", {}* %"CONTAB[51]*15", {}* %"CONTAB[49]*16")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 767, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @"str-YAS=TUE_METHODE", i64 0, i64 0))
  %"CONTAB[767]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 767), align 8
  %"CONTAB[6]*17" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 766, {}* %"CONTAB[767]*", {}* %"CONTAB[6]*17")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 770, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-METHODE, i64 0, i64 0))
  %"CONTAB[770]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 770), align 16
  %"CONTAB[6]*18" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 769, {}* %"CONTAB[770]*", {}* %"CONTAB[6]*18")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-PARAMETER, i64 0, i64 0))
  %"CONTAB[772]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 772), align 16
  %"CONTAB[6]*19" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 771, {}* %"CONTAB[772]*", {}* %"CONTAB[6]*19")
  %"CONTAB[222]*20" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[769]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 769), align 8
  %"CONTAB[246]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 246), align 16
  %"CONTAB[771]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 771), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 768, i64 4, {}* %"CONTAB[222]*20", {}* %"CONTAB[769]*", {}* %"CONTAB[246]*", {}* %"CONTAB[771]*")
  %"CONTAB[98]*21" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 773, i64 4, {}* %"CONTAB[98]*21", {}* inttoptr (i64 91440 to {}*), {}* inttoptr (i64 2552 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*22" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[769]*23" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 769), align 8
  %"CONTAB[246]*24" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 246), align 16
  %"CONTAB[771]*25" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 771), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 774, i64 4, {}* %"CONTAB[222]*22", {}* %"CONTAB[769]*23", {}* %"CONTAB[246]*24", {}* %"CONTAB[771]*25")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^626^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^626^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[66]*26" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*27" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*28" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 775, i64 3, {}* %"CONTAB[66]*26", {}* %"CONTAB[51]*27", {}* %"CONTAB[49]*28")
  %"CONTAB[222]*29" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 776, i64 2, {}* %"CONTAB[222]*29", {}* %"CONTAB[607]*")
  %"CONTAB[98]*30" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 777, i64 4, {}* %"CONTAB[98]*30", {}* inttoptr (i64 93172 to {}*), {}* inttoptr (i64 2604 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*31" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*32" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 778, i64 2, {}* %"CONTAB[222]*31", {}* %"CONTAB[607]*32")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^643^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^643^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[66]*33" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*34" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*35" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 779, i64 3, {}* %"CONTAB[66]*33", {}* %"CONTAB[51]*34", {}* %"CONTAB[49]*35")
  %"CONTAB[222]*36" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*37" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 780, i64 2, {}* %"CONTAB[222]*36", {}* %"CONTAB[607]*37")
  %"CONTAB[98]*38" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 781, i64 4, {}* %"CONTAB[98]*38", {}* inttoptr (i64 94644 to {}*), {}* inttoptr (i64 2652 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*39" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*40" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 782, i64 2, {}* %"CONTAB[222]*39", {}* %"CONTAB[607]*40")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^655^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^655^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[66]*41" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*42" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*43" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 783, i64 3, {}* %"CONTAB[66]*41", {}* %"CONTAB[51]*42", {}* %"CONTAB[49]*43")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 785, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @"str-YAS=ALLE", i64 0, i64 0))
  %"CONTAB[785]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 785), align 8
  %"CONTAB[6]*44" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 784, {}* %"CONTAB[785]*", {}* %"CONTAB[6]*44")
  %"CONTAB[496]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 496), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 786, i64 1, {}* %"CONTAB[496]*")
  %"CONTAB[98]*45" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 787, i64 4, {}* %"CONTAB[98]*45", {}* inttoptr (i64 95028 to {}*), {}* inttoptr (i64 2668 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[496]*46" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 496), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 788, i64 1, {}* %"CONTAB[496]*46")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^667^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^667^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 790, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @str-YAS-LOESCHE_NACH_UNTEN, i64 0, i64 0))
  %"CONTAB[790]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 790), align 16
  %"CONTAB[6]*47" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 789, {}* %"CONTAB[790]*", {}* %"CONTAB[6]*47")
  %"CONTAB[66]*48" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*49" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*50" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 791, i64 3, {}* %"CONTAB[66]*48", {}* %"CONTAB[51]*49", {}* %"CONTAB[49]*50")
  %"CONTAB[222]*51" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 792, i64 1, {}* %"CONTAB[222]*51")
  %"CONTAB[98]*52" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 793, i64 4, {}* %"CONTAB[98]*52", {}* inttoptr (i64 95336 to {}*), {}* inttoptr (i64 2692 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*53" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 794, i64 1, {}* %"CONTAB[222]*53")
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.42() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !162 {
entry:
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^671^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^671^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[66]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 795, i64 3, {}* %"CONTAB[66]*", {}* %"CONTAB[51]*", {}* %"CONTAB[49]*")
  %"CONTAB[222]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 796, i64 1, {}* %"CONTAB[222]*")
  %"CONTAB[98]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 797, i64 4, {}* %"CONTAB[98]*", {}* inttoptr (i64 96464 to {}*), {}* inttoptr (i64 2732 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*1" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 798, i64 1, {}* %"CONTAB[222]*1")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^683^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^683^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[66]*2" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*3" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*4" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 799, i64 3, {}* %"CONTAB[66]*2", {}* %"CONTAB[51]*3", {}* %"CONTAB[49]*4")
  %"CONTAB[222]*5" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 800, i64 1, {}* %"CONTAB[222]*5")
  %"CONTAB[98]*6" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 801, i64 4, {}* %"CONTAB[98]*6", {}* inttoptr (i64 96844 to {}*), {}* inttoptr (i64 2748 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*7" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 802, i64 1, {}* %"CONTAB[222]*7")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^687^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^687^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[66]*8" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*9" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*10" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 803, i64 3, {}* %"CONTAB[66]*8", {}* %"CONTAB[51]*9", {}* %"CONTAB[49]*10")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 806, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-OBJEKT_LISTE, i64 0, i64 0))
  %"CONTAB[806]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 806), align 16
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 805, {}* %"CONTAB[806]*", {}* %"CONTAB[6]*")
  %"CONTAB[805]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 805), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 804, i64 1, {}* %"CONTAB[805]*")
  %"CONTAB[98]*11" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 807, i64 4, {}* %"CONTAB[98]*11", {}* inttoptr (i64 97284 to {}*), {}* inttoptr (i64 2768 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[805]*12" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 805), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 808, i64 1, {}* %"CONTAB[805]*12")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^692^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^692^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[66]*13" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*14" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*15" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 809, i64 3, {}* %"CONTAB[66]*13", {}* %"CONTAB[51]*14", {}* %"CONTAB[49]*15")
  %"CONTAB[222]*16" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 810, i64 1, {}* %"CONTAB[222]*16")
  %"CONTAB[98]*17" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 811, i64 4, {}* %"CONTAB[98]*17", {}* inttoptr (i64 97820 to {}*), {}* inttoptr (i64 2792 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*18" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 812, i64 1, {}* %"CONTAB[222]*18")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^698^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^698^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 814, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-COPY-LIST, i64 0, i64 0))
  %"CONTAB[814]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 814), align 16
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 813, {}* %"CONTAB[814]*", {}* %"CONTAB[10]*")
  %"CONTAB[66]*19" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*20" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*21" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 815, i64 3, {}* %"CONTAB[66]*19", {}* %"CONTAB[51]*20", {}* %"CONTAB[49]*21")
  %"CONTAB[66]*22" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*23" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*24" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 816, i64 3, {}* %"CONTAB[66]*22", {}* %"CONTAB[51]*23", {}* %"CONTAB[49]*24")
  %"CONTAB[222]*25" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 817, i64 2, {}* %"CONTAB[222]*25", {}* %"CONTAB[607]*")
  %"CONTAB[98]*26" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 818, i64 4, {}* %"CONTAB[98]*26", {}* inttoptr (i64 98128 to {}*), {}* inttoptr (i64 2808 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*27" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*28" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 819, i64 2, {}* %"CONTAB[222]*27", {}* %"CONTAB[607]*28")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^702^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^702^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[66]*29" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*30" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*31" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 820, i64 3, {}* %"CONTAB[66]*29", {}* %"CONTAB[51]*30", {}* %"CONTAB[49]*31")
  %"CONTAB[66]*32" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*33" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*34" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 821, i64 3, {}* %"CONTAB[66]*32", {}* %"CONTAB[51]*33", {}* %"CONTAB[49]*34")
  %"CONTAB[222]*35" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*36" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 822, i64 2, {}* %"CONTAB[222]*35", {}* %"CONTAB[607]*36")
  %"CONTAB[98]*37" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 823, i64 4, {}* %"CONTAB[98]*37", {}* inttoptr (i64 99592 to {}*), {}* inttoptr (i64 2856 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[222]*38" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 222), align 16
  %"CONTAB[607]*39" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 607), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 824, i64 2, {}* %"CONTAB[222]*38", {}* %"CONTAB[607]*39")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^714^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^714^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 826, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-HALLO, i64 0, i64 0))
  %"CONTAB[826]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 826), align 16
  %"CONTAB[6]*40" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 825, {}* %"CONTAB[826]*", {}* %"CONTAB[6]*40")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 827, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"str-hallo ich meta", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 829, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-KARSTEN, i64 0, i64 0))
  %"CONTAB[829]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 829), align 8
  %"CONTAB[6]*41" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 828, {}* %"CONTAB[829]*", {}* %"CONTAB[6]*41")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 831, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str-K0, i64 0, i64 0))
  %"CONTAB[831]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 831), align 8
  %"CONTAB[6]*42" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 830, {}* %"CONTAB[831]*", {}* %"CONTAB[6]*42")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 833, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-ALTER, i64 0, i64 0))
  %"CONTAB[833]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 833), align 8
  %"CONTAB[6]*43" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 832, {}* %"CONTAB[833]*", {}* %"CONTAB[6]*43")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 835, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-THEMA, i64 0, i64 0))
  %"CONTAB[835]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 835), align 8
  %"CONTAB[6]*44" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 834, {}* %"CONTAB[835]*", {}* %"CONTAB[6]*44")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 837, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str-KI, i64 0, i64 0))
  %"CONTAB[837]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 837), align 8
  %"CONTAB[6]*45" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 836, {}* %"CONTAB[837]*", {}* %"CONTAB[6]*45")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 838, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"str-hallo ich karsten", i64 0, i64 0))
  %"CONTAB[66]*46" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 66), align 16
  %"CONTAB[51]*47" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 51), align 8
  %"CONTAB[49]*48" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 839, i64 3, {}* %"CONTAB[66]*46", {}* %"CONTAB[51]*47", {}* %"CONTAB[49]*48")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 841, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-YAS-TESTE_OBJEKT, i64 0, i64 0))
  %"CONTAB[841]*" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 841), align 8
  %"CONTAB[6]*49" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 840, {}* %"CONTAB[841]*", {}* %"CONTAB[6]*49")
  %"CONTAB[98]*50" = load {}*, {}** getelementptr inbounds ([843 x {}*], [843 x {}*]* @CONTAB4406, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 842, i64 4, {}* %"CONTAB[98]*50", {}* inttoptr (i64 100264 to {}*), {}* inttoptr (i64 2880 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"yas=yasos.lisp^720^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-yas=yasos.lisp^720^TOP-COMPILE-FILE", i64 0, i64 0))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.43() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !163 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.41)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.42)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.44() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !164 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.40)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.43)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.45() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !165 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.37)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.44)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.46() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !166 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.30)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.45)
  ret void
}

; Function Attrs: nounwind
declare void @cc_initialize_gcroots_in_module({ i8*, i8*, i64 }*, {}**, i64, {}*) local_unnamed_addr #1

; Function Attrs: uwtable
define internal void @CLASP-CTOR() #0 personality i32 (...)* @__gxx_personality_v0 {
entry:
  tail call void @cc_register_startup_function(void ()* nonnull @RUN-ALL)
  ret void
}

declare void @cc_register_startup_function(void ()*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @cc_error_too_few_arguments(i64, i64, %0*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @cc_error_too_many_arguments(i64, i64, %0*) local_unnamed_addr #6

attributes #0 = { uwtable "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #1 = { nounwind "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #2 = { ssp uwtable "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #3 = { "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #4 = { nounwind readnone speculatable "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #5 = { nounwind uwtable "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn }

!llvm.ident = !{!0, !1}
!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!5, !6, !7, !8}

!0 = !{!"Clasp"}
!1 = !{!"clang version 5.0.1 (tags/RELEASE_501/final)"}
!2 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !3, producer: "clasp Common Lisp compiler", isOptimized: false, flags: "-v", runtimeVersion: 1, splitDebugFilename: "the-split-name.log", emissionKind: LineTablesOnly, enums: !4)
!3 = !DIFile(filename: "yas=yasos.lisp", directory: "/Users/karstenpoeck/lisp/coke/program")
!4 = !{}
!5 = !{i32 2, !"Dwarf Version", i32 4}
!6 = !{i32 2, !"Debug Info Version", i32 3}
!7 = !{i32 1, !"wchar_size", i32 4}
!8 = !{i32 7, !"PIC Level", i32 2}
!9 = distinct !DISubprogram(name: "RUN-ALL", linkageName: "RUN-ALL", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!10 = !DISubroutineType(types: !11)
!11 = !{!12}
!12 = !DIBasicType(name: "int", size: 64, encoding: DW_ATE_signed_fixed)
!13 = distinct !DISubprogram(name: "yas=yasos.lisp^1^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^1^TOP-COMPILE-FILE", scope: !3, file: !3, line: 1, type: !10, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !2, variables: !4)
!14 = !{!15, !19, i64 16}
!15 = !{!"_ZTS13__va_list_tag", !16, i64 0, !16, i64 4, !19, i64 8, !19, i64 16}
!16 = !{!"int", !17, i64 0}
!17 = !{!"omnipotent char", !18, i64 0}
!18 = !{!"Simple C++ TBAA"}
!19 = !{!"any pointer", !17, i64 0}
!20 = !{!15, !16, i64 0}
!21 = !{!22, !22, i64 0}
!22 = !{!"long", !17, i64 0}
!23 = distinct !DISubprogram(name: "yas=yasos.lisp^73^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^73^TOP-COMPILE-FILE", scope: !3, file: !3, line: 73, type: !10, isLocal: false, isDefinition: true, scopeLine: 73, isOptimized: false, unit: !2, variables: !4)
!24 = distinct !DISubprogram(name: "yas=yasos.lisp^74^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^74^TOP-COMPILE-FILE", scope: !3, file: !3, line: 74, type: !10, isLocal: false, isDefinition: true, scopeLine: 74, isOptimized: false, unit: !2, variables: !4)
!25 = distinct !DISubprogram(name: "yas=yasos.lisp^76^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^76^TOP-COMPILE-FILE", scope: !3, file: !3, line: 76, type: !10, isLocal: false, isDefinition: true, scopeLine: 76, isOptimized: false, unit: !2, variables: !4)
!26 = distinct !DISubprogram(name: "yas=yasos.lisp^79^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^79^TOP-COMPILE-FILE", scope: !3, file: !3, line: 79, type: !10, isLocal: false, isDefinition: true, scopeLine: 79, isOptimized: false, unit: !2, variables: !4)
!27 = distinct !DISubprogram(name: "yas=yasos.lisp^82^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^82^TOP-COMPILE-FILE", scope: !3, file: !3, line: 82, type: !10, isLocal: false, isDefinition: true, scopeLine: 82, isOptimized: false, unit: !2, variables: !4)
!28 = distinct !DISubprogram(name: "%SET-SYMBOL-PLIST^COMMON-LISP-USER^FN^^", linkageName: "%SET-SYMBOL-PLIST^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 82, type: !10, isLocal: false, isDefinition: true, scopeLine: 82, isOptimized: false, unit: !2, variables: !4)
!29 = distinct !DISubprogram(name: "yas=yasos.lisp^86^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^86^TOP-COMPILE-FILE", scope: !3, file: !3, line: 86, type: !10, isLocal: false, isDefinition: true, scopeLine: 86, isOptimized: false, unit: !2, variables: !4)
!30 = distinct !DISubprogram(name: "YAS=INIT_OBJEKTE^COMMON-LISP-USER^FN^^", linkageName: "YAS=INIT_OBJEKTE^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 86, type: !10, isLocal: false, isDefinition: true, scopeLine: 86, isOptimized: false, unit: !2, variables: !4)
!31 = distinct !DISubprogram(name: "yas=yasos.lisp^94^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^94^TOP-COMPILE-FILE", scope: !3, file: !3, line: 94, type: !10, isLocal: false, isDefinition: true, scopeLine: 94, isOptimized: false, unit: !2, variables: !4)
!32 = distinct !DISubprogram(name: "yas=yasos.lisp^96^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^96^TOP-COMPILE-FILE", scope: !3, file: !3, line: 96, type: !10, isLocal: false, isDefinition: true, scopeLine: 96, isOptimized: false, unit: !2, variables: !4)
!33 = distinct !DISubprogram(name: "YAS-AUSGABE_EIN_OBJEKT^COMMON-LISP-USER^FN^^", linkageName: "YAS-AUSGABE_EIN_OBJEKT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 96, type: !10, isLocal: false, isDefinition: true, scopeLine: 96, isOptimized: false, unit: !2, variables: !4)
!34 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 96, type: !10, isLocal: false, isDefinition: true, scopeLine: 96, isOptimized: false, unit: !2, variables: !4)
!35 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 96, type: !10, isLocal: false, isDefinition: true, scopeLine: 96, isOptimized: false, unit: !2, variables: !4)
!36 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 96, type: !10, isLocal: false, isDefinition: true, scopeLine: 96, isOptimized: false, unit: !2, variables: !4)
!37 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 96, type: !10, isLocal: false, isDefinition: true, scopeLine: 96, isOptimized: false, unit: !2, variables: !4)
!38 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 96, type: !10, isLocal: false, isDefinition: true, scopeLine: 96, isOptimized: false, unit: !2, variables: !4)
!39 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 96, type: !10, isLocal: false, isDefinition: true, scopeLine: 96, isOptimized: false, unit: !2, variables: !4)
!40 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 96, type: !10, isLocal: false, isDefinition: true, scopeLine: 96, isOptimized: false, unit: !2, variables: !4)
!41 = distinct !DISubprogram(name: "yas=yasos.lisp^144^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^144^TOP-COMPILE-FILE", scope: !3, file: !3, line: 144, type: !10, isLocal: false, isDefinition: true, scopeLine: 144, isOptimized: false, unit: !2, variables: !4)
!42 = distinct !DISubprogram(name: "YAS-SPEICHER_NACH_UNTEN^COMMON-LISP-USER^FN^^", linkageName: "YAS-SPEICHER_NACH_UNTEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 144, type: !10, isLocal: false, isDefinition: true, scopeLine: 144, isOptimized: false, unit: !2, variables: !4)
!43 = distinct !DISubprogram(name: "yas=yasos.lisp^201^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^201^TOP-COMPILE-FILE", scope: !3, file: !3, line: 201, type: !10, isLocal: false, isDefinition: true, scopeLine: 201, isOptimized: false, unit: !2, variables: !4)
!44 = distinct !DISubprogram(name: "YAS-SPEICHER_EIN_OBJEKT^COMMON-LISP-USER^FN^^", linkageName: "YAS-SPEICHER_EIN_OBJEKT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 201, type: !10, isLocal: false, isDefinition: true, scopeLine: 201, isOptimized: false, unit: !2, variables: !4)
!45 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 201, type: !10, isLocal: false, isDefinition: true, scopeLine: 201, isOptimized: false, unit: !2, variables: !4)
!46 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 201, type: !10, isLocal: false, isDefinition: true, scopeLine: 201, isOptimized: false, unit: !2, variables: !4)
!47 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 201, type: !10, isLocal: false, isDefinition: true, scopeLine: 201, isOptimized: false, unit: !2, variables: !4)
!48 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 201, type: !10, isLocal: false, isDefinition: true, scopeLine: 201, isOptimized: false, unit: !2, variables: !4)
!49 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 201, type: !10, isLocal: false, isDefinition: true, scopeLine: 201, isOptimized: false, unit: !2, variables: !4)
!50 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 201, type: !10, isLocal: false, isDefinition: true, scopeLine: 201, isOptimized: false, unit: !2, variables: !4)
!51 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 201, type: !10, isLocal: false, isDefinition: true, scopeLine: 201, isOptimized: false, unit: !2, variables: !4)
!52 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 201, type: !10, isLocal: false, isDefinition: true, scopeLine: 201, isOptimized: false, unit: !2, variables: !4)
!53 = distinct !DISubprogram(name: "yas=yasos.lisp^228^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^228^TOP-COMPILE-FILE", scope: !3, file: !3, line: 228, type: !10, isLocal: false, isDefinition: true, scopeLine: 228, isOptimized: false, unit: !2, variables: !4)
!54 = distinct !DISubprogram(name: "YAS=ALLE_OBJEKTE^COMMON-LISP-USER^FN^^", linkageName: "YAS=ALLE_OBJEKTE^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 228, type: !10, isLocal: false, isDefinition: true, scopeLine: 228, isOptimized: false, unit: !2, variables: !4)
!55 = distinct !DISubprogram(name: "yas=yasos.lisp^231^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^231^TOP-COMPILE-FILE", scope: !3, file: !3, line: 231, type: !10, isLocal: false, isDefinition: true, scopeLine: 231, isOptimized: false, unit: !2, variables: !4)
!56 = distinct !DISubprogram(name: "YAS=NEUE_KLASSE^COMMON-LISP-USER^FN^^", linkageName: "YAS=NEUE_KLASSE^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 231, type: !10, isLocal: false, isDefinition: true, scopeLine: 231, isOptimized: false, unit: !2, variables: !4)
!57 = distinct !DISubprogram(name: "yas=yasos.lisp^294^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^294^TOP-COMPILE-FILE", scope: !3, file: !3, line: 294, type: !10, isLocal: false, isDefinition: true, scopeLine: 294, isOptimized: false, unit: !2, variables: !4)
!58 = distinct !DISubprogram(name: "YAS=NEUE_INSTANZ^COMMON-LISP-USER^FN^^", linkageName: "YAS=NEUE_INSTANZ^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 294, type: !10, isLocal: false, isDefinition: true, scopeLine: 294, isOptimized: false, unit: !2, variables: !4)
!59 = distinct !DISubprogram(name: "yas=yasos.lisp^322^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^322^TOP-COMPILE-FILE", scope: !3, file: !3, line: 322, type: !10, isLocal: false, isDefinition: true, scopeLine: 322, isOptimized: false, unit: !2, variables: !4)
!60 = distinct !DISubprogram(name: "YAS=KLASSE_WECHSELN^COMMON-LISP-USER^FN^^", linkageName: "YAS=KLASSE_WECHSELN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 322, type: !10, isLocal: false, isDefinition: true, scopeLine: 322, isOptimized: false, unit: !2, variables: !4)
!61 = distinct !DISubprogram(name: "yas=yasos.lisp^335^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^335^TOP-COMPILE-FILE", scope: !3, file: !3, line: 335, type: !10, isLocal: false, isDefinition: true, scopeLine: 335, isOptimized: false, unit: !2, variables: !4)
!62 = distinct !DISubprogram(name: "YAS=DER_VATER^COMMON-LISP-USER^FN^^", linkageName: "YAS=DER_VATER^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 335, type: !10, isLocal: false, isDefinition: true, scopeLine: 335, isOptimized: false, unit: !2, variables: !4)
!63 = distinct !DISubprogram(name: "yas=yasos.lisp^344^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^344^TOP-COMPILE-FILE", scope: !3, file: !3, line: 344, type: !10, isLocal: false, isDefinition: true, scopeLine: 344, isOptimized: false, unit: !2, variables: !4)
!64 = distinct !DISubprogram(name: "YAS=LOESCHE_OBJEKT^COMMON-LISP-USER^FN^^", linkageName: "YAS=LOESCHE_OBJEKT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 344, type: !10, isLocal: false, isDefinition: true, scopeLine: 344, isOptimized: false, unit: !2, variables: !4)
!65 = distinct !DISubprogram(name: "yas=yasos.lisp^358^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^358^TOP-COMPILE-FILE", scope: !3, file: !3, line: 358, type: !10, isLocal: false, isDefinition: true, scopeLine: 358, isOptimized: false, unit: !2, variables: !4)
!66 = distinct !DISubprogram(name: "YAS=ALLES_LOESCHEN^COMMON-LISP-USER^FN^^", linkageName: "YAS=ALLES_LOESCHEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 358, type: !10, isLocal: false, isDefinition: true, scopeLine: 358, isOptimized: false, unit: !2, variables: !4)
!67 = distinct !DISubprogram(name: "yas=yasos.lisp^364^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^364^TOP-COMPILE-FILE", scope: !3, file: !3, line: 364, type: !10, isLocal: false, isDefinition: true, scopeLine: 364, isOptimized: false, unit: !2, variables: !4)
!68 = distinct !DISubprogram(name: "YAS=LOESCHE_ALLE_KINDER^COMMON-LISP-USER^FN^^", linkageName: "YAS=LOESCHE_ALLE_KINDER^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 364, type: !10, isLocal: false, isDefinition: true, scopeLine: 364, isOptimized: false, unit: !2, variables: !4)
!69 = distinct !DISubprogram(name: "yas=yasos.lisp^377^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^377^TOP-COMPILE-FILE", scope: !3, file: !3, line: 377, type: !10, isLocal: false, isDefinition: true, scopeLine: 377, isOptimized: false, unit: !2, variables: !4)
!70 = distinct !DISubprogram(name: "YAS=EINE_KLASSE_P^COMMON-LISP-USER^FN^^", linkageName: "YAS=EINE_KLASSE_P^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 377, type: !10, isLocal: false, isDefinition: true, scopeLine: 377, isOptimized: false, unit: !2, variables: !4)
!71 = distinct !DISubprogram(name: "yas=yasos.lisp^382^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^382^TOP-COMPILE-FILE", scope: !3, file: !3, line: 382, type: !10, isLocal: false, isDefinition: true, scopeLine: 382, isOptimized: false, unit: !2, variables: !4)
!72 = distinct !DISubprogram(name: "YAS=EINE_INSTANZ_P^COMMON-LISP-USER^FN^^", linkageName: "YAS=EINE_INSTANZ_P^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 382, type: !10, isLocal: false, isDefinition: true, scopeLine: 382, isOptimized: false, unit: !2, variables: !4)
!73 = distinct !DISubprogram(name: "yas=yasos.lisp^387^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^387^TOP-COMPILE-FILE", scope: !3, file: !3, line: 387, type: !10, isLocal: false, isDefinition: true, scopeLine: 387, isOptimized: false, unit: !2, variables: !4)
!74 = distinct !DISubprogram(name: "YAS=EIN_OBJEKT_P^COMMON-LISP-USER^FN^^", linkageName: "YAS=EIN_OBJEKT_P^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 387, type: !10, isLocal: false, isDefinition: true, scopeLine: 387, isOptimized: false, unit: !2, variables: !4)
!75 = distinct !DISubprogram(name: "yas=yasos.lisp^394^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^394^TOP-COMPILE-FILE", scope: !3, file: !3, line: 394, type: !10, isLocal: false, isDefinition: true, scopeLine: 394, isOptimized: false, unit: !2, variables: !4)
!76 = distinct !DISubprogram(name: "YAS=SORTIERE_KLASSE^COMMON-LISP-USER^FN^^", linkageName: "YAS=SORTIERE_KLASSE^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 394, type: !10, isLocal: false, isDefinition: true, scopeLine: 394, isOptimized: false, unit: !2, variables: !4)
!77 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 394, type: !10, isLocal: false, isDefinition: true, scopeLine: 394, isOptimized: false, unit: !2, variables: !4)
!78 = distinct !DISubprogram(name: "yas=yasos.lisp^403^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^403^TOP-COMPILE-FILE", scope: !3, file: !3, line: 403, type: !10, isLocal: false, isDefinition: true, scopeLine: 403, isOptimized: false, unit: !2, variables: !4)
!79 = distinct !DISubprogram(name: "YAS-SCHREIBE_INFORMANT^COMMON-LISP-USER^FN^^", linkageName: "YAS-SCHREIBE_INFORMANT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 403, type: !10, isLocal: false, isDefinition: true, scopeLine: 403, isOptimized: false, unit: !2, variables: !4)
!80 = distinct !DISubprogram(name: "yas=yasos.lisp^410^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^410^TOP-COMPILE-FILE", scope: !3, file: !3, line: 410, type: !10, isLocal: false, isDefinition: true, scopeLine: 410, isOptimized: false, unit: !2, variables: !4)
!81 = distinct !DISubprogram(name: "YAS=LESE_INFORMANT^COMMON-LISP-USER^FN^^", linkageName: "YAS=LESE_INFORMANT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 410, type: !10, isLocal: false, isDefinition: true, scopeLine: 410, isOptimized: false, unit: !2, variables: !4)
!82 = distinct !DISubprogram(name: "yas=yasos.lisp^422^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^422^TOP-COMPILE-FILE", scope: !3, file: !3, line: 422, type: !10, isLocal: false, isDefinition: true, scopeLine: 422, isOptimized: false, unit: !2, variables: !4)
!83 = distinct !DISubprogram(name: "YAS=NEUER_SLOT^COMMON-LISP-USER^FN^^", linkageName: "YAS=NEUER_SLOT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 422, type: !10, isLocal: false, isDefinition: true, scopeLine: 422, isOptimized: false, unit: !2, variables: !4)
!84 = distinct !DISubprogram(name: "yas=yasos.lisp^436^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^436^TOP-COMPILE-FILE", scope: !3, file: !3, line: 436, type: !10, isLocal: false, isDefinition: true, scopeLine: 436, isOptimized: false, unit: !2, variables: !4)
!85 = distinct !DISubprogram(name: "YAS=LOESCHE_SLOT^COMMON-LISP-USER^FN^^", linkageName: "YAS=LOESCHE_SLOT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 436, type: !10, isLocal: false, isDefinition: true, scopeLine: 436, isOptimized: false, unit: !2, variables: !4)
!86 = distinct !DISubprogram(name: "yas=yasos.lisp^447^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^447^TOP-COMPILE-FILE", scope: !3, file: !3, line: 447, type: !10, isLocal: false, isDefinition: true, scopeLine: 447, isOptimized: false, unit: !2, variables: !4)
!87 = distinct !DISubprogram(name: "YAS=HAT_OBJEKT_SLOT_P^COMMON-LISP-USER^FN^^", linkageName: "YAS=HAT_OBJEKT_SLOT_P^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 447, type: !10, isLocal: false, isDefinition: true, scopeLine: 447, isOptimized: false, unit: !2, variables: !4)
!88 = distinct !DISubprogram(name: "yas=yasos.lisp^456^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^456^TOP-COMPILE-FILE", scope: !3, file: !3, line: 456, type: !10, isLocal: false, isDefinition: true, scopeLine: 456, isOptimized: false, unit: !2, variables: !4)
!89 = distinct !DISubprogram(name: "YAS=ALLE_SLOTS^COMMON-LISP-USER^FN^^", linkageName: "YAS=ALLE_SLOTS^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 456, type: !10, isLocal: false, isDefinition: true, scopeLine: 456, isOptimized: false, unit: !2, variables: !4)
!90 = distinct !DISubprogram(name: "yas=yasos.lisp^466^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^466^TOP-COMPILE-FILE", scope: !3, file: !3, line: 466, type: !10, isLocal: false, isDefinition: true, scopeLine: 466, isOptimized: false, unit: !2, variables: !4)
!91 = distinct !DISubprogram(name: "YAS=AUCH_ERERBTE_SLOTS^COMMON-LISP-USER^FN^^", linkageName: "YAS=AUCH_ERERBTE_SLOTS^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 466, type: !10, isLocal: false, isDefinition: true, scopeLine: 466, isOptimized: false, unit: !2, variables: !4)
!92 = distinct !DISubprogram(name: "yas=yasos.lisp^476^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^476^TOP-COMPILE-FILE", scope: !3, file: !3, line: 476, type: !10, isLocal: false, isDefinition: true, scopeLine: 476, isOptimized: false, unit: !2, variables: !4)
!93 = distinct !DISubprogram(name: "YAS=BENUTZER_+_ERERBETE_SLOTS^COMMON-LISP-USER^FN^^", linkageName: "YAS=BENUTZER_+_ERERBETE_SLOTS^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 476, type: !10, isLocal: false, isDefinition: true, scopeLine: 476, isOptimized: false, unit: !2, variables: !4)
!94 = distinct !DISubprogram(name: "yas=yasos.lisp^480^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^480^TOP-COMPILE-FILE", scope: !3, file: !3, line: 480, type: !10, isLocal: false, isDefinition: true, scopeLine: 480, isOptimized: false, unit: !2, variables: !4)
!95 = distinct !DISubprogram(name: "YAS=BENUTZER_SLOTS^COMMON-LISP-USER^FN^^", linkageName: "YAS=BENUTZER_SLOTS^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 480, type: !10, isLocal: false, isDefinition: true, scopeLine: 480, isOptimized: false, unit: !2, variables: !4)
!96 = distinct !DISubprogram(name: "yas=yasos.lisp^487^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^487^TOP-COMPILE-FILE", scope: !3, file: !3, line: 487, type: !10, isLocal: false, isDefinition: true, scopeLine: 487, isOptimized: false, unit: !2, variables: !4)
!97 = distinct !DISubprogram(name: "YAS=LESE_WERT^COMMON-LISP-USER^FN^^", linkageName: "YAS=LESE_WERT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 487, type: !10, isLocal: false, isDefinition: true, scopeLine: 487, isOptimized: false, unit: !2, variables: !4)
!98 = distinct !DISubprogram(name: "yas=yasos.lisp^517^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^517^TOP-COMPILE-FILE", scope: !3, file: !3, line: 517, type: !10, isLocal: false, isDefinition: true, scopeLine: 517, isOptimized: false, unit: !2, variables: !4)
!99 = distinct !DISubprogram(name: "YAS=SCHREIBE_WERT^COMMON-LISP-USER^FN^^", linkageName: "YAS=SCHREIBE_WERT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 517, type: !10, isLocal: false, isDefinition: true, scopeLine: 517, isOptimized: false, unit: !2, variables: !4)
!100 = distinct !DISubprogram(name: "yas=yasos.lisp^539^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^539^TOP-COMPILE-FILE", scope: !3, file: !3, line: 539, type: !10, isLocal: false, isDefinition: true, scopeLine: 539, isOptimized: false, unit: !2, variables: !4)
!101 = distinct !DISubprogram(name: "YAS-ENTHALTEN^COMMON-LISP-USER^FN^^", linkageName: "YAS-ENTHALTEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 539, type: !10, isLocal: false, isDefinition: true, scopeLine: 539, isOptimized: false, unit: !2, variables: !4)
!102 = distinct !DISubprogram(name: "yas=yasos.lisp^547^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^547^TOP-COMPILE-FILE", scope: !3, file: !3, line: 547, type: !10, isLocal: false, isDefinition: true, scopeLine: 547, isOptimized: false, unit: !2, variables: !4)
!103 = distinct !DISubprogram(name: "YAS=SCHREIBE_ZUSAETZLICHEN_WERT^COMMON-LISP-USER^FN^^", linkageName: "YAS=SCHREIBE_ZUSAETZLICHEN_WERT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 547, type: !10, isLocal: false, isDefinition: true, scopeLine: 547, isOptimized: false, unit: !2, variables: !4)
!104 = distinct !DISubprogram(name: "yas=yasos.lisp^565^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^565^TOP-COMPILE-FILE", scope: !3, file: !3, line: 565, type: !10, isLocal: false, isDefinition: true, scopeLine: 565, isOptimized: false, unit: !2, variables: !4)
!105 = distinct !DISubprogram(name: "YAS=LOESCHE_WERT^COMMON-LISP-USER^FN^^", linkageName: "YAS=LOESCHE_WERT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 565, type: !10, isLocal: false, isDefinition: true, scopeLine: 565, isOptimized: false, unit: !2, variables: !4)
!106 = distinct !DISubprogram(name: "yas=yasos.lisp^591^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^591^TOP-COMPILE-FILE", scope: !3, file: !3, line: 591, type: !10, isLocal: false, isDefinition: true, scopeLine: 591, isOptimized: false, unit: !2, variables: !4)
!107 = distinct !DISubprogram(name: "YAS=LOESCHE_EINEN_WERT^COMMON-LISP-USER^FN^^", linkageName: "YAS=LOESCHE_EINEN_WERT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 591, type: !10, isLocal: false, isDefinition: true, scopeLine: 591, isOptimized: false, unit: !2, variables: !4)
!108 = distinct !DISubprogram(name: "yas=yasos.lisp^609^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^609^TOP-COMPILE-FILE", scope: !3, file: !3, line: 609, type: !10, isLocal: false, isDefinition: true, scopeLine: 609, isOptimized: false, unit: !2, variables: !4)
!109 = distinct !DISubprogram(name: "YAS=DEFINIERE_METHODE^COMMON-LISP-USER^FN^^", linkageName: "YAS=DEFINIERE_METHODE^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 609, type: !10, isLocal: false, isDefinition: true, scopeLine: 609, isOptimized: false, unit: !2, variables: !4)
!110 = distinct !DISubprogram(name: "yas=yasos.lisp^617^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^617^TOP-COMPILE-FILE", scope: !3, file: !3, line: 617, type: !10, isLocal: false, isDefinition: true, scopeLine: 617, isOptimized: false, unit: !2, variables: !4)
!111 = distinct !DISubprogram(name: "YAS=DEFINIERE_METHODE_NEU^COMMON-LISP-USER^FN^^", linkageName: "YAS=DEFINIERE_METHODE_NEU^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 617, type: !10, isLocal: false, isDefinition: true, scopeLine: 617, isOptimized: false, unit: !2, variables: !4)
!112 = distinct !DISubprogram(name: "yas=yasos.lisp^626^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^626^TOP-COMPILE-FILE", scope: !3, file: !3, line: 626, type: !10, isLocal: false, isDefinition: true, scopeLine: 626, isOptimized: false, unit: !2, variables: !4)
!113 = distinct !DISubprogram(name: "YAS=TUE_METHODE^COMMON-LISP-USER^FN^^", linkageName: "YAS=TUE_METHODE^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 626, type: !10, isLocal: false, isDefinition: true, scopeLine: 626, isOptimized: false, unit: !2, variables: !4)
!114 = distinct !DISubprogram(name: "yas=yasos.lisp^643^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^643^TOP-COMPILE-FILE", scope: !3, file: !3, line: 643, type: !10, isLocal: false, isDefinition: true, scopeLine: 643, isOptimized: false, unit: !2, variables: !4)
!115 = distinct !DISubprogram(name: "YAS=ALTER_WERT^COMMON-LISP-USER^FN^^", linkageName: "YAS=ALTER_WERT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 643, type: !10, isLocal: false, isDefinition: true, scopeLine: 643, isOptimized: false, unit: !2, variables: !4)
!116 = distinct !DISubprogram(name: "yas=yasos.lisp^655^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^655^TOP-COMPILE-FILE", scope: !3, file: !3, line: 655, type: !10, isLocal: false, isDefinition: true, scopeLine: 655, isOptimized: false, unit: !2, variables: !4)
!117 = distinct !DISubprogram(name: "YAS-ALTER_INFORMANT^COMMON-LISP-USER^FN^^", linkageName: "YAS-ALTER_INFORMANT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 655, type: !10, isLocal: false, isDefinition: true, scopeLine: 655, isOptimized: false, unit: !2, variables: !4)
!118 = distinct !DISubprogram(name: "yas=yasos.lisp^667^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^667^TOP-COMPILE-FILE", scope: !3, file: !3, line: 667, type: !10, isLocal: false, isDefinition: true, scopeLine: 667, isOptimized: false, unit: !2, variables: !4)
!119 = distinct !DISubprogram(name: "YAS=ALLE^COMMON-LISP-USER^FN^^", linkageName: "YAS=ALLE^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 667, type: !10, isLocal: false, isDefinition: true, scopeLine: 667, isOptimized: false, unit: !2, variables: !4)
!120 = distinct !DISubprogram(name: "yas=yasos.lisp^671^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^671^TOP-COMPILE-FILE", scope: !3, file: !3, line: 671, type: !10, isLocal: false, isDefinition: true, scopeLine: 671, isOptimized: false, unit: !2, variables: !4)
!121 = distinct !DISubprogram(name: "YAS-LOESCHE_NACH_UNTEN^COMMON-LISP-USER^FN^^", linkageName: "YAS-LOESCHE_NACH_UNTEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 671, type: !10, isLocal: false, isDefinition: true, scopeLine: 671, isOptimized: false, unit: !2, variables: !4)
!122 = distinct !DISubprogram(name: "yas=yasos.lisp^683^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^683^TOP-COMPILE-FILE", scope: !3, file: !3, line: 683, type: !10, isLocal: false, isDefinition: true, scopeLine: 683, isOptimized: false, unit: !2, variables: !4)
!123 = distinct !DISubprogram(name: "YAS-MERKE_OBJEKT^COMMON-LISP-USER^FN^^", linkageName: "YAS-MERKE_OBJEKT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 683, type: !10, isLocal: false, isDefinition: true, scopeLine: 683, isOptimized: false, unit: !2, variables: !4)
!124 = distinct !DISubprogram(name: "yas=yasos.lisp^687^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^687^TOP-COMPILE-FILE", scope: !3, file: !3, line: 687, type: !10, isLocal: false, isDefinition: true, scopeLine: 687, isOptimized: false, unit: !2, variables: !4)
!125 = distinct !DISubprogram(name: "YAS-VERGESSE_OBJEKT^COMMON-LISP-USER^FN^^", linkageName: "YAS-VERGESSE_OBJEKT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 687, type: !10, isLocal: false, isDefinition: true, scopeLine: 687, isOptimized: false, unit: !2, variables: !4)
!126 = distinct !DISubprogram(name: "yas=yasos.lisp^692^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^692^TOP-COMPILE-FILE", scope: !3, file: !3, line: 692, type: !10, isLocal: false, isDefinition: true, scopeLine: 692, isOptimized: false, unit: !2, variables: !4)
!127 = distinct !DISubprogram(name: "YAS-VERGESSE_OBJEKTE^COMMON-LISP-USER^FN^^", linkageName: "YAS-VERGESSE_OBJEKTE^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 692, type: !10, isLocal: false, isDefinition: true, scopeLine: 692, isOptimized: false, unit: !2, variables: !4)
!128 = distinct !DISubprogram(name: "yas=yasos.lisp^698^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^698^TOP-COMPILE-FILE", scope: !3, file: !3, line: 698, type: !10, isLocal: false, isDefinition: true, scopeLine: 698, isOptimized: false, unit: !2, variables: !4)
!129 = distinct !DISubprogram(name: "YAS-LOESCHE_SYMBOL^COMMON-LISP-USER^FN^^", linkageName: "YAS-LOESCHE_SYMBOL^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 698, type: !10, isLocal: false, isDefinition: true, scopeLine: 698, isOptimized: false, unit: !2, variables: !4)
!130 = distinct !DISubprogram(name: "yas=yasos.lisp^702^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^702^TOP-COMPILE-FILE", scope: !3, file: !3, line: 702, type: !10, isLocal: false, isDefinition: true, scopeLine: 702, isOptimized: false, unit: !2, variables: !4)
!131 = distinct !DISubprogram(name: "YAS-SICHER_WERT^COMMON-LISP-USER^FN^^", linkageName: "YAS-SICHER_WERT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 702, type: !10, isLocal: false, isDefinition: true, scopeLine: 702, isOptimized: false, unit: !2, variables: !4)
!132 = distinct !DISubprogram(name: "yas=yasos.lisp^714^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^714^TOP-COMPILE-FILE", scope: !3, file: !3, line: 714, type: !10, isLocal: false, isDefinition: true, scopeLine: 714, isOptimized: false, unit: !2, variables: !4)
!133 = distinct !DISubprogram(name: "YAS-VERGESSE_WERT^COMMON-LISP-USER^FN^^", linkageName: "YAS-VERGESSE_WERT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 714, type: !10, isLocal: false, isDefinition: true, scopeLine: 714, isOptimized: false, unit: !2, variables: !4)
!134 = distinct !DISubprogram(name: "yas=yasos.lisp^720^TOP-COMPILE-FILE", linkageName: "yas=yasos.lisp^720^TOP-COMPILE-FILE", scope: !3, file: !3, line: 720, type: !10, isLocal: false, isDefinition: true, scopeLine: 720, isOptimized: false, unit: !2, variables: !4)
!135 = distinct !DISubprogram(name: "YAS-TESTE_OBJEKT^COMMON-LISP-USER^FN^^", linkageName: "YAS-TESTE_OBJEKT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 720, type: !10, isLocal: false, isDefinition: true, scopeLine: 720, isOptimized: false, unit: !2, variables: !4)
!136 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 720, type: !10, isLocal: false, isDefinition: true, scopeLine: 720, isOptimized: false, unit: !2, variables: !4)
!137 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 720, type: !10, isLocal: false, isDefinition: true, scopeLine: 720, isOptimized: false, unit: !2, variables: !4)
!138 = distinct !DISubprogram(name: "RUN-ALL.18", linkageName: "RUN-ALL.18", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!139 = distinct !DISubprogram(name: "RUN-ALL.19", linkageName: "RUN-ALL.19", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!140 = distinct !DISubprogram(name: "RUN-ALL.20", linkageName: "RUN-ALL.20", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!141 = distinct !DISubprogram(name: "RUN-ALL.21", linkageName: "RUN-ALL.21", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!142 = distinct !DISubprogram(name: "RUN-ALL.22", linkageName: "RUN-ALL.22", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!143 = distinct !DISubprogram(name: "RUN-ALL.23", linkageName: "RUN-ALL.23", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!144 = distinct !DISubprogram(name: "RUN-ALL.24", linkageName: "RUN-ALL.24", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!145 = distinct !DISubprogram(name: "RUN-ALL.25", linkageName: "RUN-ALL.25", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!146 = distinct !DISubprogram(name: "RUN-ALL.26", linkageName: "RUN-ALL.26", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!147 = distinct !DISubprogram(name: "RUN-ALL.27", linkageName: "RUN-ALL.27", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!148 = distinct !DISubprogram(name: "RUN-ALL.28", linkageName: "RUN-ALL.28", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!149 = distinct !DISubprogram(name: "RUN-ALL.29", linkageName: "RUN-ALL.29", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!150 = distinct !DISubprogram(name: "RUN-ALL.30", linkageName: "RUN-ALL.30", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!151 = distinct !DISubprogram(name: "RUN-ALL.31", linkageName: "RUN-ALL.31", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!152 = distinct !DISubprogram(name: "RUN-ALL.32", linkageName: "RUN-ALL.32", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!153 = distinct !DISubprogram(name: "RUN-ALL.33", linkageName: "RUN-ALL.33", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!154 = distinct !DISubprogram(name: "RUN-ALL.34", linkageName: "RUN-ALL.34", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!155 = distinct !DISubprogram(name: "RUN-ALL.35", linkageName: "RUN-ALL.35", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!156 = distinct !DISubprogram(name: "RUN-ALL.36", linkageName: "RUN-ALL.36", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!157 = distinct !DISubprogram(name: "RUN-ALL.37", linkageName: "RUN-ALL.37", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!158 = distinct !DISubprogram(name: "RUN-ALL.38", linkageName: "RUN-ALL.38", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!159 = distinct !DISubprogram(name: "RUN-ALL.39", linkageName: "RUN-ALL.39", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!160 = distinct !DISubprogram(name: "RUN-ALL.40", linkageName: "RUN-ALL.40", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!161 = distinct !DISubprogram(name: "RUN-ALL.41", linkageName: "RUN-ALL.41", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!162 = distinct !DISubprogram(name: "RUN-ALL.42", linkageName: "RUN-ALL.42", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!163 = distinct !DISubprogram(name: "RUN-ALL.43", linkageName: "RUN-ALL.43", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!164 = distinct !DISubprogram(name: "RUN-ALL.44", linkageName: "RUN-ALL.44", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!165 = distinct !DISubprogram(name: "RUN-ALL.45", linkageName: "RUN-ALL.45", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!166 = distinct !DISubprogram(name: "RUN-ALL.46", linkageName: "RUN-ALL.46", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
